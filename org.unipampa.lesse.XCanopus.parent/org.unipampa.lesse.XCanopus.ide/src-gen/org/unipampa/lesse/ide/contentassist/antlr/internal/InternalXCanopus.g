/*
 * generated by Xtext 2.16.0
 */
grammar InternalXCanopus;

options {
	superClass=AbstractInternalContentAssistParser;
}

@lexer::header {
package org.unipampa.lesse.ide.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package org.unipampa.lesse.ide.contentassist.antlr.internal;

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.DFA;
import org.unipampa.lesse.services.XCanopusGrammarAccess;

}
@parser::members {
	private XCanopusGrammarAccess grammarAccess;

	public void setGrammarAccess(XCanopusGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}

	@Override
	protected Grammar getGrammar() {
		return grammarAccess.getGrammar();
	}

	@Override
	protected String getValueForTokenName(String tokenName) {
		return tokenName;
	}
}

// Entry rule entryRuleModel
entryRuleModel
:
{ before(grammarAccess.getModelRule()); }
	 ruleModel
{ after(grammarAccess.getModelRule()); } 
	 EOF 
;

// Rule Model
ruleModel 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getModelAccess().getMainAssignment()); }
		(rule__Model__MainAssignment)*
		{ after(grammarAccess.getModelAccess().getMainAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleMetricModel
entryRuleMetricModel
:
{ before(grammarAccess.getMetricModelRule()); }
	 ruleMetricModel
{ after(grammarAccess.getMetricModelRule()); } 
	 EOF 
;

// Rule MetricModel
ruleMetricModel 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getMetricModelAccess().getGroup()); }
		(rule__MetricModel__Group__0)
		{ after(grammarAccess.getMetricModelAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleMain
entryRuleMain
:
{ before(grammarAccess.getMainRule()); }
	 ruleMain
{ after(grammarAccess.getMainRule()); } 
	 EOF 
;

// Rule Main
ruleMain 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getMainAccess().getMainAssignment()); }
		(rule__Main__MainAssignment)
		{ after(grammarAccess.getMainAccess().getMainAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleFreetext
entryRuleFreetext
:
{ before(grammarAccess.getFreetextRule()); }
	 ruleFreetext
{ after(grammarAccess.getFreetextRule()); } 
	 EOF 
;

// Rule Freetext
ruleFreetext 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFreetextAccess().getEStringParserRuleCall()); }
		(ruleEString)*
		{ after(grammarAccess.getFreetextAccess().getEStringParserRuleCall()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSTEPS
entryRuleSTEPS
:
{ before(grammarAccess.getSTEPSRule()); }
	 ruleSTEPS
{ after(grammarAccess.getSTEPSRule()); } 
	 EOF 
;

// Rule STEPS
ruleSTEPS 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSTEPSAccess().getAlternatives()); }
		(rule__STEPS__Alternatives)
		{ after(grammarAccess.getSTEPSAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleand_workload
entryRuleand_workload
:
{ before(grammarAccess.getAnd_workloadRule()); }
	 ruleand_workload
{ after(grammarAccess.getAnd_workloadRule()); } 
	 EOF 
;

// Rule and_workload
ruleand_workload 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAnd_workloadAccess().getGroup()); }
		(rule__And_workload__Group__0)
		{ after(grammarAccess.getAnd_workloadAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleand_the_scenario
entryRuleand_the_scenario
:
{ before(grammarAccess.getAnd_the_scenarioRule()); }
	 ruleand_the_scenario
{ after(grammarAccess.getAnd_the_scenarioRule()); } 
	 EOF 
;

// Rule and_the_scenario
ruleand_the_scenario 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAnd_the_scenarioAccess().getGroup()); }
		(rule__And_the_scenario__Group__0)
		{ after(grammarAccess.getAnd_the_scenarioAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleand_atleast
entryRuleand_atleast
:
{ before(grammarAccess.getAnd_atleastRule()); }
	 ruleand_atleast
{ after(grammarAccess.getAnd_atleastRule()); } 
	 EOF 
;

// Rule and_atleast
ruleand_atleast 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAnd_atleastAccess().getGroup()); }
		(rule__And_atleast__Group__0)
		{ after(grammarAccess.getAnd_atleastAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleand_the_metric
entryRuleand_the_metric
:
{ before(grammarAccess.getAnd_the_metricRule()); }
	 ruleand_the_metric
{ after(grammarAccess.getAnd_the_metricRule()); } 
	 EOF 
;

// Rule and_the_metric
ruleand_the_metric 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAnd_the_metricAccess().getGroup()); }
		(rule__And_the_metric__Group__0)
		{ after(grammarAccess.getAnd_the_metricAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulewhen
entryRulewhen
:
{ before(grammarAccess.getWhenRule()); }
	 rulewhen
{ after(grammarAccess.getWhenRule()); } 
	 EOF 
;

// Rule when
rulewhen 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getWhenAccess().getGroup()); }
		(rule__When__Group__0)
		{ after(grammarAccess.getWhenAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulethen
entryRulethen
:
{ before(grammarAccess.getThenRule()); }
	 rulethen
{ after(grammarAccess.getThenRule()); } 
	 EOF 
;

// Rule then
rulethen 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getThenAccess().getGroup()); }
		(rule__Then__Group__0)
		{ after(grammarAccess.getThenAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulegiven
entryRulegiven
:
{ before(grammarAccess.getGivenRule()); }
	 rulegiven
{ after(grammarAccess.getGivenRule()); } 
	 EOF 
;

// Rule given
rulegiven 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getGivenAccess().getGroup()); }
		(rule__Given__Group__0)
		{ after(grammarAccess.getGivenAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSCENARIO
entryRuleSCENARIO
:
{ before(grammarAccess.getSCENARIORule()); }
	 ruleSCENARIO
{ after(grammarAccess.getSCENARIORule()); } 
	 EOF 
;

// Rule SCENARIO
ruleSCENARIO 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSCENARIOAccess().getGroup()); }
		(rule__SCENARIO__Group__0)
		{ after(grammarAccess.getSCENARIOAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSUT
entryRuleSUT
:
{ before(grammarAccess.getSUTRule()); }
	 ruleSUT
{ after(grammarAccess.getSUTRule()); } 
	 EOF 
;

// Rule SUT
ruleSUT 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSUTAccess().getGroup()); }
		(rule__SUT__Group__0)
		{ after(grammarAccess.getSUTAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEString
entryRuleEString
:
{ before(grammarAccess.getEStringRule()); }
	 ruleEString
{ after(grammarAccess.getEStringRule()); } 
	 EOF 
;

// Rule EString
ruleEString 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEStringAccess().getAlternatives()); }
		(rule__EString__Alternatives)
		{ after(grammarAccess.getEStringAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Rule METRICTYPEMONITORED
ruleMETRICTYPEMONITORED
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMETRICTYPEMONITOREDAccess().getAlternatives()); }
		(rule__METRICTYPEMONITORED__Alternatives)
		{ after(grammarAccess.getMETRICTYPEMONITOREDAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Rule METRICTYPE
ruleMETRICTYPE
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMETRICTYPEAccess().getAlternatives()); }
		(rule__METRICTYPE__Alternatives)
		{ after(grammarAccess.getMETRICTYPEAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Rule SUT_TYPE
ruleSUT_TYPE
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSUT_TYPEAccess().getAlternatives()); }
		(rule__SUT_TYPE__Alternatives)
		{ after(grammarAccess.getSUT_TYPEAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Main__MainAlternatives_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMainAccess().getMainMetricModelParserRuleCall_0_0()); }
		ruleMetricModel
		{ after(grammarAccess.getMainAccess().getMainMetricModelParserRuleCall_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getMainAccess().getMainSCENARIOParserRuleCall_0_1()); }
		ruleSCENARIO
		{ after(grammarAccess.getMainAccess().getMainSCENARIOParserRuleCall_0_1()); }
	)
	|
	(
		{ before(grammarAccess.getMainAccess().getMainSUTParserRuleCall_0_2()); }
		ruleSUT
		{ after(grammarAccess.getMainAccess().getMainSUTParserRuleCall_0_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__STEPS__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSTEPSAccess().getGivenParserRuleCall_0()); }
		rulegiven
		{ after(grammarAccess.getSTEPSAccess().getGivenParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getSTEPSAccess().getWhenParserRuleCall_1()); }
		rulewhen
		{ after(grammarAccess.getSTEPSAccess().getWhenParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getSTEPSAccess().getThenParserRuleCall_2()); }
		rulethen
		{ after(grammarAccess.getSTEPSAccess().getThenParserRuleCall_2()); }
	)
	|
	(
		{ before(grammarAccess.getSTEPSAccess().getAnd_workloadParserRuleCall_3()); }
		ruleand_workload
		{ after(grammarAccess.getSTEPSAccess().getAnd_workloadParserRuleCall_3()); }
	)
	|
	(
		{ before(grammarAccess.getSTEPSAccess().getAnd_atleastParserRuleCall_4()); }
		ruleand_atleast
		{ after(grammarAccess.getSTEPSAccess().getAnd_atleastParserRuleCall_4()); }
	)
	|
	(
		{ before(grammarAccess.getSTEPSAccess().getAnd_the_scenarioParserRuleCall_5()); }
		ruleand_the_scenario
		{ after(grammarAccess.getSTEPSAccess().getAnd_the_scenarioParserRuleCall_5()); }
	)
	|
	(
		{ before(grammarAccess.getSTEPSAccess().getAnd_the_metricParserRuleCall_6()); }
		ruleand_the_metric
		{ after(grammarAccess.getSTEPSAccess().getAnd_the_metricParserRuleCall_6()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__And_atleast__Alternatives_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAnd_atleastAccess().getMBWHEN_GREATEROREQUAL_TEXTTerminalRuleCall_3_0()); }
		RULE_MBWHEN_GREATEROREQUAL_TEXT
		{ after(grammarAccess.getAnd_atleastAccess().getMBWHEN_GREATEROREQUAL_TEXTTerminalRuleCall_3_0()); }
	)
	|
	(
		{ before(grammarAccess.getAnd_atleastAccess().getMBWHEN_LESSTHAN_TEXTTerminalRuleCall_3_1()); }
		RULE_MBWHEN_LESSTHAN_TEXT
		{ after(grammarAccess.getAnd_atleastAccess().getMBWHEN_LESSTHAN_TEXTTerminalRuleCall_3_1()); }
	)
	|
	(
		{ before(grammarAccess.getAnd_atleastAccess().getMBWHEN_MORETHAN_TEXTTerminalRuleCall_3_2()); }
		RULE_MBWHEN_MORETHAN_TEXT
		{ after(grammarAccess.getAnd_atleastAccess().getMBWHEN_MORETHAN_TEXTTerminalRuleCall_3_2()); }
	)
	|
	(
		{ before(grammarAccess.getAnd_atleastAccess().getMBWHEN_MINOROREQUAL_TEXTTerminalRuleCall_3_3()); }
		RULE_MBWHEN_MINOROREQUAL_TEXT
		{ after(grammarAccess.getAnd_atleastAccess().getMBWHEN_MINOROREQUAL_TEXTTerminalRuleCall_3_3()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__And_the_metric__Alternatives_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAnd_the_metricAccess().getSHOULDBELESSTHAN_TEXTTerminalRuleCall_3_0()); }
		RULE_SHOULDBELESSTHAN_TEXT
		{ after(grammarAccess.getAnd_the_metricAccess().getSHOULDBELESSTHAN_TEXTTerminalRuleCall_3_0()); }
	)
	|
	(
		{ before(grammarAccess.getAnd_the_metricAccess().getSHOULDBEATLEAST_TEXTTerminalRuleCall_3_1()); }
		RULE_SHOULDBEATLEAST_TEXT
		{ after(grammarAccess.getAnd_the_metricAccess().getSHOULDBEATLEAST_TEXTTerminalRuleCall_3_1()); }
	)
	|
	(
		{ before(grammarAccess.getAnd_the_metricAccess().getSHOULDBEGREATERTHANTerminalRuleCall_3_2()); }
		RULE_SHOULDBEGREATERTHAN
		{ after(grammarAccess.getAnd_the_metricAccess().getSHOULDBEGREATERTHANTerminalRuleCall_3_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__And_the_metric__Alternatives_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAnd_the_metricAccess().getWHENTHENUMBERISLESSTHAN_TEXTTerminalRuleCall_5_0()); }
		RULE_WHENTHENUMBERISLESSTHAN_TEXT
		{ after(grammarAccess.getAnd_the_metricAccess().getWHENTHENUMBERISLESSTHAN_TEXTTerminalRuleCall_5_0()); }
	)
	|
	(
		{ before(grammarAccess.getAnd_the_metricAccess().getWHENTHENUMBERISGREATERTHAN_TEXTTerminalRuleCall_5_1()); }
		RULE_WHENTHENUMBERISGREATERTHAN_TEXT
		{ after(grammarAccess.getAnd_the_metricAccess().getWHENTHENUMBERISGREATERTHAN_TEXTTerminalRuleCall_5_1()); }
	)
	|
	(
		{ before(grammarAccess.getAnd_the_metricAccess().getWHENTHENUMBERISGREATEROREQUAL_TEXTTerminalRuleCall_5_2()); }
		RULE_WHENTHENUMBERISGREATEROREQUAL_TEXT
		{ after(grammarAccess.getAnd_the_metricAccess().getWHENTHENUMBERISGREATEROREQUAL_TEXTTerminalRuleCall_5_2()); }
	)
	|
	(
		{ before(grammarAccess.getAnd_the_metricAccess().getWHENTHENUMBERIRLESSEROREQUAL_TEXTTerminalRuleCall_5_3()); }
		RULE_WHENTHENUMBERIRLESSEROREQUAL_TEXT
		{ after(grammarAccess.getAnd_the_metricAccess().getWHENTHENUMBERIRLESSEROREQUAL_TEXTTerminalRuleCall_5_3()); }
	)
	|
	(
		{ before(grammarAccess.getAnd_the_metricAccess().getWHENTHENUMBERAREBETWEEN_TEXTTerminalRuleCall_5_4()); }
		RULE_WHENTHENUMBERAREBETWEEN_TEXT
		{ after(grammarAccess.getAnd_the_metricAccess().getWHENTHENUMBERAREBETWEEN_TEXTTerminalRuleCall_5_4()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Then__Alternatives_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getThenAccess().getSHOULDBELESSTHAN_TEXTTerminalRuleCall_3_0()); }
		RULE_SHOULDBELESSTHAN_TEXT
		{ after(grammarAccess.getThenAccess().getSHOULDBELESSTHAN_TEXTTerminalRuleCall_3_0()); }
	)
	|
	(
		{ before(grammarAccess.getThenAccess().getSHOULDBEATLEAST_TEXTTerminalRuleCall_3_1()); }
		RULE_SHOULDBEATLEAST_TEXT
		{ after(grammarAccess.getThenAccess().getSHOULDBEATLEAST_TEXTTerminalRuleCall_3_1()); }
	)
	|
	(
		{ before(grammarAccess.getThenAccess().getSHOULDBEGREATERTHANTerminalRuleCall_3_2()); }
		RULE_SHOULDBEGREATERTHAN
		{ after(grammarAccess.getThenAccess().getSHOULDBEGREATERTHANTerminalRuleCall_3_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Then__Alternatives_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getThenAccess().getWHENTHENUMBERISLESSTHAN_TEXTTerminalRuleCall_5_0()); }
		RULE_WHENTHENUMBERISLESSTHAN_TEXT
		{ after(grammarAccess.getThenAccess().getWHENTHENUMBERISLESSTHAN_TEXTTerminalRuleCall_5_0()); }
	)
	|
	(
		{ before(grammarAccess.getThenAccess().getWHENTHENUMBERISGREATERTHAN_TEXTTerminalRuleCall_5_1()); }
		RULE_WHENTHENUMBERISGREATERTHAN_TEXT
		{ after(grammarAccess.getThenAccess().getWHENTHENUMBERISGREATERTHAN_TEXTTerminalRuleCall_5_1()); }
	)
	|
	(
		{ before(grammarAccess.getThenAccess().getWHENTHENUMBERISGREATEROREQUAL_TEXTTerminalRuleCall_5_2()); }
		RULE_WHENTHENUMBERISGREATEROREQUAL_TEXT
		{ after(grammarAccess.getThenAccess().getWHENTHENUMBERISGREATEROREQUAL_TEXTTerminalRuleCall_5_2()); }
	)
	|
	(
		{ before(grammarAccess.getThenAccess().getWHENTHENUMBERIRLESSEROREQUAL_TEXTTerminalRuleCall_5_3()); }
		RULE_WHENTHENUMBERIRLESSEROREQUAL_TEXT
		{ after(grammarAccess.getThenAccess().getWHENTHENUMBERIRLESSEROREQUAL_TEXTTerminalRuleCall_5_3()); }
	)
	|
	(
		{ before(grammarAccess.getThenAccess().getWHENTHENUMBERAREBETWEEN_TEXTTerminalRuleCall_5_4()); }
		RULE_WHENTHENUMBERAREBETWEEN_TEXT
		{ after(grammarAccess.getThenAccess().getWHENTHENUMBERAREBETWEEN_TEXTTerminalRuleCall_5_4()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EString__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEStringAccess().getSTRINGTerminalRuleCall_0()); }
		RULE_STRING
		{ after(grammarAccess.getEStringAccess().getSTRINGTerminalRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getEStringAccess().getIDTerminalRuleCall_1()); }
		RULE_ID
		{ after(grammarAccess.getEStringAccess().getIDTerminalRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__METRICTYPEMONITORED__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMETRICTYPEMONITOREDAccess().getMEMORYEnumLiteralDeclaration_0()); }
		('memory')
		{ after(grammarAccess.getMETRICTYPEMONITOREDAccess().getMEMORYEnumLiteralDeclaration_0()); }
	)
	|
	(
		{ before(grammarAccess.getMETRICTYPEMONITOREDAccess().getDISKEnumLiteralDeclaration_1()); }
		('disk')
		{ after(grammarAccess.getMETRICTYPEMONITOREDAccess().getDISKEnumLiteralDeclaration_1()); }
	)
	|
	(
		{ before(grammarAccess.getMETRICTYPEMONITOREDAccess().getWEBRESOURCESEnumLiteralDeclaration_2()); }
		('web resources')
		{ after(grammarAccess.getMETRICTYPEMONITOREDAccess().getWEBRESOURCESEnumLiteralDeclaration_2()); }
	)
	|
	(
		{ before(grammarAccess.getMETRICTYPEMONITOREDAccess().getTRANSACTIONEnumLiteralDeclaration_3()); }
		('transaction')
		{ after(grammarAccess.getMETRICTYPEMONITOREDAccess().getTRANSACTIONEnumLiteralDeclaration_3()); }
	)
	|
	(
		{ before(grammarAccess.getMETRICTYPEMONITOREDAccess().getPROCESSOREnumLiteralDeclaration_4()); }
		('processor')
		{ after(grammarAccess.getMETRICTYPEMONITOREDAccess().getPROCESSOREnumLiteralDeclaration_4()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__METRICTYPE__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMETRICTYPEAccess().getAvailablembytescounterEnumLiteralDeclaration_0()); }
		('available mbytes counter')
		{ after(grammarAccess.getMETRICTYPEAccess().getAvailablembytescounterEnumLiteralDeclaration_0()); }
	)
	|
	(
		{ before(grammarAccess.getMETRICTYPEAccess().getIdletimecounterEnumLiteralDeclaration_1()); }
		('% idle time counter')
		{ after(grammarAccess.getMETRICTYPEAccess().getIdletimecounterEnumLiteralDeclaration_1()); }
	)
	|
	(
		{ before(grammarAccess.getMETRICTYPEAccess().getThroughputmbytesEnumLiteralDeclaration_2()); }
		('throughput mbytes')
		{ after(grammarAccess.getMETRICTYPEAccess().getThroughputmbytesEnumLiteralDeclaration_2()); }
	)
	|
	(
		{ before(grammarAccess.getMETRICTYPEAccess().getTransactionpersecondEnumLiteralDeclaration_3()); }
		('transactions per second')
		{ after(grammarAccess.getMETRICTYPEAccess().getTransactionpersecondEnumLiteralDeclaration_3()); }
	)
	|
	(
		{ before(grammarAccess.getMETRICTYPEAccess().getTPSEnumLiteralDeclaration_4()); }
		('TPS')
		{ after(grammarAccess.getMETRICTYPEAccess().getTPSEnumLiteralDeclaration_4()); }
	)
	|
	(
		{ before(grammarAccess.getMETRICTYPEAccess().getProcessortimecounterEnumLiteralDeclaration_5()); }
		('% processor time count')
		{ after(grammarAccess.getMETRICTYPEAccess().getProcessortimecounterEnumLiteralDeclaration_5()); }
	)
	|
	(
		{ before(grammarAccess.getMETRICTYPEAccess().getTransactionresponsetimeEnumLiteralDeclaration_6()); }
		('transactions response time')
		{ after(grammarAccess.getMETRICTYPEAccess().getTransactionresponsetimeEnumLiteralDeclaration_6()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SUT_TYPE__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSUT_TYPEAccess().getDESKTOPAPPEnumLiteralDeclaration_0()); }
		('DESKTOPAPP')
		{ after(grammarAccess.getSUT_TYPEAccess().getDESKTOPAPPEnumLiteralDeclaration_0()); }
	)
	|
	(
		{ before(grammarAccess.getSUT_TYPEAccess().getDATABASEEnumLiteralDeclaration_1()); }
		('DATABASE')
		{ after(grammarAccess.getSUT_TYPEAccess().getDATABASEEnumLiteralDeclaration_1()); }
	)
	|
	(
		{ before(grammarAccess.getSUT_TYPEAccess().getWEBAPPEnumLiteralDeclaration_2()); }
		('WEBAPP')
		{ after(grammarAccess.getSUT_TYPEAccess().getWEBAPPEnumLiteralDeclaration_2()); }
	)
	|
	(
		{ before(grammarAccess.getSUT_TYPEAccess().getWEBSERVICEEnumLiteralDeclaration_3()); }
		('WEBSERVICE')
		{ after(grammarAccess.getSUT_TYPEAccess().getWEBSERVICEEnumLiteralDeclaration_3()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MetricModel__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MetricModel__Group__0__Impl
	rule__MetricModel__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MetricModel__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMetricModelAccess().getFeatureKeyword_0()); }
	'Feature:'
	{ after(grammarAccess.getMetricModelAccess().getFeatureKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MetricModel__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MetricModel__Group__1__Impl
	rule__MetricModel__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__MetricModel__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMetricModelAccess().getFreetextParserRuleCall_1()); }
	ruleFreetext
	{ after(grammarAccess.getMetricModelAccess().getFreetextParserRuleCall_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MetricModel__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MetricModel__Group__2__Impl
	rule__MetricModel__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__MetricModel__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMetricModelAccess().getFullStopKeyword_2()); }
	'.'
	{ after(grammarAccess.getMetricModelAccess().getFullStopKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MetricModel__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MetricModel__Group__3__Impl
	rule__MetricModel__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__MetricModel__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMetricModelAccess().getMonitoringKeyword_3()); }
	'Monitoring:'
	{ after(grammarAccess.getMetricModelAccess().getMonitoringKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MetricModel__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MetricModel__Group__4__Impl
	rule__MetricModel__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__MetricModel__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMetricModelAccess().getNameAssignment_4()); }
	(rule__MetricModel__NameAssignment_4)
	{ after(grammarAccess.getMetricModelAccess().getNameAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MetricModel__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MetricModel__Group__5__Impl
	rule__MetricModel__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__MetricModel__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMetricModelAccess().getDescriptionKeyword_5()); }
	'description'
	{ after(grammarAccess.getMetricModelAccess().getDescriptionKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MetricModel__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MetricModel__Group__6__Impl
	rule__MetricModel__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__MetricModel__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMetricModelAccess().getFreetextParserRuleCall_6()); }
	ruleFreetext
	{ after(grammarAccess.getMetricModelAccess().getFreetextParserRuleCall_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MetricModel__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MetricModel__Group__7__Impl
	rule__MetricModel__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__MetricModel__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMetricModelAccess().getFullStopKeyword_7()); }
	'.'
	{ after(grammarAccess.getMetricModelAccess().getFullStopKeyword_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MetricModel__Group__8
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MetricModel__Group__8__Impl
	rule__MetricModel__Group__9
;
finally {
	restoreStackSize(stackSize);
}

rule__MetricModel__Group__8__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMetricModelAccess().getLeftCurlyBracketKeyword_8()); }
	'{'
	{ after(grammarAccess.getMetricModelAccess().getLeftCurlyBracketKeyword_8()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MetricModel__Group__9
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MetricModel__Group__9__Impl
	rule__MetricModel__Group__10
;
finally {
	restoreStackSize(stackSize);
}

rule__MetricModel__Group__9__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	(
		{ before(grammarAccess.getMetricModelAccess().getStepsAssignment_9()); }
		(rule__MetricModel__StepsAssignment_9)
		{ after(grammarAccess.getMetricModelAccess().getStepsAssignment_9()); }
	)
	(
		{ before(grammarAccess.getMetricModelAccess().getStepsAssignment_9()); }
		(rule__MetricModel__StepsAssignment_9)*
		{ after(grammarAccess.getMetricModelAccess().getStepsAssignment_9()); }
	)
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MetricModel__Group__10
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MetricModel__Group__10__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MetricModel__Group__10__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMetricModelAccess().getRightCurlyBracketKeyword_10()); }
	'}'
	{ after(grammarAccess.getMetricModelAccess().getRightCurlyBracketKeyword_10()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__And_workload__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__And_workload__Group__0__Impl
	rule__And_workload__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__And_workload__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAnd_workloadAccess().getAndKeyword_0()); }
	'And'
	{ after(grammarAccess.getAnd_workloadAccess().getAndKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__And_workload__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__And_workload__Group__1__Impl
	rule__And_workload__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__And_workload__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAnd_workloadAccess().getWORKLOADGENERATEDTerminalRuleCall_1()); }
	RULE_WORKLOADGENERATED
	{ after(grammarAccess.getAnd_workloadAccess().getWORKLOADGENERATEDTerminalRuleCall_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__And_workload__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__And_workload__Group__2__Impl
	rule__And_workload__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__And_workload__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAnd_workloadAccess().getSut1Assignment_2()); }
	(rule__And_workload__Sut1Assignment_2)
	{ after(grammarAccess.getAnd_workloadAccess().getSut1Assignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__And_workload__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__And_workload__Group__3__Impl
	rule__And_workload__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__And_workload__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAnd_workloadAccess().getLOADGENERATORFORTHETerminalRuleCall_3()); }
	RULE_LOADGENERATORFORTHE
	{ after(grammarAccess.getAnd_workloadAccess().getLOADGENERATORFORTHETerminalRuleCall_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__And_workload__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__And_workload__Group__4__Impl
	rule__And_workload__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__And_workload__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAnd_workloadAccess().getSuttypeAssignment_4()); }
	(rule__And_workload__SuttypeAssignment_4)
	{ after(grammarAccess.getAnd_workloadAccess().getSuttypeAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__And_workload__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__And_workload__Group__5__Impl
	rule__And_workload__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__And_workload__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAnd_workloadAccess().getONTerminalRuleCall_5()); }
	RULE_ON
	{ after(grammarAccess.getAnd_workloadAccess().getONTerminalRuleCall_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__And_workload__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__And_workload__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__And_workload__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAnd_workloadAccess().getSut2Assignment_6()); }
	(rule__And_workload__Sut2Assignment_6)
	{ after(grammarAccess.getAnd_workloadAccess().getSut2Assignment_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__And_the_scenario__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__And_the_scenario__Group__0__Impl
	rule__And_the_scenario__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__And_the_scenario__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAnd_the_scenarioAccess().getAndKeyword_0()); }
	'And'
	{ after(grammarAccess.getAnd_the_scenarioAccess().getAndKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__And_the_scenario__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__And_the_scenario__Group__1__Impl
	rule__And_the_scenario__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__And_the_scenario__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAnd_the_scenarioAccess().getTHETerminalRuleCall_1()); }
	RULE_THE
	{ after(grammarAccess.getAnd_the_scenarioAccess().getTHETerminalRuleCall_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__And_the_scenario__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__And_the_scenario__Group__2__Impl
	rule__And_the_scenario__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__And_the_scenario__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAnd_the_scenarioAccess().getScenarioAssignment_2()); }
	(rule__And_the_scenario__ScenarioAssignment_2)
	{ after(grammarAccess.getAnd_the_scenarioAccess().getScenarioAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__And_the_scenario__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__And_the_scenario__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__And_the_scenario__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAnd_the_scenarioAccess().getISTESTSCENARIOTerminalRuleCall_3()); }
	RULE_ISTESTSCENARIO
	{ after(grammarAccess.getAnd_the_scenarioAccess().getISTESTSCENARIOTerminalRuleCall_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__And_atleast__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__And_atleast__Group__0__Impl
	rule__And_atleast__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__And_atleast__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAnd_atleastAccess().getAndKeyword_0()); }
	'And'
	{ after(grammarAccess.getAnd_atleastAccess().getAndKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__And_atleast__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__And_atleast__Group__1__Impl
	rule__And_atleast__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__And_atleast__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAnd_atleastAccess().getATLTerminalRuleCall_1()); }
	RULE_ATL
	{ after(grammarAccess.getAnd_atleastAccess().getATLTerminalRuleCall_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__And_atleast__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__And_atleast__Group__2__Impl
	rule__And_atleast__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__And_atleast__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAnd_atleastAccess().getInteger1Assignment_2()); }
	(rule__And_atleast__Integer1Assignment_2)
	{ after(grammarAccess.getAnd_atleastAccess().getInteger1Assignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__And_atleast__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__And_atleast__Group__3__Impl
	rule__And_atleast__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__And_atleast__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAnd_atleastAccess().getAlternatives_3()); }
	(rule__And_atleast__Alternatives_3)
	{ after(grammarAccess.getAnd_atleastAccess().getAlternatives_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__And_atleast__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__And_atleast__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__And_atleast__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAnd_atleastAccess().getInteger2Assignment_4()); }
	(rule__And_atleast__Integer2Assignment_4)
	{ after(grammarAccess.getAnd_atleastAccess().getInteger2Assignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__And_the_metric__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__And_the_metric__Group__0__Impl
	rule__And_the_metric__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__And_the_metric__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAnd_the_metricAccess().getAndKeyword_0()); }
	'And'
	{ after(grammarAccess.getAnd_the_metricAccess().getAndKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__And_the_metric__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__And_the_metric__Group__1__Impl
	rule__And_the_metric__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__And_the_metric__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAnd_the_metricAccess().getTHETerminalRuleCall_1()); }
	RULE_THE
	{ after(grammarAccess.getAnd_the_metricAccess().getTHETerminalRuleCall_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__And_the_metric__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__And_the_metric__Group__2__Impl
	rule__And_the_metric__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__And_the_metric__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAnd_the_metricAccess().getMetricAssignment_2()); }
	(rule__And_the_metric__MetricAssignment_2)
	{ after(grammarAccess.getAnd_the_metricAccess().getMetricAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__And_the_metric__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__And_the_metric__Group__3__Impl
	rule__And_the_metric__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__And_the_metric__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAnd_the_metricAccess().getAlternatives_3()); }
	(rule__And_the_metric__Alternatives_3)
	{ after(grammarAccess.getAnd_the_metricAccess().getAlternatives_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__And_the_metric__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__And_the_metric__Group__4__Impl
	rule__And_the_metric__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__And_the_metric__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAnd_the_metricAccess().getInteger1Assignment_4()); }
	(rule__And_the_metric__Integer1Assignment_4)
	{ after(grammarAccess.getAnd_the_metricAccess().getInteger1Assignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__And_the_metric__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__And_the_metric__Group__5__Impl
	rule__And_the_metric__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__And_the_metric__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAnd_the_metricAccess().getAlternatives_5()); }
	(rule__And_the_metric__Alternatives_5)
	{ after(grammarAccess.getAnd_the_metricAccess().getAlternatives_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__And_the_metric__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__And_the_metric__Group__6__Impl
	rule__And_the_metric__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__And_the_metric__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAnd_the_metricAccess().getInteger2Assignment_6()); }
	(rule__And_the_metric__Integer2Assignment_6)
	{ after(grammarAccess.getAnd_the_metricAccess().getInteger2Assignment_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__And_the_metric__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__And_the_metric__Group__7__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__And_the_metric__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAnd_the_metricAccess().getGroup_7()); }
	(rule__And_the_metric__Group_7__0)?
	{ after(grammarAccess.getAnd_the_metricAccess().getGroup_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__And_the_metric__Group_7__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__And_the_metric__Group_7__0__Impl
	rule__And_the_metric__Group_7__1
;
finally {
	restoreStackSize(stackSize);
}

rule__And_the_metric__Group_7__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAnd_the_metricAccess().getANDTerminalRuleCall_7_0()); }
	RULE_AND
	{ after(grammarAccess.getAnd_the_metricAccess().getANDTerminalRuleCall_7_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__And_the_metric__Group_7__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__And_the_metric__Group_7__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__And_the_metric__Group_7__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAnd_the_metricAccess().getInteger3Assignment_7_1()); }
	(rule__And_the_metric__Integer3Assignment_7_1)
	{ after(grammarAccess.getAnd_the_metricAccess().getInteger3Assignment_7_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__When__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__When__Group__0__Impl
	rule__When__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__When__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWhenAccess().getWhenKeyword_0()); }
	'When'
	{ after(grammarAccess.getWhenAccess().getWhenKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__When__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__When__Group__1__Impl
	rule__When__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__When__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWhenAccess().getTHETerminalRuleCall_1()); }
	RULE_THE
	{ after(grammarAccess.getWhenAccess().getTHETerminalRuleCall_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__When__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__When__Group__2__Impl
	rule__When__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__When__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWhenAccess().getMetrictypeAssignment_2()); }
	(rule__When__MetrictypeAssignment_2)
	{ after(grammarAccess.getWhenAccess().getMetrictypeAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__When__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__When__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__When__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWhenAccess().getISMONITOREDTerminalRuleCall_3()); }
	RULE_ISMONITORED
	{ after(grammarAccess.getWhenAccess().getISMONITOREDTerminalRuleCall_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Then__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Then__Group__0__Impl
	rule__Then__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Then__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getThenAccess().getThenKeyword_0()); }
	'Then'
	{ after(grammarAccess.getThenAccess().getThenKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Then__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Then__Group__1__Impl
	rule__Then__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Then__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getThenAccess().getTHETerminalRuleCall_1()); }
	RULE_THE
	{ after(grammarAccess.getThenAccess().getTHETerminalRuleCall_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Then__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Then__Group__2__Impl
	rule__Then__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Then__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getThenAccess().getMetricAssignment_2()); }
	(rule__Then__MetricAssignment_2)
	{ after(grammarAccess.getThenAccess().getMetricAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Then__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Then__Group__3__Impl
	rule__Then__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Then__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getThenAccess().getAlternatives_3()); }
	(rule__Then__Alternatives_3)
	{ after(grammarAccess.getThenAccess().getAlternatives_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Then__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Then__Group__4__Impl
	rule__Then__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Then__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getThenAccess().getInteger1Assignment_4()); }
	(rule__Then__Integer1Assignment_4)
	{ after(grammarAccess.getThenAccess().getInteger1Assignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Then__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Then__Group__5__Impl
	rule__Then__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Then__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getThenAccess().getAlternatives_5()); }
	(rule__Then__Alternatives_5)
	{ after(grammarAccess.getThenAccess().getAlternatives_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Then__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Then__Group__6__Impl
	rule__Then__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__Then__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getThenAccess().getInteger2Assignment_6()); }
	(rule__Then__Integer2Assignment_6)
	{ after(grammarAccess.getThenAccess().getInteger2Assignment_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Then__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Then__Group__7__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Then__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getThenAccess().getGroup_7()); }
	(rule__Then__Group_7__0)?
	{ after(grammarAccess.getThenAccess().getGroup_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Then__Group_7__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Then__Group_7__0__Impl
	rule__Then__Group_7__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Then__Group_7__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getThenAccess().getANDTerminalRuleCall_7_0()); }
	RULE_AND
	{ after(grammarAccess.getThenAccess().getANDTerminalRuleCall_7_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Then__Group_7__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Then__Group_7__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Then__Group_7__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getThenAccess().getInteger3Assignment_7_1()); }
	(rule__Then__Integer3Assignment_7_1)
	{ after(grammarAccess.getThenAccess().getInteger3Assignment_7_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Given__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Given__Group__0__Impl
	rule__Given__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Given__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGivenAccess().getGivenKeyword_0()); }
	'Given'
	{ after(grammarAccess.getGivenAccess().getGivenKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Given__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Given__Group__1__Impl
	rule__Given__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Given__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGivenAccess().getTHATTerminalRuleCall_1()); }
	RULE_THAT
	{ after(grammarAccess.getGivenAccess().getTHATTerminalRuleCall_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Given__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Given__Group__2__Impl
	rule__Given__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Given__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGivenAccess().getSut1Assignment_2()); }
	(rule__Given__Sut1Assignment_2)
	{ after(grammarAccess.getGivenAccess().getSut1Assignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Given__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Given__Group__3__Impl
	rule__Given__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Given__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGivenAccess().getSuttypeAssignment_3()); }
	(rule__Given__SuttypeAssignment_3)
	{ after(grammarAccess.getGivenAccess().getSuttypeAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Given__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Given__Group__4__Impl
	rule__Given__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Given__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGivenAccess().getMONITOREDBYTerminalRuleCall_4()); }
	RULE_MONITOREDBY
	{ after(grammarAccess.getGivenAccess().getMONITOREDBYTerminalRuleCall_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Given__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Given__Group__5__Impl
	rule__Given__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Given__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGivenAccess().getSut2Assignment_5()); }
	(rule__Given__Sut2Assignment_5)
	{ after(grammarAccess.getGivenAccess().getSut2Assignment_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Given__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Given__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Given__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGivenAccess().getMONITOR_TEXTTerminalRuleCall_6()); }
	RULE_MONITOR_TEXT
	{ after(grammarAccess.getGivenAccess().getMONITOR_TEXTTerminalRuleCall_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SCENARIO__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SCENARIO__Group__0__Impl
	rule__SCENARIO__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SCENARIO__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSCENARIOAccess().getScenarioKeyword_0()); }
	'Scenario'
	{ after(grammarAccess.getSCENARIOAccess().getScenarioKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SCENARIO__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SCENARIO__Group__1__Impl
	rule__SCENARIO__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SCENARIO__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSCENARIOAccess().getLeftCurlyBracketKeyword_1()); }
	'{'
	{ after(grammarAccess.getSCENARIOAccess().getLeftCurlyBracketKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SCENARIO__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SCENARIO__Group__2__Impl
	rule__SCENARIO__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__SCENARIO__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSCENARIOAccess().getNameAssignment_2()); }
	(rule__SCENARIO__NameAssignment_2)
	{ after(grammarAccess.getSCENARIOAccess().getNameAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SCENARIO__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SCENARIO__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SCENARIO__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSCENARIOAccess().getRightCurlyBracketKeyword_3()); }
	'}'
	{ after(grammarAccess.getSCENARIOAccess().getRightCurlyBracketKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SUT__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SUT__Group__0__Impl
	rule__SUT__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SUT__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSUTAccess().getSUTAction_0()); }
	()
	{ after(grammarAccess.getSUTAccess().getSUTAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SUT__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SUT__Group__1__Impl
	rule__SUT__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SUT__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSUTAccess().getSUTKeyword_1()); }
	'SUT'
	{ after(grammarAccess.getSUTAccess().getSUTKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SUT__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SUT__Group__2__Impl
	rule__SUT__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__SUT__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSUTAccess().getLeftCurlyBracketKeyword_2()); }
	'{'
	{ after(grammarAccess.getSUTAccess().getLeftCurlyBracketKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SUT__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SUT__Group__3__Impl
	rule__SUT__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__SUT__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSUTAccess().getNameAssignment_3()); }
	(rule__SUT__NameAssignment_3)
	{ after(grammarAccess.getSUTAccess().getNameAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SUT__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SUT__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SUT__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSUTAccess().getRightCurlyBracketKeyword_4()); }
	'}'
	{ after(grammarAccess.getSUTAccess().getRightCurlyBracketKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Model__MainAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModelAccess().getMainMainParserRuleCall_0()); }
		ruleMain
		{ after(grammarAccess.getModelAccess().getMainMainParserRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MetricModel__NameAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMetricModelAccess().getNameIDTerminalRuleCall_4_0()); }
		RULE_ID
		{ after(grammarAccess.getMetricModelAccess().getNameIDTerminalRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MetricModel__StepsAssignment_9
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMetricModelAccess().getStepsSTEPSParserRuleCall_9_0()); }
		ruleSTEPS
		{ after(grammarAccess.getMetricModelAccess().getStepsSTEPSParserRuleCall_9_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Main__MainAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMainAccess().getMainAlternatives_0()); }
		(rule__Main__MainAlternatives_0)
		{ after(grammarAccess.getMainAccess().getMainAlternatives_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__And_workload__Sut1Assignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAnd_workloadAccess().getSut1SUTCrossReference_2_0()); }
		(
			{ before(grammarAccess.getAnd_workloadAccess().getSut1SUTIDTerminalRuleCall_2_0_1()); }
			RULE_ID
			{ after(grammarAccess.getAnd_workloadAccess().getSut1SUTIDTerminalRuleCall_2_0_1()); }
		)
		{ after(grammarAccess.getAnd_workloadAccess().getSut1SUTCrossReference_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__And_workload__SuttypeAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAnd_workloadAccess().getSuttypeSUT_TYPEEnumRuleCall_4_0()); }
		ruleSUT_TYPE
		{ after(grammarAccess.getAnd_workloadAccess().getSuttypeSUT_TYPEEnumRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__And_workload__Sut2Assignment_6
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAnd_workloadAccess().getSut2SUTCrossReference_6_0()); }
		(
			{ before(grammarAccess.getAnd_workloadAccess().getSut2SUTIDTerminalRuleCall_6_0_1()); }
			RULE_ID
			{ after(grammarAccess.getAnd_workloadAccess().getSut2SUTIDTerminalRuleCall_6_0_1()); }
		)
		{ after(grammarAccess.getAnd_workloadAccess().getSut2SUTCrossReference_6_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__And_the_scenario__ScenarioAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAnd_the_scenarioAccess().getScenarioSCENARIOCrossReference_2_0()); }
		(
			{ before(grammarAccess.getAnd_the_scenarioAccess().getScenarioSCENARIOIDTerminalRuleCall_2_0_1()); }
			RULE_ID
			{ after(grammarAccess.getAnd_the_scenarioAccess().getScenarioSCENARIOIDTerminalRuleCall_2_0_1()); }
		)
		{ after(grammarAccess.getAnd_the_scenarioAccess().getScenarioSCENARIOCrossReference_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__And_atleast__Integer1Assignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAnd_atleastAccess().getInteger1INTTerminalRuleCall_2_0()); }
		RULE_INT
		{ after(grammarAccess.getAnd_atleastAccess().getInteger1INTTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__And_atleast__Integer2Assignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAnd_atleastAccess().getInteger2INTTerminalRuleCall_4_0()); }
		RULE_INT
		{ after(grammarAccess.getAnd_atleastAccess().getInteger2INTTerminalRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__And_the_metric__MetricAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAnd_the_metricAccess().getMetricMETRICTYPEEnumRuleCall_2_0()); }
		ruleMETRICTYPE
		{ after(grammarAccess.getAnd_the_metricAccess().getMetricMETRICTYPEEnumRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__And_the_metric__Integer1Assignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAnd_the_metricAccess().getInteger1INTTerminalRuleCall_4_0()); }
		RULE_INT
		{ after(grammarAccess.getAnd_the_metricAccess().getInteger1INTTerminalRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__And_the_metric__Integer2Assignment_6
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAnd_the_metricAccess().getInteger2INTTerminalRuleCall_6_0()); }
		RULE_INT
		{ after(grammarAccess.getAnd_the_metricAccess().getInteger2INTTerminalRuleCall_6_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__And_the_metric__Integer3Assignment_7_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAnd_the_metricAccess().getInteger3INTTerminalRuleCall_7_1_0()); }
		RULE_INT
		{ after(grammarAccess.getAnd_the_metricAccess().getInteger3INTTerminalRuleCall_7_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__When__MetrictypeAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getWhenAccess().getMetrictypeMETRICTYPEMONITOREDEnumRuleCall_2_0()); }
		ruleMETRICTYPEMONITORED
		{ after(grammarAccess.getWhenAccess().getMetrictypeMETRICTYPEMONITOREDEnumRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Then__MetricAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getThenAccess().getMetricMETRICTYPEEnumRuleCall_2_0()); }
		ruleMETRICTYPE
		{ after(grammarAccess.getThenAccess().getMetricMETRICTYPEEnumRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Then__Integer1Assignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getThenAccess().getInteger1INTTerminalRuleCall_4_0()); }
		RULE_INT
		{ after(grammarAccess.getThenAccess().getInteger1INTTerminalRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Then__Integer2Assignment_6
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getThenAccess().getInteger2INTTerminalRuleCall_6_0()); }
		RULE_INT
		{ after(grammarAccess.getThenAccess().getInteger2INTTerminalRuleCall_6_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Then__Integer3Assignment_7_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getThenAccess().getInteger3INTTerminalRuleCall_7_1_0()); }
		RULE_INT
		{ after(grammarAccess.getThenAccess().getInteger3INTTerminalRuleCall_7_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Given__Sut1Assignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getGivenAccess().getSut1SUTCrossReference_2_0()); }
		(
			{ before(grammarAccess.getGivenAccess().getSut1SUTIDTerminalRuleCall_2_0_1()); }
			RULE_ID
			{ after(grammarAccess.getGivenAccess().getSut1SUTIDTerminalRuleCall_2_0_1()); }
		)
		{ after(grammarAccess.getGivenAccess().getSut1SUTCrossReference_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Given__SuttypeAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getGivenAccess().getSuttypeSUT_TYPEEnumRuleCall_3_0()); }
		ruleSUT_TYPE
		{ after(grammarAccess.getGivenAccess().getSuttypeSUT_TYPEEnumRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Given__Sut2Assignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getGivenAccess().getSut2SUTCrossReference_5_0()); }
		(
			{ before(grammarAccess.getGivenAccess().getSut2SUTIDTerminalRuleCall_5_0_1()); }
			RULE_ID
			{ after(grammarAccess.getGivenAccess().getSut2SUTIDTerminalRuleCall_5_0_1()); }
		)
		{ after(grammarAccess.getGivenAccess().getSut2SUTCrossReference_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SCENARIO__NameAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSCENARIOAccess().getNameIDTerminalRuleCall_2_0()); }
		RULE_ID
		{ after(grammarAccess.getSCENARIOAccess().getNameIDTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SUT__NameAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSUTAccess().getNameIDTerminalRuleCall_3_0()); }
		RULE_ID
		{ after(grammarAccess.getSUTAccess().getNameIDTerminalRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

RULE_SHOULDBELESSTHAN_TEXT : 'should be less than';

RULE_SHOULDBEATLEAST_TEXT : 'should be at least';

RULE_SHOULDBEGREATERTHAN : 'should be more than';

RULE_WHENTHENUMBERISLESSTHAN_TEXT : 'when the number of virtual users is less than';

RULE_WHENTHENUMBERISGREATERTHAN_TEXT : 'when the number of virtual users is greater than';

RULE_WHENTHENUMBERISGREATEROREQUAL_TEXT : 'when the number of virtual users is greater or equal to';

RULE_WHENTHENUMBERIRLESSEROREQUAL_TEXT : 'when the number of virtual users is lesser or equal to';

RULE_WHENTHENUMBERAREBETWEEN_TEXT : 'when the number of virtual users are between';

RULE_MBWHEN_GREATEROREQUAL_TEXT : 'MB when the number of virtual users is greater than or equal to';

RULE_MBWHEN_LESSTHAN_TEXT : 'MB when the number of virtual users is less than';

RULE_MBWHEN_MORETHAN_TEXT : 'MB when the number of virtual users is more than';

RULE_MBWHEN_MINOROREQUAL_TEXT : 'MB when the number of virtual users is lesser than or equal to';

RULE_AND : 'and';

RULE_MONITOR_TEXT : 'monitor';

RULE_THE : 'the';

RULE_THAT : 'that';

RULE_MONITOREDBY : 'monitored by ';

RULE_WORKLOADGENERATED : 'workload generated through';

RULE_LOADGENERATORFORTHE : 'Load Generator for the';

RULE_ISTESTSCENARIO : 'test scenario';

RULE_ON : 'on';

RULE_ISMONITORED : 'is monitored';

RULE_ATL : 'at least';

fragment RULE_NNL : ~(('\r'|'\n'));

fragment RULE_NL : '\r'? '\n'?;

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'"')))* '"'|'\'' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
