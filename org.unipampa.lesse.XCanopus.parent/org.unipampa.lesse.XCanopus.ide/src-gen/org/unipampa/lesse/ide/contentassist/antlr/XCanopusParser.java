/*
 * generated by Xtext 2.15.0
 */
package org.unipampa.lesse.ide.contentassist.antlr;

import com.google.common.collect.ImmutableMap;
import com.google.inject.Inject;
import com.google.inject.Singleton;
import java.util.Map;
import org.eclipse.xtext.AbstractElement;
import org.eclipse.xtext.ide.editor.contentassist.antlr.AbstractContentAssistParser;
import org.unipampa.lesse.ide.contentassist.antlr.internal.InternalXCanopusParser;
import org.unipampa.lesse.services.XCanopusGrammarAccess;

public class XCanopusParser extends AbstractContentAssistParser {

	@Singleton
	public static final class NameMappings {
		
		private final Map<AbstractElement, String> mappings;
		
		@Inject
		public NameMappings(XCanopusGrammarAccess grammarAccess) {
			ImmutableMap.Builder<AbstractElement, String> builder = ImmutableMap.builder();
			init(builder, grammarAccess);
			this.mappings = builder.build();
		}
		
		public String getRuleName(AbstractElement element) {
			return mappings.get(element);
		}
		
		private static void init(ImmutableMap.Builder<AbstractElement, String> builder, XCanopusGrammarAccess grammarAccess) {
			builder.put(grammarAccess.getMetricAccess().getAlternatives(), "rule__Metric__Alternatives");
			builder.put(grammarAccess.getCounterAccess().getAlternatives(), "rule__Counter__Alternatives");
			builder.put(grammarAccess.getEBooleanAccess().getAlternatives(), "rule__EBoolean__Alternatives");
			builder.put(grammarAccess.getEStringAccess().getAlternatives(), "rule__EString__Alternatives");
			builder.put(grammarAccess.getHARDWAREAccess().getAlternatives(), "rule__HARDWARE__Alternatives");
			builder.put(grammarAccess.getSUT_TYPEAccess().getAlternatives(), "rule__SUT_TYPE__Alternatives");
			builder.put(grammarAccess.getASSOCIATION_CRITERIAAccess().getAlternatives(), "rule__ASSOCIATION_CRITERIA__Alternatives");
			builder.put(grammarAccess.getCOUNTER_DISKAccess().getAlternatives(), "rule__COUNTER_DISK__Alternatives");
			builder.put(grammarAccess.getCOUNTER_TRANSACTIONAccess().getAlternatives(), "rule__COUNTER_TRANSACTION__Alternatives");
			builder.put(grammarAccess.getCOUNTER_MEMORYAccess().getAlternatives(), "rule__COUNTER_MEMORY__Alternatives");
			builder.put(grammarAccess.getModelAccess().getGroup(), "rule__Model__Group__0");
			builder.put(grammarAccess.getIncludeAccess().getGroup(), "rule__Include__Group__0");
			builder.put(grammarAccess.getMonitoringAccess().getGroup(), "rule__Monitoring__Group__0");
			builder.put(grammarAccess.getSUTAccess().getGroup(), "rule__SUT__Group__0");
			builder.put(grammarAccess.getSUTAccess().getGroup_3(), "rule__SUT__Group_3__0");
			builder.put(grammarAccess.getSUTAccess().getGroup_4(), "rule__SUT__Group_4__0");
			builder.put(grammarAccess.getSUTAccess().getGroup_5(), "rule__SUT__Group_5__0");
			builder.put(grammarAccess.getSUTAccess().getGroup_6(), "rule__SUT__Group_6__0");
			builder.put(grammarAccess.getSUTAccess().getGroup_7(), "rule__SUT__Group_7__0");
			builder.put(grammarAccess.getSUTAccess().getGroup_7_3(), "rule__SUT__Group_7_3__0");
			builder.put(grammarAccess.getSUTAccess().getGroup_8(), "rule__SUT__Group_8__0");
			builder.put(grammarAccess.getLoadGeneratorAccess().getGroup(), "rule__LoadGenerator__Group__0");
			builder.put(grammarAccess.getLoadGeneratorAccess().getGroup_4(), "rule__LoadGenerator__Group_4__0");
			builder.put(grammarAccess.getLoadGeneratorAccess().getGroup_5(), "rule__LoadGenerator__Group_5__0");
			builder.put(grammarAccess.getLoadGeneratorAccess().getGroup_6(), "rule__LoadGenerator__Group_6__0");
			builder.put(grammarAccess.getLoadGeneratorAccess().getGroup_7(), "rule__LoadGenerator__Group_7__0");
			builder.put(grammarAccess.getLoadGeneratorAccess().getGroup_7_3(), "rule__LoadGenerator__Group_7_3__0");
			builder.put(grammarAccess.getLoadGeneratorAccess().getGroup_8(), "rule__LoadGenerator__Group_8__0");
			builder.put(grammarAccess.getLoadGeneratorAccess().getGroup_9(), "rule__LoadGenerator__Group_9__0");
			builder.put(grammarAccess.getMonitorAccess().getGroup(), "rule__Monitor__Group__0");
			builder.put(grammarAccess.getMonitorAccess().getGroup_3(), "rule__Monitor__Group_3__0");
			builder.put(grammarAccess.getMonitorAccess().getGroup_4(), "rule__Monitor__Group_4__0");
			builder.put(grammarAccess.getMonitorAccess().getGroup_5(), "rule__Monitor__Group_5__0");
			builder.put(grammarAccess.getMonitorAccess().getGroup_6(), "rule__Monitor__Group_6__0");
			builder.put(grammarAccess.getMonitorAccess().getGroup_6_3(), "rule__Monitor__Group_6_3__0");
			builder.put(grammarAccess.getMetricModelAccess().getGroup(), "rule__MetricModel__Group__0");
			builder.put(grammarAccess.getMetricModelAccess().getGroup_3(), "rule__MetricModel__Group_3__0");
			builder.put(grammarAccess.getMetricModelAccess().getGroup_4(), "rule__MetricModel__Group_4__0");
			builder.put(grammarAccess.getMetricModelAccess().getGroup_5(), "rule__MetricModel__Group_5__0");
			builder.put(grammarAccess.getMetricModelAccess().getGroup_5_3(), "rule__MetricModel__Group_5_3__0");
			builder.put(grammarAccess.getMetricModelAccess().getGroup_6(), "rule__MetricModel__Group_6__0");
			builder.put(grammarAccess.getMetricModelAccess().getGroup_6_3(), "rule__MetricModel__Group_6_3__0");
			builder.put(grammarAccess.getMetricModelAccess().getGroup_7(), "rule__MetricModel__Group_7__0");
			builder.put(grammarAccess.getMetricModelAccess().getGroup_8(), "rule__MetricModel__Group_8__0");
			builder.put(grammarAccess.getMetricModelAccess().getGroup_9(), "rule__MetricModel__Group_9__0");
			builder.put(grammarAccess.getMetricModelAccess().getGroup_10(), "rule__MetricModel__Group_10__0");
			builder.put(grammarAccess.getMetricModelAccess().getGroup_10_3(), "rule__MetricModel__Group_10_3__0");
			builder.put(grammarAccess.getMetricModelAccess().getGroup_11(), "rule__MetricModel__Group_11__0");
			builder.put(grammarAccess.getMetricModelAccess().getGroup_11_3(), "rule__MetricModel__Group_11_3__0");
			builder.put(grammarAccess.getMemoryAccess().getGroup(), "rule__Memory__Group__0");
			builder.put(grammarAccess.getMemoryAccess().getGroup_4(), "rule__Memory__Group_4__0");
			builder.put(grammarAccess.getTransactionAccess().getGroup(), "rule__Transaction__Group__0");
			builder.put(grammarAccess.getTransactionAccess().getGroup_4(), "rule__Transaction__Group_4__0");
			builder.put(grammarAccess.getDiskAccess().getGroup(), "rule__Disk__Group__0");
			builder.put(grammarAccess.getDiskAccess().getGroup_4(), "rule__Disk__Group_4__0");
			builder.put(grammarAccess.getCriteriaAccess().getGroup(), "rule__Criteria__Group__0");
			builder.put(grammarAccess.getCriteriaAccess().getGroup_3(), "rule__Criteria__Group_3__0");
			builder.put(grammarAccess.getThresholdAccess().getGroup(), "rule__Threshold__Group__0");
			builder.put(grammarAccess.getThresholdAccess().getGroup_3(), "rule__Threshold__Group_3__0");
			builder.put(grammarAccess.getDisk_IO_CounterAccess().getGroup(), "rule__Disk_IO_Counter__Group__0");
			builder.put(grammarAccess.getDisk_IO_CounterAccess().getGroup_4(), "rule__Disk_IO_Counter__Group_4__0");
			builder.put(grammarAccess.getDisk_IO_CounterAccess().getGroup_4_3(), "rule__Disk_IO_Counter__Group_4_3__0");
			builder.put(grammarAccess.getTransactionCounterAccess().getGroup(), "rule__TransactionCounter__Group__0");
			builder.put(grammarAccess.getTransactionCounterAccess().getGroup_4(), "rule__TransactionCounter__Group_4__0");
			builder.put(grammarAccess.getTransactionCounterAccess().getGroup_4_3(), "rule__TransactionCounter__Group_4_3__0");
			builder.put(grammarAccess.getMemoryCounterAccess().getGroup(), "rule__MemoryCounter__Group__0");
			builder.put(grammarAccess.getMemoryCounterAccess().getGroup_4(), "rule__MemoryCounter__Group_4__0");
			builder.put(grammarAccess.getMemoryCounterAccess().getGroup_4_3(), "rule__MemoryCounter__Group_4_3__0");
			builder.put(grammarAccess.getEIntAccess().getGroup(), "rule__EInt__Group__0");
			builder.put(grammarAccess.getModelAccess().getIncludesAssignment_0(), "rule__Model__IncludesAssignment_0");
			builder.put(grammarAccess.getModelAccess().getMonitoringsAssignment_1(), "rule__Model__MonitoringsAssignment_1");
			builder.put(grammarAccess.getModelAccess().getSutsAssignment_2(), "rule__Model__SutsAssignment_2");
			builder.put(grammarAccess.getModelAccess().getLoadGeneratorsAssignment_3(), "rule__Model__LoadGeneratorsAssignment_3");
			builder.put(grammarAccess.getIncludeAccess().getImportURIAssignment_1(), "rule__Include__ImportURIAssignment_1");
			builder.put(grammarAccess.getIncludeAccess().getNameAssignment_3(), "rule__Include__NameAssignment_3");
			builder.put(grammarAccess.getSUTAccess().getHostnameAssignment_3_1(), "rule__SUT__HostnameAssignment_3_1");
			builder.put(grammarAccess.getSUTAccess().getIpAssignment_4_1(), "rule__SUT__IpAssignment_4_1");
			builder.put(grammarAccess.getSUTAccess().getHardwareAssignment_5_1(), "rule__SUT__HardwareAssignment_5_1");
			builder.put(grammarAccess.getSUTAccess().getTypeAssignment_6_1(), "rule__SUT__TypeAssignment_6_1");
			builder.put(grammarAccess.getSUTAccess().getSutAssignment_7_2(), "rule__SUT__SutAssignment_7_2");
			builder.put(grammarAccess.getSUTAccess().getSutAssignment_7_3_1(), "rule__SUT__SutAssignment_7_3_1");
			builder.put(grammarAccess.getSUTAccess().getMetricmodelAssignment_8_1(), "rule__SUT__MetricmodelAssignment_8_1");
			builder.put(grammarAccess.getLoadGeneratorAccess().getIsMonitorAssignment_1(), "rule__LoadGenerator__IsMonitorAssignment_1");
			builder.put(grammarAccess.getLoadGeneratorAccess().getHostnameAssignment_4_1(), "rule__LoadGenerator__HostnameAssignment_4_1");
			builder.put(grammarAccess.getLoadGeneratorAccess().getIpAssignment_5_1(), "rule__LoadGenerator__IpAssignment_5_1");
			builder.put(grammarAccess.getLoadGeneratorAccess().getHardwareAssignment_6_1(), "rule__LoadGenerator__HardwareAssignment_6_1");
			builder.put(grammarAccess.getLoadGeneratorAccess().getSutAssignment_7_2(), "rule__LoadGenerator__SutAssignment_7_2");
			builder.put(grammarAccess.getLoadGeneratorAccess().getSutAssignment_7_3_1(), "rule__LoadGenerator__SutAssignment_7_3_1");
			builder.put(grammarAccess.getLoadGeneratorAccess().getMetricmodelAssignment_8_1(), "rule__LoadGenerator__MetricmodelAssignment_8_1");
			builder.put(grammarAccess.getLoadGeneratorAccess().getMonitorAssignment_9_1(), "rule__LoadGenerator__MonitorAssignment_9_1");
			builder.put(grammarAccess.getMonitorAccess().getHostnameAssignment_3_1(), "rule__Monitor__HostnameAssignment_3_1");
			builder.put(grammarAccess.getMonitorAccess().getIpAssignment_4_1(), "rule__Monitor__IpAssignment_4_1");
			builder.put(grammarAccess.getMonitorAccess().getHardwareAssignment_5_1(), "rule__Monitor__HardwareAssignment_5_1");
			builder.put(grammarAccess.getMonitorAccess().getSutAssignment_6_2(), "rule__Monitor__SutAssignment_6_2");
			builder.put(grammarAccess.getMonitorAccess().getSutAssignment_6_3_1(), "rule__Monitor__SutAssignment_6_3_1");
			builder.put(grammarAccess.getMetricModelAccess().getMemoryAssignment_3_1(), "rule__MetricModel__MemoryAssignment_3_1");
			builder.put(grammarAccess.getMetricModelAccess().getDiskAssignment_4_1(), "rule__MetricModel__DiskAssignment_4_1");
			builder.put(grammarAccess.getMetricModelAccess().getCriteriaAssignment_5_2(), "rule__MetricModel__CriteriaAssignment_5_2");
			builder.put(grammarAccess.getMetricModelAccess().getCriteriaAssignment_5_3_1(), "rule__MetricModel__CriteriaAssignment_5_3_1");
			builder.put(grammarAccess.getMetricModelAccess().getThresholdAssignment_6_2(), "rule__MetricModel__ThresholdAssignment_6_2");
			builder.put(grammarAccess.getMetricModelAccess().getThresholdAssignment_6_3_1(), "rule__MetricModel__ThresholdAssignment_6_3_1");
			builder.put(grammarAccess.getMetricModelAccess().getDiskCounterAssignment_7_1(), "rule__MetricModel__DiskCounterAssignment_7_1");
			builder.put(grammarAccess.getMetricModelAccess().getTransactionCounterAssignment_8_1(), "rule__MetricModel__TransactionCounterAssignment_8_1");
			builder.put(grammarAccess.getMetricModelAccess().getMemoryCounterAssignment_9_1(), "rule__MetricModel__MemoryCounterAssignment_9_1");
			builder.put(grammarAccess.getMetricModelAccess().getMetricAssignment_10_2(), "rule__MetricModel__MetricAssignment_10_2");
			builder.put(grammarAccess.getMetricModelAccess().getMetricAssignment_10_3_1(), "rule__MetricModel__MetricAssignment_10_3_1");
			builder.put(grammarAccess.getMetricModelAccess().getCounterAssignment_11_2(), "rule__MetricModel__CounterAssignment_11_2");
			builder.put(grammarAccess.getMetricModelAccess().getCounterAssignment_11_3_1(), "rule__MetricModel__CounterAssignment_11_3_1");
			builder.put(grammarAccess.getMemoryAccess().getNameAssignment_2(), "rule__Memory__NameAssignment_2");
			builder.put(grammarAccess.getMemoryAccess().getMemoryCounterAssignment_4_1(), "rule__Memory__MemoryCounterAssignment_4_1");
			builder.put(grammarAccess.getTransactionAccess().getNameAssignment_2(), "rule__Transaction__NameAssignment_2");
			builder.put(grammarAccess.getTransactionAccess().getTransactionCounterAssignment_4_1(), "rule__Transaction__TransactionCounterAssignment_4_1");
			builder.put(grammarAccess.getDiskAccess().getNameAssignment_2(), "rule__Disk__NameAssignment_2");
			builder.put(grammarAccess.getDiskAccess().getDisk_io_counterAssignment_4_1(), "rule__Disk__Disk_io_counterAssignment_4_1");
			builder.put(grammarAccess.getCriteriaAccess().getValueAssignment_3_1(), "rule__Criteria__ValueAssignment_3_1");
			builder.put(grammarAccess.getThresholdAccess().getValueAssignment_3_1(), "rule__Threshold__ValueAssignment_3_1");
			builder.put(grammarAccess.getDisk_IO_CounterAccess().getNameAssignment_2(), "rule__Disk_IO_Counter__NameAssignment_2");
			builder.put(grammarAccess.getDisk_IO_CounterAccess().getCounterDiskAssignment_4_2(), "rule__Disk_IO_Counter__CounterDiskAssignment_4_2");
			builder.put(grammarAccess.getDisk_IO_CounterAccess().getCounterDiskAssignment_4_3_1(), "rule__Disk_IO_Counter__CounterDiskAssignment_4_3_1");
			builder.put(grammarAccess.getTransactionCounterAccess().getNameAssignment_2(), "rule__TransactionCounter__NameAssignment_2");
			builder.put(grammarAccess.getTransactionCounterAccess().getCounterTransactionAssignment_4_2(), "rule__TransactionCounter__CounterTransactionAssignment_4_2");
			builder.put(grammarAccess.getTransactionCounterAccess().getCounterTransactionAssignment_4_3_1(), "rule__TransactionCounter__CounterTransactionAssignment_4_3_1");
			builder.put(grammarAccess.getMemoryCounterAccess().getNameAssignment_2(), "rule__MemoryCounter__NameAssignment_2");
			builder.put(grammarAccess.getMemoryCounterAccess().getCounterMemoryAssignment_4_2(), "rule__MemoryCounter__CounterMemoryAssignment_4_2");
			builder.put(grammarAccess.getMemoryCounterAccess().getCounterMemoryAssignment_4_3_1(), "rule__MemoryCounter__CounterMemoryAssignment_4_3_1");
		}
	}
	
	@Inject
	private NameMappings nameMappings;

	@Inject
	private XCanopusGrammarAccess grammarAccess;

	@Override
	protected InternalXCanopusParser createParser() {
		InternalXCanopusParser result = new InternalXCanopusParser(null);
		result.setGrammarAccess(grammarAccess);
		return result;
	}

	@Override
	protected String getRuleName(AbstractElement element) {
		return nameMappings.getRuleName(element);
	}

	@Override
	protected String[] getInitialHiddenTokens() {
		return new String[] { "RULE_WS", "RULE_ML_COMMENT", "RULE_SL_COMMENT" };
	}

	public XCanopusGrammarAccess getGrammarAccess() {
		return this.grammarAccess;
	}

	public void setGrammarAccess(XCanopusGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}
	
	public NameMappings getNameMappings() {
		return nameMappings;
	}
	
	public void setNameMappings(NameMappings nameMappings) {
		this.nameMappings = nameMappings;
	}
}
