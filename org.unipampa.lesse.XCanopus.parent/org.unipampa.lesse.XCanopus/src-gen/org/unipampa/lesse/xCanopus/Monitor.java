/**
 * generated by Xtext 2.16.0
 */
package org.unipampa.lesse.xCanopus;

import org.eclipse.emf.common.util.EList;

import org.eclipse.emf.ecore.EObject;

/**
 * <!-- begin-user-doc -->
 * A representation of the model object '<em><b>Monitor</b></em>'.
 * <!-- end-user-doc -->
 *
 * <p>
 * The following features are supported:
 * </p>
 * <ul>
 *   <li>{@link org.unipampa.lesse.xCanopus.Monitor#getHostname <em>Hostname</em>}</li>
 *   <li>{@link org.unipampa.lesse.xCanopus.Monitor#getIp <em>Ip</em>}</li>
 *   <li>{@link org.unipampa.lesse.xCanopus.Monitor#getHardware <em>Hardware</em>}</li>
 *   <li>{@link org.unipampa.lesse.xCanopus.Monitor#getSut <em>Sut</em>}</li>
 * </ul>
 *
 * @see org.unipampa.lesse.xCanopus.XCanopusPackage#getMonitor()
 * @model
 * @generated
 */
public interface Monitor extends EObject
{
  /**
   * Returns the value of the '<em><b>Hostname</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <p>
   * If the meaning of the '<em>Hostname</em>' attribute isn't clear,
   * there really should be more of a description here...
   * </p>
   * <!-- end-user-doc -->
   * @return the value of the '<em>Hostname</em>' attribute.
   * @see #setHostname(String)
   * @see org.unipampa.lesse.xCanopus.XCanopusPackage#getMonitor_Hostname()
   * @model
   * @generated
   */
  String getHostname();

  /**
   * Sets the value of the '{@link org.unipampa.lesse.xCanopus.Monitor#getHostname <em>Hostname</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the new value of the '<em>Hostname</em>' attribute.
   * @see #getHostname()
   * @generated
   */
  void setHostname(String value);

  /**
   * Returns the value of the '<em><b>Ip</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <p>
   * If the meaning of the '<em>Ip</em>' attribute isn't clear,
   * there really should be more of a description here...
   * </p>
   * <!-- end-user-doc -->
   * @return the value of the '<em>Ip</em>' attribute.
   * @see #setIp(String)
   * @see org.unipampa.lesse.xCanopus.XCanopusPackage#getMonitor_Ip()
   * @model
   * @generated
   */
  String getIp();

  /**
   * Sets the value of the '{@link org.unipampa.lesse.xCanopus.Monitor#getIp <em>Ip</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the new value of the '<em>Ip</em>' attribute.
   * @see #getIp()
   * @generated
   */
  void setIp(String value);

  /**
   * Returns the value of the '<em><b>Hardware</b></em>' attribute.
   * The literals are from the enumeration {@link org.unipampa.lesse.xCanopus.HARDWARE}.
   * <!-- begin-user-doc -->
   * <p>
   * If the meaning of the '<em>Hardware</em>' attribute isn't clear,
   * there really should be more of a description here...
   * </p>
   * <!-- end-user-doc -->
   * @return the value of the '<em>Hardware</em>' attribute.
   * @see org.unipampa.lesse.xCanopus.HARDWARE
   * @see #setHardware(HARDWARE)
   * @see org.unipampa.lesse.xCanopus.XCanopusPackage#getMonitor_Hardware()
   * @model
   * @generated
   */
  HARDWARE getHardware();

  /**
   * Sets the value of the '{@link org.unipampa.lesse.xCanopus.Monitor#getHardware <em>Hardware</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the new value of the '<em>Hardware</em>' attribute.
   * @see org.unipampa.lesse.xCanopus.HARDWARE
   * @see #getHardware()
   * @generated
   */
  void setHardware(HARDWARE value);

  /**
   * Returns the value of the '<em><b>Sut</b></em>' reference list.
   * The list contents are of type {@link org.unipampa.lesse.xCanopus.SUT}.
   * <!-- begin-user-doc -->
   * <p>
   * If the meaning of the '<em>Sut</em>' reference list isn't clear,
   * there really should be more of a description here...
   * </p>
   * <!-- end-user-doc -->
   * @return the value of the '<em>Sut</em>' reference list.
   * @see org.unipampa.lesse.xCanopus.XCanopusPackage#getMonitor_Sut()
   * @model
   * @generated
   */
  EList<SUT> getSut();

} // Monitor
