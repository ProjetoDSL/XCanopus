/**
 * generated by Xtext 2.15.0
 */
package org.unipampa.lesse.xCanopus.impl;

import org.eclipse.emf.ecore.EAttribute;
import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.EEnum;
import org.eclipse.emf.ecore.EPackage;
import org.eclipse.emf.ecore.EReference;

import org.eclipse.emf.ecore.impl.EPackageImpl;

import org.unipampa.lesse.xCanopus.Counter;
import org.unipampa.lesse.xCanopus.Criteria;
import org.unipampa.lesse.xCanopus.Disk;
import org.unipampa.lesse.xCanopus.Disk_IO_Counter;
import org.unipampa.lesse.xCanopus.Include;
import org.unipampa.lesse.xCanopus.LoadGenerator;
import org.unipampa.lesse.xCanopus.Memory;
import org.unipampa.lesse.xCanopus.MemoryCounter;
import org.unipampa.lesse.xCanopus.Metric;
import org.unipampa.lesse.xCanopus.MetricModel;
import org.unipampa.lesse.xCanopus.Model;
import org.unipampa.lesse.xCanopus.Monitor;
import org.unipampa.lesse.xCanopus.Monitoring;
import org.unipampa.lesse.xCanopus.Threshold;
import org.unipampa.lesse.xCanopus.Transaction;
import org.unipampa.lesse.xCanopus.TransactionCounter;
import org.unipampa.lesse.xCanopus.XCanopusFactory;
import org.unipampa.lesse.xCanopus.XCanopusPackage;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model <b>Package</b>.
 * <!-- end-user-doc -->
 * @generated
 */
public class XCanopusPackageImpl extends EPackageImpl implements XCanopusPackage
{
  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass modelEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass includeEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass monitoringEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass metricEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass counterEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass sutEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass loadGeneratorEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass monitorEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass metricModelEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass memoryEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass transactionEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass diskEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass criteriaEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass thresholdEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass disk_IO_CounterEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass transactionCounterEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass memoryCounterEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EEnum hardwareEEnum = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EEnum suT_TYPEEEnum = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EEnum associatioN_CRITERIAEEnum = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EEnum counteR_DISKEEnum = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EEnum counteR_TRANSACTIONEEnum = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EEnum counteR_MEMORYEEnum = null;

  /**
   * Creates an instance of the model <b>Package</b>, registered with
   * {@link org.eclipse.emf.ecore.EPackage.Registry EPackage.Registry} by the package
   * package URI value.
   * <p>Note: the correct way to create the package is via the static
   * factory method {@link #init init()}, which also performs
   * initialization of the package, or returns the registered package,
   * if one already exists.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.eclipse.emf.ecore.EPackage.Registry
   * @see org.unipampa.lesse.xCanopus.XCanopusPackage#eNS_URI
   * @see #init()
   * @generated
   */
  private XCanopusPackageImpl()
  {
    super(eNS_URI, XCanopusFactory.eINSTANCE);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private static boolean isInited = false;

  /**
   * Creates, registers, and initializes the <b>Package</b> for this model, and for any others upon which it depends.
   *
   * <p>This method is used to initialize {@link XCanopusPackage#eINSTANCE} when that field is accessed.
   * Clients should not invoke it directly. Instead, they should simply access that field to obtain the package.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #eNS_URI
   * @see #createPackageContents()
   * @see #initializePackageContents()
   * @generated
   */
  public static XCanopusPackage init()
  {
    if (isInited) return (XCanopusPackage)EPackage.Registry.INSTANCE.getEPackage(XCanopusPackage.eNS_URI);

    // Obtain or create and register package
    Object registeredXCanopusPackage = EPackage.Registry.INSTANCE.get(eNS_URI);
    XCanopusPackageImpl theXCanopusPackage = registeredXCanopusPackage instanceof XCanopusPackageImpl ? (XCanopusPackageImpl)registeredXCanopusPackage : new XCanopusPackageImpl();

    isInited = true;

    // Create package meta-data objects
    theXCanopusPackage.createPackageContents();

    // Initialize created meta-data
    theXCanopusPackage.initializePackageContents();

    // Mark meta-data to indicate it can't be changed
    theXCanopusPackage.freeze();

    // Update the registry and return the package
    EPackage.Registry.INSTANCE.put(XCanopusPackage.eNS_URI, theXCanopusPackage);
    return theXCanopusPackage;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getModel()
  {
    return modelEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getModel_Includes()
  {
    return (EReference)modelEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getModel_Monitorings()
  {
    return (EReference)modelEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getModel_Suts()
  {
    return (EReference)modelEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getModel_LoadGenerators()
  {
    return (EReference)modelEClass.getEStructuralFeatures().get(3);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getInclude()
  {
    return includeEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getInclude_ImportURI()
  {
    return (EAttribute)includeEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getInclude_Name()
  {
    return (EAttribute)includeEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getMonitoring()
  {
    return monitoringEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getMetric()
  {
    return metricEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getMetric_Name()
  {
    return (EAttribute)metricEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getCounter()
  {
    return counterEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getCounter_Name()
  {
    return (EAttribute)counterEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getSUT()
  {
    return sutEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getSUT_Hostname()
  {
    return (EAttribute)sutEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getSUT_Ip()
  {
    return (EAttribute)sutEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getSUT_Hardware()
  {
    return (EAttribute)sutEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getSUT_Type()
  {
    return (EAttribute)sutEClass.getEStructuralFeatures().get(3);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getSUT_Sut()
  {
    return (EReference)sutEClass.getEStructuralFeatures().get(4);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getSUT_Metricmodel()
  {
    return (EReference)sutEClass.getEStructuralFeatures().get(5);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getLoadGenerator()
  {
    return loadGeneratorEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getLoadGenerator_IsMonitor()
  {
    return (EAttribute)loadGeneratorEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getLoadGenerator_Hostname()
  {
    return (EAttribute)loadGeneratorEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getLoadGenerator_Ip()
  {
    return (EAttribute)loadGeneratorEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getLoadGenerator_Hardware()
  {
    return (EAttribute)loadGeneratorEClass.getEStructuralFeatures().get(3);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getLoadGenerator_Sut()
  {
    return (EReference)loadGeneratorEClass.getEStructuralFeatures().get(4);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getLoadGenerator_Metricmodel()
  {
    return (EReference)loadGeneratorEClass.getEStructuralFeatures().get(5);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getLoadGenerator_Monitor()
  {
    return (EReference)loadGeneratorEClass.getEStructuralFeatures().get(6);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getMonitor()
  {
    return monitorEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getMonitor_Hostname()
  {
    return (EAttribute)monitorEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getMonitor_Ip()
  {
    return (EAttribute)monitorEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getMonitor_Hardware()
  {
    return (EAttribute)monitorEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getMonitor_Sut()
  {
    return (EReference)monitorEClass.getEStructuralFeatures().get(3);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getMetricModel()
  {
    return metricModelEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getMetricModel_Memory()
  {
    return (EReference)metricModelEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getMetricModel_Disk()
  {
    return (EReference)metricModelEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getMetricModel_Criteria()
  {
    return (EReference)metricModelEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getMetricModel_Threshold()
  {
    return (EReference)metricModelEClass.getEStructuralFeatures().get(3);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getMetricModel_DiskCounter()
  {
    return (EReference)metricModelEClass.getEStructuralFeatures().get(4);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getMetricModel_TransactionCounter()
  {
    return (EReference)metricModelEClass.getEStructuralFeatures().get(5);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getMetricModel_MemoryCounter()
  {
    return (EReference)metricModelEClass.getEStructuralFeatures().get(6);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getMetricModel_Metric()
  {
    return (EReference)metricModelEClass.getEStructuralFeatures().get(7);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getMetricModel_Counter()
  {
    return (EReference)metricModelEClass.getEStructuralFeatures().get(8);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getMemory()
  {
    return memoryEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getMemory_MemoryCounter()
  {
    return (EReference)memoryEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getTransaction()
  {
    return transactionEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getTransaction_Name()
  {
    return (EAttribute)transactionEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getTransaction_TransactionCounter()
  {
    return (EReference)transactionEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getDisk()
  {
    return diskEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getDisk_Disk_io_counter()
  {
    return (EReference)diskEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getCriteria()
  {
    return criteriaEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getCriteria_Value()
  {
    return (EAttribute)criteriaEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getThreshold()
  {
    return thresholdEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getThreshold_Value()
  {
    return (EAttribute)thresholdEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getDisk_IO_Counter()
  {
    return disk_IO_CounterEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getDisk_IO_Counter_CounterDisk()
  {
    return (EAttribute)disk_IO_CounterEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getTransactionCounter()
  {
    return transactionCounterEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getTransactionCounter_CounterTransaction()
  {
    return (EAttribute)transactionCounterEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getMemoryCounter()
  {
    return memoryCounterEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getMemoryCounter_CounterMemory()
  {
    return (EAttribute)memoryCounterEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EEnum getHARDWARE()
  {
    return hardwareEEnum;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EEnum getSUT_TYPE()
  {
    return suT_TYPEEEnum;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EEnum getASSOCIATION_CRITERIA()
  {
    return associatioN_CRITERIAEEnum;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EEnum getCOUNTER_DISK()
  {
    return counteR_DISKEEnum;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EEnum getCOUNTER_TRANSACTION()
  {
    return counteR_TRANSACTIONEEnum;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EEnum getCOUNTER_MEMORY()
  {
    return counteR_MEMORYEEnum;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public XCanopusFactory getXCanopusFactory()
  {
    return (XCanopusFactory)getEFactoryInstance();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private boolean isCreated = false;

  /**
   * Creates the meta-model objects for the package.  This method is
   * guarded to have no affect on any invocation but its first.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void createPackageContents()
  {
    if (isCreated) return;
    isCreated = true;

    // Create classes and their features
    modelEClass = createEClass(MODEL);
    createEReference(modelEClass, MODEL__INCLUDES);
    createEReference(modelEClass, MODEL__MONITORINGS);
    createEReference(modelEClass, MODEL__SUTS);
    createEReference(modelEClass, MODEL__LOAD_GENERATORS);

    includeEClass = createEClass(INCLUDE);
    createEAttribute(includeEClass, INCLUDE__IMPORT_URI);
    createEAttribute(includeEClass, INCLUDE__NAME);

    monitoringEClass = createEClass(MONITORING);

    metricEClass = createEClass(METRIC);
    createEAttribute(metricEClass, METRIC__NAME);

    counterEClass = createEClass(COUNTER);
    createEAttribute(counterEClass, COUNTER__NAME);

    sutEClass = createEClass(SUT);
    createEAttribute(sutEClass, SUT__HOSTNAME);
    createEAttribute(sutEClass, SUT__IP);
    createEAttribute(sutEClass, SUT__HARDWARE);
    createEAttribute(sutEClass, SUT__TYPE);
    createEReference(sutEClass, SUT__SUT);
    createEReference(sutEClass, SUT__METRICMODEL);

    loadGeneratorEClass = createEClass(LOAD_GENERATOR);
    createEAttribute(loadGeneratorEClass, LOAD_GENERATOR__IS_MONITOR);
    createEAttribute(loadGeneratorEClass, LOAD_GENERATOR__HOSTNAME);
    createEAttribute(loadGeneratorEClass, LOAD_GENERATOR__IP);
    createEAttribute(loadGeneratorEClass, LOAD_GENERATOR__HARDWARE);
    createEReference(loadGeneratorEClass, LOAD_GENERATOR__SUT);
    createEReference(loadGeneratorEClass, LOAD_GENERATOR__METRICMODEL);
    createEReference(loadGeneratorEClass, LOAD_GENERATOR__MONITOR);

    monitorEClass = createEClass(MONITOR);
    createEAttribute(monitorEClass, MONITOR__HOSTNAME);
    createEAttribute(monitorEClass, MONITOR__IP);
    createEAttribute(monitorEClass, MONITOR__HARDWARE);
    createEReference(monitorEClass, MONITOR__SUT);

    metricModelEClass = createEClass(METRIC_MODEL);
    createEReference(metricModelEClass, METRIC_MODEL__MEMORY);
    createEReference(metricModelEClass, METRIC_MODEL__DISK);
    createEReference(metricModelEClass, METRIC_MODEL__CRITERIA);
    createEReference(metricModelEClass, METRIC_MODEL__THRESHOLD);
    createEReference(metricModelEClass, METRIC_MODEL__DISK_COUNTER);
    createEReference(metricModelEClass, METRIC_MODEL__TRANSACTION_COUNTER);
    createEReference(metricModelEClass, METRIC_MODEL__MEMORY_COUNTER);
    createEReference(metricModelEClass, METRIC_MODEL__METRIC);
    createEReference(metricModelEClass, METRIC_MODEL__COUNTER);

    memoryEClass = createEClass(MEMORY);
    createEReference(memoryEClass, MEMORY__MEMORY_COUNTER);

    transactionEClass = createEClass(TRANSACTION);
    createEAttribute(transactionEClass, TRANSACTION__NAME);
    createEReference(transactionEClass, TRANSACTION__TRANSACTION_COUNTER);

    diskEClass = createEClass(DISK);
    createEReference(diskEClass, DISK__DISK_IO_COUNTER);

    criteriaEClass = createEClass(CRITERIA);
    createEAttribute(criteriaEClass, CRITERIA__VALUE);

    thresholdEClass = createEClass(THRESHOLD);
    createEAttribute(thresholdEClass, THRESHOLD__VALUE);

    disk_IO_CounterEClass = createEClass(DISK_IO_COUNTER);
    createEAttribute(disk_IO_CounterEClass, DISK_IO_COUNTER__COUNTER_DISK);

    transactionCounterEClass = createEClass(TRANSACTION_COUNTER);
    createEAttribute(transactionCounterEClass, TRANSACTION_COUNTER__COUNTER_TRANSACTION);

    memoryCounterEClass = createEClass(MEMORY_COUNTER);
    createEAttribute(memoryCounterEClass, MEMORY_COUNTER__COUNTER_MEMORY);

    // Create enums
    hardwareEEnum = createEEnum(HARDWARE);
    suT_TYPEEEnum = createEEnum(SUT_TYPE);
    associatioN_CRITERIAEEnum = createEEnum(ASSOCIATION_CRITERIA);
    counteR_DISKEEnum = createEEnum(COUNTER_DISK);
    counteR_TRANSACTIONEEnum = createEEnum(COUNTER_TRANSACTION);
    counteR_MEMORYEEnum = createEEnum(COUNTER_MEMORY);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private boolean isInitialized = false;

  /**
   * Complete the initialization of the package and its meta-model.  This
   * method is guarded to have no affect on any invocation but its first.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void initializePackageContents()
  {
    if (isInitialized) return;
    isInitialized = true;

    // Initialize package
    setName(eNAME);
    setNsPrefix(eNS_PREFIX);
    setNsURI(eNS_URI);

    // Create type parameters

    // Set bounds for type parameters

    // Add supertypes to classes
    memoryEClass.getESuperTypes().add(this.getMetric());
    diskEClass.getESuperTypes().add(this.getMetric());
    disk_IO_CounterEClass.getESuperTypes().add(this.getCounter());
    transactionCounterEClass.getESuperTypes().add(this.getCounter());
    memoryCounterEClass.getESuperTypes().add(this.getCounter());

    // Initialize classes and features; add operations and parameters
    initEClass(modelEClass, Model.class, "Model", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getModel_Includes(), this.getInclude(), null, "includes", null, 0, -1, Model.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getModel_Monitorings(), this.getMonitoring(), null, "monitorings", null, 0, -1, Model.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getModel_Suts(), this.getSUT(), null, "suts", null, 0, -1, Model.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getModel_LoadGenerators(), this.getLoadGenerator(), null, "loadGenerators", null, 0, -1, Model.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(includeEClass, Include.class, "Include", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getInclude_ImportURI(), ecorePackage.getEString(), "importURI", null, 0, 1, Include.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getInclude_Name(), ecorePackage.getEString(), "name", null, 0, 1, Include.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(monitoringEClass, Monitoring.class, "Monitoring", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(metricEClass, Metric.class, "Metric", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getMetric_Name(), ecorePackage.getEString(), "name", null, 0, 1, Metric.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(counterEClass, Counter.class, "Counter", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getCounter_Name(), ecorePackage.getEString(), "name", null, 0, 1, Counter.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(sutEClass, org.unipampa.lesse.xCanopus.SUT.class, "SUT", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getSUT_Hostname(), ecorePackage.getEString(), "hostname", null, 0, 1, org.unipampa.lesse.xCanopus.SUT.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getSUT_Ip(), ecorePackage.getEString(), "ip", null, 0, 1, org.unipampa.lesse.xCanopus.SUT.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getSUT_Hardware(), this.getHARDWARE(), "hardware", null, 0, 1, org.unipampa.lesse.xCanopus.SUT.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getSUT_Type(), this.getSUT_TYPE(), "type", null, 0, 1, org.unipampa.lesse.xCanopus.SUT.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getSUT_Sut(), this.getSUT(), null, "sut", null, 0, -1, org.unipampa.lesse.xCanopus.SUT.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_COMPOSITE, IS_RESOLVE_PROXIES, !IS_UNSETTABLE, !IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getSUT_Metricmodel(), this.getMetricModel(), null, "metricmodel", null, 0, 1, org.unipampa.lesse.xCanopus.SUT.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_COMPOSITE, IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(loadGeneratorEClass, LoadGenerator.class, "LoadGenerator", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getLoadGenerator_IsMonitor(), ecorePackage.getEBoolean(), "isMonitor", null, 0, 1, LoadGenerator.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getLoadGenerator_Hostname(), ecorePackage.getEString(), "hostname", null, 0, 1, LoadGenerator.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getLoadGenerator_Ip(), ecorePackage.getEString(), "ip", null, 0, 1, LoadGenerator.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getLoadGenerator_Hardware(), this.getHARDWARE(), "hardware", null, 0, 1, LoadGenerator.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getLoadGenerator_Sut(), this.getSUT(), null, "sut", null, 0, -1, LoadGenerator.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_COMPOSITE, IS_RESOLVE_PROXIES, !IS_UNSETTABLE, !IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getLoadGenerator_Metricmodel(), this.getMetricModel(), null, "metricmodel", null, 0, 1, LoadGenerator.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_COMPOSITE, IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getLoadGenerator_Monitor(), this.getMonitor(), null, "monitor", null, 0, 1, LoadGenerator.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_COMPOSITE, IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(monitorEClass, Monitor.class, "Monitor", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getMonitor_Hostname(), ecorePackage.getEString(), "hostname", null, 0, 1, Monitor.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getMonitor_Ip(), ecorePackage.getEString(), "ip", null, 0, 1, Monitor.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getMonitor_Hardware(), this.getHARDWARE(), "hardware", null, 0, 1, Monitor.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getMonitor_Sut(), this.getSUT(), null, "sut", null, 0, -1, Monitor.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_COMPOSITE, IS_RESOLVE_PROXIES, !IS_UNSETTABLE, !IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(metricModelEClass, MetricModel.class, "MetricModel", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getMetricModel_Memory(), this.getMemory(), null, "memory", null, 0, 1, MetricModel.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getMetricModel_Disk(), this.getDisk(), null, "disk", null, 0, 1, MetricModel.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getMetricModel_Criteria(), this.getCriteria(), null, "criteria", null, 0, -1, MetricModel.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getMetricModel_Threshold(), this.getThreshold(), null, "threshold", null, 0, -1, MetricModel.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getMetricModel_DiskCounter(), this.getDisk_IO_Counter(), null, "diskCounter", null, 0, 1, MetricModel.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getMetricModel_TransactionCounter(), this.getTransactionCounter(), null, "transactionCounter", null, 0, 1, MetricModel.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getMetricModel_MemoryCounter(), this.getMemoryCounter(), null, "memoryCounter", null, 0, 1, MetricModel.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getMetricModel_Metric(), this.getMetric(), null, "metric", null, 0, -1, MetricModel.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getMetricModel_Counter(), this.getCounter(), null, "counter", null, 0, -1, MetricModel.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(memoryEClass, Memory.class, "Memory", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getMemory_MemoryCounter(), this.getMemoryCounter(), null, "memoryCounter", null, 0, 1, Memory.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_COMPOSITE, IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(transactionEClass, Transaction.class, "Transaction", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getTransaction_Name(), ecorePackage.getEString(), "name", null, 0, 1, Transaction.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getTransaction_TransactionCounter(), this.getTransactionCounter(), null, "transactionCounter", null, 0, 1, Transaction.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_COMPOSITE, IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(diskEClass, Disk.class, "Disk", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getDisk_Disk_io_counter(), this.getDisk_IO_Counter(), null, "disk_io_counter", null, 0, 1, Disk.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_COMPOSITE, IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(criteriaEClass, Criteria.class, "Criteria", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getCriteria_Value(), ecorePackage.getEInt(), "value", null, 0, 1, Criteria.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(thresholdEClass, Threshold.class, "Threshold", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getThreshold_Value(), ecorePackage.getEInt(), "value", null, 0, 1, Threshold.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(disk_IO_CounterEClass, Disk_IO_Counter.class, "Disk_IO_Counter", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getDisk_IO_Counter_CounterDisk(), this.getCOUNTER_DISK(), "counterDisk", null, 0, -1, Disk_IO_Counter.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, !IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(transactionCounterEClass, TransactionCounter.class, "TransactionCounter", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getTransactionCounter_CounterTransaction(), this.getCOUNTER_TRANSACTION(), "counterTransaction", null, 0, -1, TransactionCounter.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, !IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(memoryCounterEClass, MemoryCounter.class, "MemoryCounter", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getMemoryCounter_CounterMemory(), this.getCOUNTER_MEMORY(), "counterMemory", null, 0, -1, MemoryCounter.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, !IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    // Initialize enums and add enum literals
    initEEnum(hardwareEEnum, org.unipampa.lesse.xCanopus.HARDWARE.class, "HARDWARE");
    addEEnumLiteral(hardwareEEnum, org.unipampa.lesse.xCanopus.HARDWARE.PHYSICAL_MACHINE);
    addEEnumLiteral(hardwareEEnum, org.unipampa.lesse.xCanopus.HARDWARE.VIRTUAL_MACHINE);
    addEEnumLiteral(hardwareEEnum, org.unipampa.lesse.xCanopus.HARDWARE.CLOUD_SERVICE);

    initEEnum(suT_TYPEEEnum, org.unipampa.lesse.xCanopus.SUT_TYPE.class, "SUT_TYPE");
    addEEnumLiteral(suT_TYPEEEnum, org.unipampa.lesse.xCanopus.SUT_TYPE.DESKTOPAPP);
    addEEnumLiteral(suT_TYPEEEnum, org.unipampa.lesse.xCanopus.SUT_TYPE.DATABASE);
    addEEnumLiteral(suT_TYPEEEnum, org.unipampa.lesse.xCanopus.SUT_TYPE.WEBAPP);
    addEEnumLiteral(suT_TYPEEEnum, org.unipampa.lesse.xCanopus.SUT_TYPE.WEBSERVICE);

    initEEnum(associatioN_CRITERIAEEnum, org.unipampa.lesse.xCanopus.ASSOCIATION_CRITERIA.class, "ASSOCIATION_CRITERIA");
    addEEnumLiteral(associatioN_CRITERIAEEnum, org.unipampa.lesse.xCanopus.ASSOCIATION_CRITERIA.BETWEEN);
    addEEnumLiteral(associatioN_CRITERIAEEnum, org.unipampa.lesse.xCanopus.ASSOCIATION_CRITERIA.GREATER_THAN_OR_EQUAL_TO);
    addEEnumLiteral(associatioN_CRITERIAEEnum, org.unipampa.lesse.xCanopus.ASSOCIATION_CRITERIA.LESS_THAN);

    initEEnum(counteR_DISKEEnum, org.unipampa.lesse.xCanopus.COUNTER_DISK.class, "COUNTER_DISK");
    addEEnumLiteral(counteR_DISKEEnum, org.unipampa.lesse.xCanopus.COUNTER_DISK.AVG_DISK_SECS_TRANSFER_COUNTER);
    addEEnumLiteral(counteR_DISKEEnum, org.unipampa.lesse.xCanopus.COUNTER_DISK.PERCENTAGE_IDLE_TIME_COUNTER);
    addEEnumLiteral(counteR_DISKEEnum, org.unipampa.lesse.xCanopus.COUNTER_DISK.DISK_TRANSFERS_SEC_COUNTER);
    addEEnumLiteral(counteR_DISKEEnum, org.unipampa.lesse.xCanopus.COUNTER_DISK.AVG_DISK_QUEUE_LENGTH_COUNTER);
    addEEnumLiteral(counteR_DISKEEnum, org.unipampa.lesse.xCanopus.COUNTER_DISK.SPLIT_IO_SEC_COUNTER);
    addEEnumLiteral(counteR_DISKEEnum, org.unipampa.lesse.xCanopus.COUNTER_DISK.FREE_MEGABYTES_COUNTER);

    initEEnum(counteR_TRANSACTIONEEnum, org.unipampa.lesse.xCanopus.COUNTER_TRANSACTION.class, "COUNTER_TRANSACTION");
    addEEnumLiteral(counteR_TRANSACTIONEEnum, org.unipampa.lesse.xCanopus.COUNTER_TRANSACTION.TRANSACTION_RESPONSE_TIME);
    addEEnumLiteral(counteR_TRANSACTIONEEnum, org.unipampa.lesse.xCanopus.COUNTER_TRANSACTION.TRANSACTION_PER_SECOND_TPS);
    addEEnumLiteral(counteR_TRANSACTIONEEnum, org.unipampa.lesse.xCanopus.COUNTER_TRANSACTION.TRANSACTION_SUCCESS_RATE);

    initEEnum(counteR_MEMORYEEnum, org.unipampa.lesse.xCanopus.COUNTER_MEMORY.class, "COUNTER_MEMORY");
    addEEnumLiteral(counteR_MEMORYEEnum, org.unipampa.lesse.xCanopus.COUNTER_MEMORY.AVALIABLE_MBYTES_COUNTER);
    addEEnumLiteral(counteR_MEMORYEEnum, org.unipampa.lesse.xCanopus.COUNTER_MEMORY.PAGES_SEC_COUNTER);
    addEEnumLiteral(counteR_MEMORYEEnum, org.unipampa.lesse.xCanopus.COUNTER_MEMORY.PAGE_READS_SEC_COUNTER);
    addEEnumLiteral(counteR_MEMORYEEnum, org.unipampa.lesse.xCanopus.COUNTER_MEMORY.WORKING_SET_COUNTER);
    addEEnumLiteral(counteR_MEMORYEEnum, org.unipampa.lesse.xCanopus.COUNTER_MEMORY.POOL_NONPAGE_BYTES_COUNTER);
    addEEnumLiteral(counteR_MEMORYEEnum, org.unipampa.lesse.xCanopus.COUNTER_MEMORY.PAGED_POOL_BYTES_COUNTER);
    addEEnumLiteral(counteR_MEMORYEEnum, org.unipampa.lesse.xCanopus.COUNTER_MEMORY.PAGED_POOL_FAILURES_COUNTER);
    addEEnumLiteral(counteR_MEMORYEEnum, org.unipampa.lesse.xCanopus.COUNTER_MEMORY.CACHE_BYTES_COUNTER);

    // Create resource
    createResource(eNS_URI);
  }

} //XCanopusPackageImpl
