/**
 * generated by Xtext 2.16.0
 */
package org.unipampa.lesse.xCanopus.impl;

import org.eclipse.emf.ecore.EAttribute;
import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.EEnum;
import org.eclipse.emf.ecore.EPackage;
import org.eclipse.emf.ecore.EReference;

import org.eclipse.emf.ecore.impl.EPackageImpl;

import org.unipampa.lesse.xCanopus.Main;
import org.unipampa.lesse.xCanopus.MetricModel;
import org.unipampa.lesse.xCanopus.Model;
import org.unipampa.lesse.xCanopus.XCanopusFactory;
import org.unipampa.lesse.xCanopus.XCanopusPackage;
import org.unipampa.lesse.xCanopus.and_atleast;
import org.unipampa.lesse.xCanopus.and_the_metric;
import org.unipampa.lesse.xCanopus.and_the_scenario;
import org.unipampa.lesse.xCanopus.and_workload;
import org.unipampa.lesse.xCanopus.given;
import org.unipampa.lesse.xCanopus.then;
import org.unipampa.lesse.xCanopus.when;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model <b>Package</b>.
 * <!-- end-user-doc -->
 * @generated
 */
public class XCanopusPackageImpl extends EPackageImpl implements XCanopusPackage
{
  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass modelEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass metricModelEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass mainEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass stepsEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass and_workloadEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass and_the_scenarioEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass and_atleastEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass and_the_metricEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass whenEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass thenEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass givenEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass scenarioEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass sutEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EEnum metrictypemonitoredEEnum = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EEnum metrictypeEEnum = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EEnum hardwareEEnum = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EEnum suT_TYPEEEnum = null;

  /**
   * Creates an instance of the model <b>Package</b>, registered with
   * {@link org.eclipse.emf.ecore.EPackage.Registry EPackage.Registry} by the package
   * package URI value.
   * <p>Note: the correct way to create the package is via the static
   * factory method {@link #init init()}, which also performs
   * initialization of the package, or returns the registered package,
   * if one already exists.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.eclipse.emf.ecore.EPackage.Registry
   * @see org.unipampa.lesse.xCanopus.XCanopusPackage#eNS_URI
   * @see #init()
   * @generated
   */
  private XCanopusPackageImpl()
  {
    super(eNS_URI, XCanopusFactory.eINSTANCE);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private static boolean isInited = false;

  /**
   * Creates, registers, and initializes the <b>Package</b> for this model, and for any others upon which it depends.
   *
   * <p>This method is used to initialize {@link XCanopusPackage#eINSTANCE} when that field is accessed.
   * Clients should not invoke it directly. Instead, they should simply access that field to obtain the package.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #eNS_URI
   * @see #createPackageContents()
   * @see #initializePackageContents()
   * @generated
   */
  public static XCanopusPackage init()
  {
    if (isInited) return (XCanopusPackage)EPackage.Registry.INSTANCE.getEPackage(XCanopusPackage.eNS_URI);

    // Obtain or create and register package
    Object registeredXCanopusPackage = EPackage.Registry.INSTANCE.get(eNS_URI);
    XCanopusPackageImpl theXCanopusPackage = registeredXCanopusPackage instanceof XCanopusPackageImpl ? (XCanopusPackageImpl)registeredXCanopusPackage : new XCanopusPackageImpl();

    isInited = true;

    // Create package meta-data objects
    theXCanopusPackage.createPackageContents();

    // Initialize created meta-data
    theXCanopusPackage.initializePackageContents();

    // Mark meta-data to indicate it can't be changed
    theXCanopusPackage.freeze();

    // Update the registry and return the package
    EPackage.Registry.INSTANCE.put(XCanopusPackage.eNS_URI, theXCanopusPackage);
    return theXCanopusPackage;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getModel()
  {
    return modelEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getModel_Main()
  {
    return (EReference)modelEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getMetricModel()
  {
    return metricModelEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getMetricModel_Name()
  {
    return (EAttribute)metricModelEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getMetricModel_Steps()
  {
    return (EReference)metricModelEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getMain()
  {
    return mainEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getMain_Main()
  {
    return (EReference)mainEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getSTEPS()
  {
    return stepsEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getand_workload()
  {
    return and_workloadEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getand_workload_Sut1()
  {
    return (EReference)and_workloadEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getand_workload_Suttype()
  {
    return (EAttribute)and_workloadEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getand_workload_Sut2()
  {
    return (EReference)and_workloadEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getand_the_scenario()
  {
    return and_the_scenarioEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getand_the_scenario_Scenario()
  {
    return (EReference)and_the_scenarioEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getand_atleast()
  {
    return and_atleastEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getand_atleast_Integer1()
  {
    return (EAttribute)and_atleastEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getand_atleast_Integer2()
  {
    return (EAttribute)and_atleastEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getand_the_metric()
  {
    return and_the_metricEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getand_the_metric_Metric()
  {
    return (EAttribute)and_the_metricEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getand_the_metric_Integer1()
  {
    return (EAttribute)and_the_metricEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getand_the_metric_Integer2()
  {
    return (EAttribute)and_the_metricEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getand_the_metric_Integer3()
  {
    return (EAttribute)and_the_metricEClass.getEStructuralFeatures().get(3);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getwhen()
  {
    return whenEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getwhen_Metrictype()
  {
    return (EAttribute)whenEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getthen()
  {
    return thenEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getthen_Metric()
  {
    return (EAttribute)thenEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getthen_Integer1()
  {
    return (EAttribute)thenEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getthen_Integer2()
  {
    return (EAttribute)thenEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getthen_Integer3()
  {
    return (EAttribute)thenEClass.getEStructuralFeatures().get(3);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getgiven()
  {
    return givenEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getgiven_Sut1()
  {
    return (EReference)givenEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getgiven_Suttype()
  {
    return (EAttribute)givenEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getgiven_Sut2()
  {
    return (EReference)givenEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getSCENARIO()
  {
    return scenarioEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getSCENARIO_Name()
  {
    return (EAttribute)scenarioEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getSUT()
  {
    return sutEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getSUT_Name()
  {
    return (EAttribute)sutEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EEnum getMETRICTYPEMONITORED()
  {
    return metrictypemonitoredEEnum;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EEnum getMETRICTYPE()
  {
    return metrictypeEEnum;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EEnum getHARDWARE()
  {
    return hardwareEEnum;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EEnum getSUT_TYPE()
  {
    return suT_TYPEEEnum;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public XCanopusFactory getXCanopusFactory()
  {
    return (XCanopusFactory)getEFactoryInstance();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private boolean isCreated = false;

  /**
   * Creates the meta-model objects for the package.  This method is
   * guarded to have no affect on any invocation but its first.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void createPackageContents()
  {
    if (isCreated) return;
    isCreated = true;

    // Create classes and their features
    modelEClass = createEClass(MODEL);
    createEReference(modelEClass, MODEL__MAIN);

    metricModelEClass = createEClass(METRIC_MODEL);
    createEAttribute(metricModelEClass, METRIC_MODEL__NAME);
    createEReference(metricModelEClass, METRIC_MODEL__STEPS);

    mainEClass = createEClass(MAIN);
    createEReference(mainEClass, MAIN__MAIN);

    stepsEClass = createEClass(STEPS);

    and_workloadEClass = createEClass(AND_WORKLOAD);
    createEReference(and_workloadEClass, AND_WORKLOAD__SUT1);
    createEAttribute(and_workloadEClass, AND_WORKLOAD__SUTTYPE);
    createEReference(and_workloadEClass, AND_WORKLOAD__SUT2);

    and_the_scenarioEClass = createEClass(AND_THE_SCENARIO);
    createEReference(and_the_scenarioEClass, AND_THE_SCENARIO__SCENARIO);

    and_atleastEClass = createEClass(AND_ATLEAST);
    createEAttribute(and_atleastEClass, AND_ATLEAST__INTEGER1);
    createEAttribute(and_atleastEClass, AND_ATLEAST__INTEGER2);

    and_the_metricEClass = createEClass(AND_THE_METRIC);
    createEAttribute(and_the_metricEClass, AND_THE_METRIC__METRIC);
    createEAttribute(and_the_metricEClass, AND_THE_METRIC__INTEGER1);
    createEAttribute(and_the_metricEClass, AND_THE_METRIC__INTEGER2);
    createEAttribute(and_the_metricEClass, AND_THE_METRIC__INTEGER3);

    whenEClass = createEClass(WHEN);
    createEAttribute(whenEClass, WHEN__METRICTYPE);

    thenEClass = createEClass(THEN);
    createEAttribute(thenEClass, THEN__METRIC);
    createEAttribute(thenEClass, THEN__INTEGER1);
    createEAttribute(thenEClass, THEN__INTEGER2);
    createEAttribute(thenEClass, THEN__INTEGER3);

    givenEClass = createEClass(GIVEN);
    createEReference(givenEClass, GIVEN__SUT1);
    createEAttribute(givenEClass, GIVEN__SUTTYPE);
    createEReference(givenEClass, GIVEN__SUT2);

    scenarioEClass = createEClass(SCENARIO);
    createEAttribute(scenarioEClass, SCENARIO__NAME);

    sutEClass = createEClass(SUT);
    createEAttribute(sutEClass, SUT__NAME);

    // Create enums
    metrictypemonitoredEEnum = createEEnum(METRICTYPEMONITORED);
    metrictypeEEnum = createEEnum(METRICTYPE);
    hardwareEEnum = createEEnum(HARDWARE);
    suT_TYPEEEnum = createEEnum(SUT_TYPE);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private boolean isInitialized = false;

  /**
   * Complete the initialization of the package and its meta-model.  This
   * method is guarded to have no affect on any invocation but its first.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void initializePackageContents()
  {
    if (isInitialized) return;
    isInitialized = true;

    // Initialize package
    setName(eNAME);
    setNsPrefix(eNS_PREFIX);
    setNsURI(eNS_URI);

    // Create type parameters

    // Set bounds for type parameters

    // Add supertypes to classes
    and_workloadEClass.getESuperTypes().add(this.getSTEPS());
    and_the_scenarioEClass.getESuperTypes().add(this.getSTEPS());
    and_atleastEClass.getESuperTypes().add(this.getSTEPS());
    and_the_metricEClass.getESuperTypes().add(this.getSTEPS());
    whenEClass.getESuperTypes().add(this.getSTEPS());
    thenEClass.getESuperTypes().add(this.getSTEPS());
    givenEClass.getESuperTypes().add(this.getSTEPS());

    // Initialize classes and features; add operations and parameters
    initEClass(modelEClass, Model.class, "Model", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getModel_Main(), this.getMain(), null, "main", null, 0, -1, Model.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(metricModelEClass, MetricModel.class, "MetricModel", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getMetricModel_Name(), ecorePackage.getEString(), "name", null, 0, 1, MetricModel.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getMetricModel_Steps(), this.getSTEPS(), null, "steps", null, 0, -1, MetricModel.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(mainEClass, Main.class, "Main", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getMain_Main(), ecorePackage.getEObject(), null, "main", null, 0, -1, Main.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(stepsEClass, org.unipampa.lesse.xCanopus.STEPS.class, "STEPS", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(and_workloadEClass, and_workload.class, "and_workload", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getand_workload_Sut1(), this.getSUT(), null, "sut1", null, 0, 1, and_workload.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_COMPOSITE, IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getand_workload_Suttype(), this.getSUT_TYPE(), "suttype", null, 0, 1, and_workload.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getand_workload_Sut2(), this.getSUT(), null, "sut2", null, 0, 1, and_workload.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_COMPOSITE, IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(and_the_scenarioEClass, and_the_scenario.class, "and_the_scenario", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getand_the_scenario_Scenario(), this.getSCENARIO(), null, "scenario", null, 0, 1, and_the_scenario.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_COMPOSITE, IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(and_atleastEClass, and_atleast.class, "and_atleast", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getand_atleast_Integer1(), ecorePackage.getEInt(), "integer1", null, 0, 1, and_atleast.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getand_atleast_Integer2(), ecorePackage.getEInt(), "integer2", null, 0, 1, and_atleast.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(and_the_metricEClass, and_the_metric.class, "and_the_metric", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getand_the_metric_Metric(), this.getMETRICTYPE(), "metric", null, 0, 1, and_the_metric.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getand_the_metric_Integer1(), ecorePackage.getEInt(), "integer1", null, 0, 1, and_the_metric.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getand_the_metric_Integer2(), ecorePackage.getEInt(), "integer2", null, 0, 1, and_the_metric.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getand_the_metric_Integer3(), ecorePackage.getEInt(), "integer3", null, 0, 1, and_the_metric.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(whenEClass, when.class, "when", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getwhen_Metrictype(), this.getMETRICTYPEMONITORED(), "metrictype", null, 0, 1, when.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(thenEClass, then.class, "then", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getthen_Metric(), this.getMETRICTYPE(), "metric", null, 0, 1, then.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getthen_Integer1(), ecorePackage.getEInt(), "integer1", null, 0, 1, then.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getthen_Integer2(), ecorePackage.getEInt(), "integer2", null, 0, 1, then.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getthen_Integer3(), ecorePackage.getEInt(), "integer3", null, 0, 1, then.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(givenEClass, given.class, "given", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getgiven_Sut1(), this.getSUT(), null, "sut1", null, 0, 1, given.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_COMPOSITE, IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getgiven_Suttype(), this.getSUT_TYPE(), "suttype", null, 0, 1, given.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getgiven_Sut2(), this.getSUT(), null, "sut2", null, 0, 1, given.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_COMPOSITE, IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(scenarioEClass, org.unipampa.lesse.xCanopus.SCENARIO.class, "SCENARIO", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getSCENARIO_Name(), ecorePackage.getEString(), "name", null, 0, 1, org.unipampa.lesse.xCanopus.SCENARIO.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(sutEClass, org.unipampa.lesse.xCanopus.SUT.class, "SUT", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getSUT_Name(), ecorePackage.getEString(), "name", null, 0, 1, org.unipampa.lesse.xCanopus.SUT.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    // Initialize enums and add enum literals
    initEEnum(metrictypemonitoredEEnum, org.unipampa.lesse.xCanopus.METRICTYPEMONITORED.class, "METRICTYPEMONITORED");
    addEEnumLiteral(metrictypemonitoredEEnum, org.unipampa.lesse.xCanopus.METRICTYPEMONITORED.MEMORY);
    addEEnumLiteral(metrictypemonitoredEEnum, org.unipampa.lesse.xCanopus.METRICTYPEMONITORED.DISK);
    addEEnumLiteral(metrictypemonitoredEEnum, org.unipampa.lesse.xCanopus.METRICTYPEMONITORED.WEBRESOURCES);
    addEEnumLiteral(metrictypemonitoredEEnum, org.unipampa.lesse.xCanopus.METRICTYPEMONITORED.TRANSACTION);
    addEEnumLiteral(metrictypemonitoredEEnum, org.unipampa.lesse.xCanopus.METRICTYPEMONITORED.PROCESSOR);

    initEEnum(metrictypeEEnum, org.unipampa.lesse.xCanopus.METRICTYPE.class, "METRICTYPE");
    addEEnumLiteral(metrictypeEEnum, org.unipampa.lesse.xCanopus.METRICTYPE.AVAILABLEMBYTESCOUNTER);
    addEEnumLiteral(metrictypeEEnum, org.unipampa.lesse.xCanopus.METRICTYPE.IDLETIMECOUNTER);
    addEEnumLiteral(metrictypeEEnum, org.unipampa.lesse.xCanopus.METRICTYPE.THROUGHPUTMBYTES);
    addEEnumLiteral(metrictypeEEnum, org.unipampa.lesse.xCanopus.METRICTYPE.TRANSACTIONPERSECOND);
    addEEnumLiteral(metrictypeEEnum, org.unipampa.lesse.xCanopus.METRICTYPE.TPS);
    addEEnumLiteral(metrictypeEEnum, org.unipampa.lesse.xCanopus.METRICTYPE.PROCESSORTIMECOUNTER);
    addEEnumLiteral(metrictypeEEnum, org.unipampa.lesse.xCanopus.METRICTYPE.TRANSACTIONRESPONSETIME);

    initEEnum(hardwareEEnum, org.unipampa.lesse.xCanopus.HARDWARE.class, "HARDWARE");
    addEEnumLiteral(hardwareEEnum, org.unipampa.lesse.xCanopus.HARDWARE.PHYSICAL_MACHINE);
    addEEnumLiteral(hardwareEEnum, org.unipampa.lesse.xCanopus.HARDWARE.VIRTUAL_MACHINE);
    addEEnumLiteral(hardwareEEnum, org.unipampa.lesse.xCanopus.HARDWARE.CLOUD_SERVICE);

    initEEnum(suT_TYPEEEnum, org.unipampa.lesse.xCanopus.SUT_TYPE.class, "SUT_TYPE");
    addEEnumLiteral(suT_TYPEEEnum, org.unipampa.lesse.xCanopus.SUT_TYPE.DESKTOPAPP);
    addEEnumLiteral(suT_TYPEEEnum, org.unipampa.lesse.xCanopus.SUT_TYPE.DATABASE);
    addEEnumLiteral(suT_TYPEEEnum, org.unipampa.lesse.xCanopus.SUT_TYPE.WEBAPP);
    addEEnumLiteral(suT_TYPEEEnum, org.unipampa.lesse.xCanopus.SUT_TYPE.WEBSERVICE);

    // Create resource
    createResource(eNS_URI);
  }

} //XCanopusPackageImpl
