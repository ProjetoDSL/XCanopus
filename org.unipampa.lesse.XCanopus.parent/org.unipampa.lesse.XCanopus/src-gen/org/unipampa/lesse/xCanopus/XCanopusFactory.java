/**
 * generated by Xtext 2.16.0
 */
package org.unipampa.lesse.xCanopus;

import org.eclipse.emf.ecore.EFactory;

/**
 * <!-- begin-user-doc -->
 * The <b>Factory</b> for the model.
 * It provides a create method for each non-abstract class of the model.
 * <!-- end-user-doc -->
 * @see org.unipampa.lesse.xCanopus.XCanopusPackage
 * @generated
 */
public interface XCanopusFactory extends EFactory
{
  /**
   * The singleton instance of the factory.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  XCanopusFactory eINSTANCE = org.unipampa.lesse.xCanopus.impl.XCanopusFactoryImpl.init();

  /**
   * Returns a new object of class '<em>Model</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Model</em>'.
   * @generated
   */
  Model createModel();

  /**
   * Returns a new object of class '<em>Metric Model</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Metric Model</em>'.
   * @generated
   */
  MetricModel createMetricModel();

  /**
   * Returns a new object of class '<em>Main</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Main</em>'.
   * @generated
   */
  Main createMain();

  /**
   * Returns a new object of class '<em>STEPS</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>STEPS</em>'.
   * @generated
   */
  STEPS createSTEPS();

  /**
   * Returns a new object of class '<em>and workload</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>and workload</em>'.
   * @generated
   */
  and_workload createand_workload();

  /**
   * Returns a new object of class '<em>and the scenario</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>and the scenario</em>'.
   * @generated
   */
  and_the_scenario createand_the_scenario();

  /**
   * Returns a new object of class '<em>and atleast</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>and atleast</em>'.
   * @generated
   */
  and_atleast createand_atleast();

  /**
   * Returns a new object of class '<em>and the metric</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>and the metric</em>'.
   * @generated
   */
  and_the_metric createand_the_metric();

  /**
   * Returns a new object of class '<em>when</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>when</em>'.
   * @generated
   */
  when createwhen();

  /**
   * Returns a new object of class '<em>then</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>then</em>'.
   * @generated
   */
  then createthen();

  /**
   * Returns a new object of class '<em>given</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>given</em>'.
   * @generated
   */
  given creategiven();

  /**
   * Returns a new object of class '<em>SCENARIO</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>SCENARIO</em>'.
   * @generated
   */
  SCENARIO createSCENARIO();

  /**
   * Returns a new object of class '<em>SUT</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>SUT</em>'.
   * @generated
   */
  SUT createSUT();

  /**
   * Returns the package supported by this factory.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the package supported by this factory.
   * @generated
   */
  XCanopusPackage getXCanopusPackage();

} //XCanopusFactory
