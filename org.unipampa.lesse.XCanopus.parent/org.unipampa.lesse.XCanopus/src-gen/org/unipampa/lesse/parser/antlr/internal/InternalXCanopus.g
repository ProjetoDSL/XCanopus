/*
 * generated by Xtext 2.16.0
 */
grammar InternalXCanopus;

options {
	superClass=AbstractInternalAntlrParser;
}

@lexer::header {
package org.unipampa.lesse.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package org.unipampa.lesse.parser.antlr.internal;

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.common.util.Enumerator;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import org.unipampa.lesse.services.XCanopusGrammarAccess;

}

@parser::members {

 	private XCanopusGrammarAccess grammarAccess;

    public InternalXCanopusParser(TokenStream input, XCanopusGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }

    @Override
    protected String getFirstRuleName() {
    	return "Model";
   	}

   	@Override
   	protected XCanopusGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}

}

@rulecatch {
    catch (RecognitionException re) {
        recover(input,re);
        appendSkippedTokens();
    }
}

// Entry rule entryRuleModel
entryRuleModel returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getModelRule()); }
	iv_ruleModel=ruleModel
	{ $current=$iv_ruleModel.current; }
	EOF;

// Rule Model
ruleModel returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				newCompositeNode(grammarAccess.getModelAccess().getMainMainParserRuleCall_0());
			}
			lv_main_0_0=ruleMain
			{
				if ($current==null) {
					$current = createModelElementForParent(grammarAccess.getModelRule());
				}
				add(
					$current,
					"main",
					lv_main_0_0,
					"org.unipampa.lesse.XCanopus.Main");
				afterParserOrEnumRuleCall();
			}
		)
	)*
;

// Entry rule entryRuleMetricModel
entryRuleMetricModel returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getMetricModelRule()); }
	iv_ruleMetricModel=ruleMetricModel
	{ $current=$iv_ruleMetricModel.current; }
	EOF;

// Rule MetricModel
ruleMetricModel returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Feature:'
		{
			newLeafNode(otherlv_0, grammarAccess.getMetricModelAccess().getFeatureKeyword_0());
		}
		{
			newCompositeNode(grammarAccess.getMetricModelAccess().getFreetextParserRuleCall_1());
		}
		ruleFreetext
		{
			afterParserOrEnumRuleCall();
		}
		otherlv_2='.'
		{
			newLeafNode(otherlv_2, grammarAccess.getMetricModelAccess().getFullStopKeyword_2());
		}
		otherlv_3='Monitoring:'
		{
			newLeafNode(otherlv_3, grammarAccess.getMetricModelAccess().getMonitoringKeyword_3());
		}
		(
			(
				lv_name_4_0=RULE_ID
				{
					newLeafNode(lv_name_4_0, grammarAccess.getMetricModelAccess().getNameIDTerminalRuleCall_4_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getMetricModelRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_4_0,
						"org.unipampa.lesse.XCanopus.ID");
				}
			)
		)
		otherlv_5='description'
		{
			newLeafNode(otherlv_5, grammarAccess.getMetricModelAccess().getDescriptionKeyword_5());
		}
		{
			newCompositeNode(grammarAccess.getMetricModelAccess().getFreetextParserRuleCall_6());
		}
		ruleFreetext
		{
			afterParserOrEnumRuleCall();
		}
		otherlv_7='.'
		{
			newLeafNode(otherlv_7, grammarAccess.getMetricModelAccess().getFullStopKeyword_7());
		}
		otherlv_8='{'
		{
			newLeafNode(otherlv_8, grammarAccess.getMetricModelAccess().getLeftCurlyBracketKeyword_8());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getMetricModelAccess().getStepsSTEPSParserRuleCall_9_0());
				}
				lv_steps_9_0=ruleSTEPS
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getMetricModelRule());
					}
					add(
						$current,
						"steps",
						lv_steps_9_0,
						"org.unipampa.lesse.XCanopus.STEPS");
					afterParserOrEnumRuleCall();
				}
			)
		)+
		otherlv_10='}'
		{
			newLeafNode(otherlv_10, grammarAccess.getMetricModelAccess().getRightCurlyBracketKeyword_10());
		}
	)
;

// Entry rule entryRuleMain
entryRuleMain returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getMainRule()); }
	iv_ruleMain=ruleMain
	{ $current=$iv_ruleMain.current; }
	EOF;

// Rule Main
ruleMain returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getMainAccess().getMainMetricModelParserRuleCall_0_0());
				}
				lv_main_0_1=ruleMetricModel
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getMainRule());
					}
					add(
						$current,
						"main",
						lv_main_0_1,
						"org.unipampa.lesse.XCanopus.MetricModel");
					afterParserOrEnumRuleCall();
				}
				    |
				{
					newCompositeNode(grammarAccess.getMainAccess().getMainSCENARIOParserRuleCall_0_1());
				}
				lv_main_0_2=ruleSCENARIO
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getMainRule());
					}
					add(
						$current,
						"main",
						lv_main_0_2,
						"org.unipampa.lesse.XCanopus.SCENARIO");
					afterParserOrEnumRuleCall();
				}
				    |
				{
					newCompositeNode(grammarAccess.getMainAccess().getMainSUTParserRuleCall_0_2());
				}
				lv_main_0_3=ruleSUT
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getMainRule());
					}
					add(
						$current,
						"main",
						lv_main_0_3,
						"org.unipampa.lesse.XCanopus.SUT");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleFreetext
entryRuleFreetext returns [String current=null]:
	{ newCompositeNode(grammarAccess.getFreetextRule()); }
	iv_ruleFreetext=ruleFreetext
	{ $current=$iv_ruleFreetext.current.getText(); }
	EOF;

// Rule Freetext
ruleFreetext returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getFreetextAccess().getEStringParserRuleCall());
		}
		this_EString_0=ruleEString
		{
			$current.merge(this_EString_0);
		}
		{
			afterParserOrEnumRuleCall();
		}
	)*
;

// Entry rule entryRuleSTEPS
entryRuleSTEPS returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSTEPSRule()); }
	iv_ruleSTEPS=ruleSTEPS
	{ $current=$iv_ruleSTEPS.current; }
	EOF;

// Rule STEPS
ruleSTEPS returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getSTEPSAccess().getGivenParserRuleCall_0());
		}
		this_given_0=rulegiven
		{
			$current = $this_given_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getSTEPSAccess().getWhenParserRuleCall_1());
		}
		this_when_1=rulewhen
		{
			$current = $this_when_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getSTEPSAccess().getThenParserRuleCall_2());
		}
		this_then_2=rulethen
		{
			$current = $this_then_2.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getSTEPSAccess().getAnd_workloadParserRuleCall_3());
		}
		this_and_workload_3=ruleand_workload
		{
			$current = $this_and_workload_3.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getSTEPSAccess().getAnd_atleastParserRuleCall_4());
		}
		this_and_atleast_4=ruleand_atleast
		{
			$current = $this_and_atleast_4.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getSTEPSAccess().getAnd_the_scenarioParserRuleCall_5());
		}
		this_and_the_scenario_5=ruleand_the_scenario
		{
			$current = $this_and_the_scenario_5.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getSTEPSAccess().getAnd_the_metricParserRuleCall_6());
		}
		this_and_the_metric_6=ruleand_the_metric
		{
			$current = $this_and_the_metric_6.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleand_workload
entryRuleand_workload returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAnd_workloadRule()); }
	iv_ruleand_workload=ruleand_workload
	{ $current=$iv_ruleand_workload.current; }
	EOF;

// Rule and_workload
ruleand_workload returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='And'
		{
			newLeafNode(otherlv_0, grammarAccess.getAnd_workloadAccess().getAndKeyword_0());
		}
		this_WORKLOADGENERATED_1=RULE_WORKLOADGENERATED
		{
			newLeafNode(this_WORKLOADGENERATED_1, grammarAccess.getAnd_workloadAccess().getWORKLOADGENERATEDTerminalRuleCall_1());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getAnd_workloadRule());
					}
				}
				otherlv_2=RULE_ID
				{
					newLeafNode(otherlv_2, grammarAccess.getAnd_workloadAccess().getSut1SUTCrossReference_2_0());
				}
			)
		)
		this_LOADGENERATORFORTHE_3=RULE_LOADGENERATORFORTHE
		{
			newLeafNode(this_LOADGENERATORFORTHE_3, grammarAccess.getAnd_workloadAccess().getLOADGENERATORFORTHETerminalRuleCall_3());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getAnd_workloadAccess().getSuttypeSUT_TYPEEnumRuleCall_4_0());
				}
				lv_suttype_4_0=ruleSUT_TYPE
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getAnd_workloadRule());
					}
					set(
						$current,
						"suttype",
						lv_suttype_4_0,
						"org.unipampa.lesse.XCanopus.SUT_TYPE");
					afterParserOrEnumRuleCall();
				}
			)
		)
		this_ON_5=RULE_ON
		{
			newLeafNode(this_ON_5, grammarAccess.getAnd_workloadAccess().getONTerminalRuleCall_5());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getAnd_workloadRule());
					}
				}
				otherlv_6=RULE_ID
				{
					newLeafNode(otherlv_6, grammarAccess.getAnd_workloadAccess().getSut2SUTCrossReference_6_0());
				}
			)
		)
	)
;

// Entry rule entryRuleand_the_scenario
entryRuleand_the_scenario returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAnd_the_scenarioRule()); }
	iv_ruleand_the_scenario=ruleand_the_scenario
	{ $current=$iv_ruleand_the_scenario.current; }
	EOF;

// Rule and_the_scenario
ruleand_the_scenario returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='And'
		{
			newLeafNode(otherlv_0, grammarAccess.getAnd_the_scenarioAccess().getAndKeyword_0());
		}
		this_THE_1=RULE_THE
		{
			newLeafNode(this_THE_1, grammarAccess.getAnd_the_scenarioAccess().getTHETerminalRuleCall_1());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getAnd_the_scenarioRule());
					}
				}
				otherlv_2=RULE_ID
				{
					newLeafNode(otherlv_2, grammarAccess.getAnd_the_scenarioAccess().getScenarioSCENARIOCrossReference_2_0());
				}
			)
		)
		this_ISTESTSCENARIO_3=RULE_ISTESTSCENARIO
		{
			newLeafNode(this_ISTESTSCENARIO_3, grammarAccess.getAnd_the_scenarioAccess().getISTESTSCENARIOTerminalRuleCall_3());
		}
	)
;

// Entry rule entryRuleand_atleast
entryRuleand_atleast returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAnd_atleastRule()); }
	iv_ruleand_atleast=ruleand_atleast
	{ $current=$iv_ruleand_atleast.current; }
	EOF;

// Rule and_atleast
ruleand_atleast returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='And'
		{
			newLeafNode(otherlv_0, grammarAccess.getAnd_atleastAccess().getAndKeyword_0());
		}
		this_ATL_1=RULE_ATL
		{
			newLeafNode(this_ATL_1, grammarAccess.getAnd_atleastAccess().getATLTerminalRuleCall_1());
		}
		(
			(
				lv_integer1_2_0=RULE_INT
				{
					newLeafNode(lv_integer1_2_0, grammarAccess.getAnd_atleastAccess().getInteger1INTTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getAnd_atleastRule());
					}
					setWithLastConsumed(
						$current,
						"integer1",
						lv_integer1_2_0,
						"org.unipampa.lesse.XCanopus.INT");
				}
			)
		)
		(
			this_MBWHEN_GREATEROREQUAL_TEXT_3=RULE_MBWHEN_GREATEROREQUAL_TEXT
			{
				newLeafNode(this_MBWHEN_GREATEROREQUAL_TEXT_3, grammarAccess.getAnd_atleastAccess().getMBWHEN_GREATEROREQUAL_TEXTTerminalRuleCall_3_0());
			}
			    |
			this_MBWHEN_LESSTHAN_TEXT_4=RULE_MBWHEN_LESSTHAN_TEXT
			{
				newLeafNode(this_MBWHEN_LESSTHAN_TEXT_4, grammarAccess.getAnd_atleastAccess().getMBWHEN_LESSTHAN_TEXTTerminalRuleCall_3_1());
			}
			    |
			this_MBWHEN_MORETHAN_TEXT_5=RULE_MBWHEN_MORETHAN_TEXT
			{
				newLeafNode(this_MBWHEN_MORETHAN_TEXT_5, grammarAccess.getAnd_atleastAccess().getMBWHEN_MORETHAN_TEXTTerminalRuleCall_3_2());
			}
			    |
			this_MBWHEN_MINOROREQUAL_TEXT_6=RULE_MBWHEN_MINOROREQUAL_TEXT
			{
				newLeafNode(this_MBWHEN_MINOROREQUAL_TEXT_6, grammarAccess.getAnd_atleastAccess().getMBWHEN_MINOROREQUAL_TEXTTerminalRuleCall_3_3());
			}
		)
		(
			(
				lv_integer2_7_0=RULE_INT
				{
					newLeafNode(lv_integer2_7_0, grammarAccess.getAnd_atleastAccess().getInteger2INTTerminalRuleCall_4_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getAnd_atleastRule());
					}
					setWithLastConsumed(
						$current,
						"integer2",
						lv_integer2_7_0,
						"org.unipampa.lesse.XCanopus.INT");
				}
			)
		)
	)
;

// Entry rule entryRuleand_the_metric
entryRuleand_the_metric returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAnd_the_metricRule()); }
	iv_ruleand_the_metric=ruleand_the_metric
	{ $current=$iv_ruleand_the_metric.current; }
	EOF;

// Rule and_the_metric
ruleand_the_metric returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='And'
		{
			newLeafNode(otherlv_0, grammarAccess.getAnd_the_metricAccess().getAndKeyword_0());
		}
		this_THE_1=RULE_THE
		{
			newLeafNode(this_THE_1, grammarAccess.getAnd_the_metricAccess().getTHETerminalRuleCall_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getAnd_the_metricAccess().getMetricMETRICTYPEEnumRuleCall_2_0());
				}
				lv_metric_2_0=ruleMETRICTYPE
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getAnd_the_metricRule());
					}
					set(
						$current,
						"metric",
						lv_metric_2_0,
						"org.unipampa.lesse.XCanopus.METRICTYPE");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			this_SHOULDBELESSTHAN_TEXT_3=RULE_SHOULDBELESSTHAN_TEXT
			{
				newLeafNode(this_SHOULDBELESSTHAN_TEXT_3, grammarAccess.getAnd_the_metricAccess().getSHOULDBELESSTHAN_TEXTTerminalRuleCall_3_0());
			}
			    |
			this_SHOULDBEATLEAST_TEXT_4=RULE_SHOULDBEATLEAST_TEXT
			{
				newLeafNode(this_SHOULDBEATLEAST_TEXT_4, grammarAccess.getAnd_the_metricAccess().getSHOULDBEATLEAST_TEXTTerminalRuleCall_3_1());
			}
			    |
			this_SHOULDBEGREATERTHAN_5=RULE_SHOULDBEGREATERTHAN
			{
				newLeafNode(this_SHOULDBEGREATERTHAN_5, grammarAccess.getAnd_the_metricAccess().getSHOULDBEGREATERTHANTerminalRuleCall_3_2());
			}
		)
		(
			(
				lv_integer1_6_0=RULE_INT
				{
					newLeafNode(lv_integer1_6_0, grammarAccess.getAnd_the_metricAccess().getInteger1INTTerminalRuleCall_4_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getAnd_the_metricRule());
					}
					setWithLastConsumed(
						$current,
						"integer1",
						lv_integer1_6_0,
						"org.unipampa.lesse.XCanopus.INT");
				}
			)
		)
		(
			this_WHENTHENUMBERISLESSTHAN_TEXT_7=RULE_WHENTHENUMBERISLESSTHAN_TEXT
			{
				newLeafNode(this_WHENTHENUMBERISLESSTHAN_TEXT_7, grammarAccess.getAnd_the_metricAccess().getWHENTHENUMBERISLESSTHAN_TEXTTerminalRuleCall_5_0());
			}
			    |
			this_WHENTHENUMBERISGREATERTHAN_TEXT_8=RULE_WHENTHENUMBERISGREATERTHAN_TEXT
			{
				newLeafNode(this_WHENTHENUMBERISGREATERTHAN_TEXT_8, grammarAccess.getAnd_the_metricAccess().getWHENTHENUMBERISGREATERTHAN_TEXTTerminalRuleCall_5_1());
			}
			    |
			this_WHENTHENUMBERISGREATEROREQUAL_TEXT_9=RULE_WHENTHENUMBERISGREATEROREQUAL_TEXT
			{
				newLeafNode(this_WHENTHENUMBERISGREATEROREQUAL_TEXT_9, grammarAccess.getAnd_the_metricAccess().getWHENTHENUMBERISGREATEROREQUAL_TEXTTerminalRuleCall_5_2());
			}
			    |
			this_WHENTHENUMBERIRLESSEROREQUAL_TEXT_10=RULE_WHENTHENUMBERIRLESSEROREQUAL_TEXT
			{
				newLeafNode(this_WHENTHENUMBERIRLESSEROREQUAL_TEXT_10, grammarAccess.getAnd_the_metricAccess().getWHENTHENUMBERIRLESSEROREQUAL_TEXTTerminalRuleCall_5_3());
			}
			    |
			this_WHENTHENUMBERAREBETWEEN_TEXT_11=RULE_WHENTHENUMBERAREBETWEEN_TEXT
			{
				newLeafNode(this_WHENTHENUMBERAREBETWEEN_TEXT_11, grammarAccess.getAnd_the_metricAccess().getWHENTHENUMBERAREBETWEEN_TEXTTerminalRuleCall_5_4());
			}
		)
		(
			(
				lv_integer2_12_0=RULE_INT
				{
					newLeafNode(lv_integer2_12_0, grammarAccess.getAnd_the_metricAccess().getInteger2INTTerminalRuleCall_6_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getAnd_the_metricRule());
					}
					setWithLastConsumed(
						$current,
						"integer2",
						lv_integer2_12_0,
						"org.unipampa.lesse.XCanopus.INT");
				}
			)
		)
		(
			this_AND_13=RULE_AND
			{
				newLeafNode(this_AND_13, grammarAccess.getAnd_the_metricAccess().getANDTerminalRuleCall_7_0());
			}
			(
				(
					lv_integer3_14_0=RULE_INT
					{
						newLeafNode(lv_integer3_14_0, grammarAccess.getAnd_the_metricAccess().getInteger3INTTerminalRuleCall_7_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getAnd_the_metricRule());
						}
						setWithLastConsumed(
							$current,
							"integer3",
							lv_integer3_14_0,
							"org.unipampa.lesse.XCanopus.INT");
					}
				)
			)
		)?
	)
;

// Entry rule entryRulewhen
entryRulewhen returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getWhenRule()); }
	iv_rulewhen=rulewhen
	{ $current=$iv_rulewhen.current; }
	EOF;

// Rule when
rulewhen returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='When'
		{
			newLeafNode(otherlv_0, grammarAccess.getWhenAccess().getWhenKeyword_0());
		}
		this_THE_1=RULE_THE
		{
			newLeafNode(this_THE_1, grammarAccess.getWhenAccess().getTHETerminalRuleCall_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getWhenAccess().getMetrictypeMETRICTYPEMONITOREDEnumRuleCall_2_0());
				}
				lv_metrictype_2_0=ruleMETRICTYPEMONITORED
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getWhenRule());
					}
					set(
						$current,
						"metrictype",
						lv_metrictype_2_0,
						"org.unipampa.lesse.XCanopus.METRICTYPEMONITORED");
					afterParserOrEnumRuleCall();
				}
			)
		)
		this_ISMONITORED_3=RULE_ISMONITORED
		{
			newLeafNode(this_ISMONITORED_3, grammarAccess.getWhenAccess().getISMONITOREDTerminalRuleCall_3());
		}
	)
;

// Entry rule entryRulethen
entryRulethen returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getThenRule()); }
	iv_rulethen=rulethen
	{ $current=$iv_rulethen.current; }
	EOF;

// Rule then
rulethen returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Then'
		{
			newLeafNode(otherlv_0, grammarAccess.getThenAccess().getThenKeyword_0());
		}
		this_THE_1=RULE_THE
		{
			newLeafNode(this_THE_1, grammarAccess.getThenAccess().getTHETerminalRuleCall_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getThenAccess().getMetricMETRICTYPEEnumRuleCall_2_0());
				}
				lv_metric_2_0=ruleMETRICTYPE
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getThenRule());
					}
					set(
						$current,
						"metric",
						lv_metric_2_0,
						"org.unipampa.lesse.XCanopus.METRICTYPE");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			this_SHOULDBELESSTHAN_TEXT_3=RULE_SHOULDBELESSTHAN_TEXT
			{
				newLeafNode(this_SHOULDBELESSTHAN_TEXT_3, grammarAccess.getThenAccess().getSHOULDBELESSTHAN_TEXTTerminalRuleCall_3_0());
			}
			    |
			this_SHOULDBEATLEAST_TEXT_4=RULE_SHOULDBEATLEAST_TEXT
			{
				newLeafNode(this_SHOULDBEATLEAST_TEXT_4, grammarAccess.getThenAccess().getSHOULDBEATLEAST_TEXTTerminalRuleCall_3_1());
			}
			    |
			this_SHOULDBEGREATERTHAN_5=RULE_SHOULDBEGREATERTHAN
			{
				newLeafNode(this_SHOULDBEGREATERTHAN_5, grammarAccess.getThenAccess().getSHOULDBEGREATERTHANTerminalRuleCall_3_2());
			}
		)
		(
			(
				lv_integer1_6_0=RULE_INT
				{
					newLeafNode(lv_integer1_6_0, grammarAccess.getThenAccess().getInteger1INTTerminalRuleCall_4_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getThenRule());
					}
					setWithLastConsumed(
						$current,
						"integer1",
						lv_integer1_6_0,
						"org.unipampa.lesse.XCanopus.INT");
				}
			)
		)
		(
			this_WHENTHENUMBERISLESSTHAN_TEXT_7=RULE_WHENTHENUMBERISLESSTHAN_TEXT
			{
				newLeafNode(this_WHENTHENUMBERISLESSTHAN_TEXT_7, grammarAccess.getThenAccess().getWHENTHENUMBERISLESSTHAN_TEXTTerminalRuleCall_5_0());
			}
			    |
			this_WHENTHENUMBERISGREATERTHAN_TEXT_8=RULE_WHENTHENUMBERISGREATERTHAN_TEXT
			{
				newLeafNode(this_WHENTHENUMBERISGREATERTHAN_TEXT_8, grammarAccess.getThenAccess().getWHENTHENUMBERISGREATERTHAN_TEXTTerminalRuleCall_5_1());
			}
			    |
			this_WHENTHENUMBERISGREATEROREQUAL_TEXT_9=RULE_WHENTHENUMBERISGREATEROREQUAL_TEXT
			{
				newLeafNode(this_WHENTHENUMBERISGREATEROREQUAL_TEXT_9, grammarAccess.getThenAccess().getWHENTHENUMBERISGREATEROREQUAL_TEXTTerminalRuleCall_5_2());
			}
			    |
			this_WHENTHENUMBERIRLESSEROREQUAL_TEXT_10=RULE_WHENTHENUMBERIRLESSEROREQUAL_TEXT
			{
				newLeafNode(this_WHENTHENUMBERIRLESSEROREQUAL_TEXT_10, grammarAccess.getThenAccess().getWHENTHENUMBERIRLESSEROREQUAL_TEXTTerminalRuleCall_5_3());
			}
			    |
			this_WHENTHENUMBERAREBETWEEN_TEXT_11=RULE_WHENTHENUMBERAREBETWEEN_TEXT
			{
				newLeafNode(this_WHENTHENUMBERAREBETWEEN_TEXT_11, grammarAccess.getThenAccess().getWHENTHENUMBERAREBETWEEN_TEXTTerminalRuleCall_5_4());
			}
		)
		(
			(
				lv_integer2_12_0=RULE_INT
				{
					newLeafNode(lv_integer2_12_0, grammarAccess.getThenAccess().getInteger2INTTerminalRuleCall_6_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getThenRule());
					}
					setWithLastConsumed(
						$current,
						"integer2",
						lv_integer2_12_0,
						"org.unipampa.lesse.XCanopus.INT");
				}
			)
		)
		(
			this_AND_13=RULE_AND
			{
				newLeafNode(this_AND_13, grammarAccess.getThenAccess().getANDTerminalRuleCall_7_0());
			}
			(
				(
					lv_integer3_14_0=RULE_INT
					{
						newLeafNode(lv_integer3_14_0, grammarAccess.getThenAccess().getInteger3INTTerminalRuleCall_7_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getThenRule());
						}
						setWithLastConsumed(
							$current,
							"integer3",
							lv_integer3_14_0,
							"org.unipampa.lesse.XCanopus.INT");
					}
				)
			)
		)?
	)
;

// Entry rule entryRulegiven
entryRulegiven returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getGivenRule()); }
	iv_rulegiven=rulegiven
	{ $current=$iv_rulegiven.current; }
	EOF;

// Rule given
rulegiven returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Given'
		{
			newLeafNode(otherlv_0, grammarAccess.getGivenAccess().getGivenKeyword_0());
		}
		this_THAT_1=RULE_THAT
		{
			newLeafNode(this_THAT_1, grammarAccess.getGivenAccess().getTHATTerminalRuleCall_1());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getGivenRule());
					}
				}
				otherlv_2=RULE_ID
				{
					newLeafNode(otherlv_2, grammarAccess.getGivenAccess().getSut1SUTCrossReference_2_0());
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getGivenAccess().getSuttypeSUT_TYPEEnumRuleCall_3_0());
				}
				lv_suttype_3_0=ruleSUT_TYPE
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getGivenRule());
					}
					set(
						$current,
						"suttype",
						lv_suttype_3_0,
						"org.unipampa.lesse.XCanopus.SUT_TYPE");
					afterParserOrEnumRuleCall();
				}
			)
		)
		this_MONITOREDBY_4=RULE_MONITOREDBY
		{
			newLeafNode(this_MONITOREDBY_4, grammarAccess.getGivenAccess().getMONITOREDBYTerminalRuleCall_4());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getGivenRule());
					}
				}
				otherlv_5=RULE_ID
				{
					newLeafNode(otherlv_5, grammarAccess.getGivenAccess().getSut2SUTCrossReference_5_0());
				}
			)
		)
		this_MONITOR_TEXT_6=RULE_MONITOR_TEXT
		{
			newLeafNode(this_MONITOR_TEXT_6, grammarAccess.getGivenAccess().getMONITOR_TEXTTerminalRuleCall_6());
		}
	)
;

// Entry rule entryRuleSCENARIO
entryRuleSCENARIO returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSCENARIORule()); }
	iv_ruleSCENARIO=ruleSCENARIO
	{ $current=$iv_ruleSCENARIO.current; }
	EOF;

// Rule SCENARIO
ruleSCENARIO returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Scenario'
		{
			newLeafNode(otherlv_0, grammarAccess.getSCENARIOAccess().getScenarioKeyword_0());
		}
		otherlv_1='{'
		{
			newLeafNode(otherlv_1, grammarAccess.getSCENARIOAccess().getLeftCurlyBracketKeyword_1());
		}
		(
			(
				lv_name_2_0=RULE_ID
				{
					newLeafNode(lv_name_2_0, grammarAccess.getSCENARIOAccess().getNameIDTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getSCENARIORule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_2_0,
						"org.unipampa.lesse.XCanopus.ID");
				}
			)
		)
		otherlv_3='}'
		{
			newLeafNode(otherlv_3, grammarAccess.getSCENARIOAccess().getRightCurlyBracketKeyword_3());
		}
	)
;

// Entry rule entryRuleSUT
entryRuleSUT returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSUTRule()); }
	iv_ruleSUT=ruleSUT
	{ $current=$iv_ruleSUT.current; }
	EOF;

// Rule SUT
ruleSUT returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getSUTAccess().getSUTAction_0(),
					$current);
			}
		)
		otherlv_1='SUT'
		{
			newLeafNode(otherlv_1, grammarAccess.getSUTAccess().getSUTKeyword_1());
		}
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getSUTAccess().getLeftCurlyBracketKeyword_2());
		}
		(
			(
				lv_name_3_0=RULE_ID
				{
					newLeafNode(lv_name_3_0, grammarAccess.getSUTAccess().getNameIDTerminalRuleCall_3_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getSUTRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_3_0,
						"org.unipampa.lesse.XCanopus.ID");
				}
			)
		)
		otherlv_4='}'
		{
			newLeafNode(otherlv_4, grammarAccess.getSUTAccess().getRightCurlyBracketKeyword_4());
		}
	)
;

// Entry rule entryRuleEString
entryRuleEString returns [String current=null]:
	{ newCompositeNode(grammarAccess.getEStringRule()); }
	iv_ruleEString=ruleEString
	{ $current=$iv_ruleEString.current.getText(); }
	EOF;

// Rule EString
ruleEString returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		this_STRING_0=RULE_STRING
		{
			$current.merge(this_STRING_0);
		}
		{
			newLeafNode(this_STRING_0, grammarAccess.getEStringAccess().getSTRINGTerminalRuleCall_0());
		}
		    |
		this_ID_1=RULE_ID
		{
			$current.merge(this_ID_1);
		}
		{
			newLeafNode(this_ID_1, grammarAccess.getEStringAccess().getIDTerminalRuleCall_1());
		}
	)
;

// Rule METRICTYPEMONITORED
ruleMETRICTYPEMONITORED returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='memory'
			{
				$current = grammarAccess.getMETRICTYPEMONITOREDAccess().getMEMORYEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getMETRICTYPEMONITOREDAccess().getMEMORYEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='disk'
			{
				$current = grammarAccess.getMETRICTYPEMONITOREDAccess().getDISKEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getMETRICTYPEMONITOREDAccess().getDISKEnumLiteralDeclaration_1());
			}
		)
		    |
		(
			enumLiteral_2='web resources'
			{
				$current = grammarAccess.getMETRICTYPEMONITOREDAccess().getWEBRESOURCESEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_2, grammarAccess.getMETRICTYPEMONITOREDAccess().getWEBRESOURCESEnumLiteralDeclaration_2());
			}
		)
		    |
		(
			enumLiteral_3='transaction'
			{
				$current = grammarAccess.getMETRICTYPEMONITOREDAccess().getTRANSACTIONEnumLiteralDeclaration_3().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_3, grammarAccess.getMETRICTYPEMONITOREDAccess().getTRANSACTIONEnumLiteralDeclaration_3());
			}
		)
		    |
		(
			enumLiteral_4='processor'
			{
				$current = grammarAccess.getMETRICTYPEMONITOREDAccess().getPROCESSOREnumLiteralDeclaration_4().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_4, grammarAccess.getMETRICTYPEMONITOREDAccess().getPROCESSOREnumLiteralDeclaration_4());
			}
		)
	)
;

// Rule METRICTYPE
ruleMETRICTYPE returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='available mbytes counter'
			{
				$current = grammarAccess.getMETRICTYPEAccess().getAvailablembytescounterEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getMETRICTYPEAccess().getAvailablembytescounterEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='% idle time counter'
			{
				$current = grammarAccess.getMETRICTYPEAccess().getIdletimecounterEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getMETRICTYPEAccess().getIdletimecounterEnumLiteralDeclaration_1());
			}
		)
		    |
		(
			enumLiteral_2='throughput mbytes'
			{
				$current = grammarAccess.getMETRICTYPEAccess().getThroughputmbytesEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_2, grammarAccess.getMETRICTYPEAccess().getThroughputmbytesEnumLiteralDeclaration_2());
			}
		)
		    |
		(
			enumLiteral_3='transactions per second'
			{
				$current = grammarAccess.getMETRICTYPEAccess().getTransactionpersecondEnumLiteralDeclaration_3().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_3, grammarAccess.getMETRICTYPEAccess().getTransactionpersecondEnumLiteralDeclaration_3());
			}
		)
		    |
		(
			enumLiteral_4='TPS'
			{
				$current = grammarAccess.getMETRICTYPEAccess().getTPSEnumLiteralDeclaration_4().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_4, grammarAccess.getMETRICTYPEAccess().getTPSEnumLiteralDeclaration_4());
			}
		)
		    |
		(
			enumLiteral_5='% processor time count'
			{
				$current = grammarAccess.getMETRICTYPEAccess().getProcessortimecounterEnumLiteralDeclaration_5().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_5, grammarAccess.getMETRICTYPEAccess().getProcessortimecounterEnumLiteralDeclaration_5());
			}
		)
		    |
		(
			enumLiteral_6='transactions response time'
			{
				$current = grammarAccess.getMETRICTYPEAccess().getTransactionresponsetimeEnumLiteralDeclaration_6().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_6, grammarAccess.getMETRICTYPEAccess().getTransactionresponsetimeEnumLiteralDeclaration_6());
			}
		)
	)
;

// Rule SUT_TYPE
ruleSUT_TYPE returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='DESKTOPAPP'
			{
				$current = grammarAccess.getSUT_TYPEAccess().getDESKTOPAPPEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getSUT_TYPEAccess().getDESKTOPAPPEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='DATABASE'
			{
				$current = grammarAccess.getSUT_TYPEAccess().getDATABASEEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getSUT_TYPEAccess().getDATABASEEnumLiteralDeclaration_1());
			}
		)
		    |
		(
			enumLiteral_2='WEBAPP'
			{
				$current = grammarAccess.getSUT_TYPEAccess().getWEBAPPEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_2, grammarAccess.getSUT_TYPEAccess().getWEBAPPEnumLiteralDeclaration_2());
			}
		)
		    |
		(
			enumLiteral_3='WEBSERVICE'
			{
				$current = grammarAccess.getSUT_TYPEAccess().getWEBSERVICEEnumLiteralDeclaration_3().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_3, grammarAccess.getSUT_TYPEAccess().getWEBSERVICEEnumLiteralDeclaration_3());
			}
		)
	)
;

RULE_SHOULDBELESSTHAN_TEXT : 'should be less than';

RULE_SHOULDBEATLEAST_TEXT : 'should be at least';

RULE_SHOULDBEGREATERTHAN : 'should be more than';

RULE_WHENTHENUMBERISLESSTHAN_TEXT : 'when the number of virtual users is less than';

RULE_WHENTHENUMBERISGREATERTHAN_TEXT : 'when the number of virtual users is greater than';

RULE_WHENTHENUMBERISGREATEROREQUAL_TEXT : 'when the number of virtual users is greater or equal to';

RULE_WHENTHENUMBERIRLESSEROREQUAL_TEXT : 'when the number of virtual users is lesser or equal to';

RULE_WHENTHENUMBERAREBETWEEN_TEXT : 'when the number of virtual users are between';

RULE_MBWHEN_GREATEROREQUAL_TEXT : 'MB when the number of virtual users is greater than or equal to';

RULE_MBWHEN_LESSTHAN_TEXT : 'MB when the number of virtual users is less than';

RULE_MBWHEN_MORETHAN_TEXT : 'MB when the number of virtual users is more than';

RULE_MBWHEN_MINOROREQUAL_TEXT : 'MB when the number of virtual users is lesser than or equal to';

RULE_AND : 'and';

RULE_MONITOR_TEXT : 'monitor';

RULE_THE : 'the';

RULE_THAT : 'that';

RULE_MONITOREDBY : 'monitored by ';

RULE_WORKLOADGENERATED : 'workload generated through';

RULE_LOADGENERATORFORTHE : 'Load Generator for the';

RULE_ISTESTSCENARIO : 'test scenario';

RULE_ON : 'on';

RULE_ISMONITORED : 'is monitored';

RULE_ATL : 'at least';

fragment RULE_NNL : ~(('\r'|'\n'));

fragment RULE_NL : '\r'? '\n'?;

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'"')))* '"'|'\'' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
