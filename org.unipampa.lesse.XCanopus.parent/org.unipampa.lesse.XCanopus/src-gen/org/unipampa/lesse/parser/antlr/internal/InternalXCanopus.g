/*
 * generated by Xtext 2.15.0
 */
grammar InternalXCanopus;

options {
	superClass=AbstractInternalAntlrParser;
}

@lexer::header {
package org.unipampa.lesse.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package org.unipampa.lesse.parser.antlr.internal;

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.common.util.Enumerator;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import org.unipampa.lesse.services.XCanopusGrammarAccess;

}

@parser::members {

 	private XCanopusGrammarAccess grammarAccess;

    public InternalXCanopusParser(TokenStream input, XCanopusGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }

    @Override
    protected String getFirstRuleName() {
    	return "Model";
   	}

   	@Override
   	protected XCanopusGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}

}

@rulecatch {
    catch (RecognitionException re) {
        recover(input,re);
        appendSkippedTokens();
    }
}

// Entry rule entryRuleModel
entryRuleModel returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getModelRule()); }
	iv_ruleModel=ruleModel
	{ $current=$iv_ruleModel.current; }
	EOF;

// Rule Model
ruleModel returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getModelAccess().getIncludesIncludeParserRuleCall_0_0());
				}
				lv_includes_0_0=ruleInclude
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getModelRule());
					}
					add(
						$current,
						"includes",
						lv_includes_0_0,
						"org.unipampa.lesse.XCanopus.Include");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		(
			(
				{
					newCompositeNode(grammarAccess.getModelAccess().getMonitoringsMonitoringParserRuleCall_1_0());
				}
				lv_monitorings_1_0=ruleMonitoring
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getModelRule());
					}
					add(
						$current,
						"monitorings",
						lv_monitorings_1_0,
						"org.unipampa.lesse.XCanopus.Monitoring");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		(
			(
				{
					newCompositeNode(grammarAccess.getModelAccess().getSutsSUTParserRuleCall_2_0());
				}
				lv_suts_2_0=ruleSUT
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getModelRule());
					}
					add(
						$current,
						"suts",
						lv_suts_2_0,
						"org.unipampa.lesse.XCanopus.SUT");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		(
			(
				{
					newCompositeNode(grammarAccess.getModelAccess().getLoadGeneratorsLoadGeneratorParserRuleCall_3_0());
				}
				lv_loadGenerators_3_0=ruleLoadGenerator
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getModelRule());
					}
					add(
						$current,
						"loadGenerators",
						lv_loadGenerators_3_0,
						"org.unipampa.lesse.XCanopus.LoadGenerator");
					afterParserOrEnumRuleCall();
				}
			)
		)*
	)
;

// Entry rule entryRuleInclude
entryRuleInclude returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getIncludeRule()); }
	iv_ruleInclude=ruleInclude
	{ $current=$iv_ruleInclude.current; }
	EOF;

// Rule Include
ruleInclude returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='include'
		{
			newLeafNode(otherlv_0, grammarAccess.getIncludeAccess().getIncludeKeyword_0());
		}
		(
			(
				lv_importURI_1_0=RULE_STRING
				{
					newLeafNode(lv_importURI_1_0, grammarAccess.getIncludeAccess().getImportURISTRINGTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getIncludeRule());
					}
					setWithLastConsumed(
						$current,
						"importURI",
						lv_importURI_1_0,
						"org.unipampa.lesse.XCanopus.STRING");
				}
			)
		)
		otherlv_2='as'
		{
			newLeafNode(otherlv_2, grammarAccess.getIncludeAccess().getAsKeyword_2());
		}
		(
			(
				lv_name_3_0=RULE_ID
				{
					newLeafNode(lv_name_3_0, grammarAccess.getIncludeAccess().getNameIDTerminalRuleCall_3_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getIncludeRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_3_0,
						"org.unipampa.lesse.XCanopus.ID");
				}
			)
		)
	)
;

// Entry rule entryRuleMonitoring
entryRuleMonitoring returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getMonitoringRule()); }
	iv_ruleMonitoring=ruleMonitoring
	{ $current=$iv_ruleMonitoring.current; }
	EOF;

// Rule Monitoring
ruleMonitoring returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getMonitoringAccess().getMonitoringAction_0(),
					$current);
			}
		)
		otherlv_1='Monitoring'
		{
			newLeafNode(otherlv_1, grammarAccess.getMonitoringAccess().getMonitoringKeyword_1());
		}
		{
			newCompositeNode(grammarAccess.getMonitoringAccess().getEStringParserRuleCall_2());
		}
		ruleEString
		{
			afterParserOrEnumRuleCall();
		}
		otherlv_3='{'
		{
			newLeafNode(otherlv_3, grammarAccess.getMonitoringAccess().getLeftCurlyBracketKeyword_3());
		}
		otherlv_4='Given'
		{
			newLeafNode(otherlv_4, grammarAccess.getMonitoringAccess().getGivenKeyword_4());
		}
		otherlv_5='that'
		{
			newLeafNode(otherlv_5, grammarAccess.getMonitoringAccess().getThatKeyword_5());
		}
		otherlv_6='SUT'
		{
			newLeafNode(otherlv_6, grammarAccess.getMonitoringAccess().getSUTKeyword_6());
		}
		{
			newCompositeNode(grammarAccess.getMonitoringAccess().getEStringParserRuleCall_7());
		}
		ruleEString
		{
			afterParserOrEnumRuleCall();
		}
		otherlv_8='monitored_by'
		{
			newLeafNode(otherlv_8, grammarAccess.getMonitoringAccess().getMonitored_byKeyword_8());
		}
		otherlv_9='SUT'
		{
			newLeafNode(otherlv_9, grammarAccess.getMonitoringAccess().getSUTKeyword_9());
		}
		otherlv_10='monitor'
		{
			newLeafNode(otherlv_10, grammarAccess.getMonitoringAccess().getMonitorKeyword_10());
		}
		otherlv_11='And'
		{
			newLeafNode(otherlv_11, grammarAccess.getMonitoringAccess().getAndKeyword_11());
		}
		otherlv_12='}'
		{
			newLeafNode(otherlv_12, grammarAccess.getMonitoringAccess().getRightCurlyBracketKeyword_12());
		}
	)
;

// Entry rule entryRuleMetric
entryRuleMetric returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getMetricRule()); }
	iv_ruleMetric=ruleMetric
	{ $current=$iv_ruleMetric.current; }
	EOF;

// Rule Metric
ruleMetric returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getMetricAccess().getMemoryParserRuleCall_0());
		}
		this_Memory_0=ruleMemory
		{
			$current = $this_Memory_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getMetricAccess().getDiskParserRuleCall_1());
		}
		this_Disk_1=ruleDisk
		{
			$current = $this_Disk_1.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleCounter
entryRuleCounter returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getCounterRule()); }
	iv_ruleCounter=ruleCounter
	{ $current=$iv_ruleCounter.current; }
	EOF;

// Rule Counter
ruleCounter returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getCounterAccess().getDisk_IO_CounterParserRuleCall_0());
		}
		this_Disk_IO_Counter_0=ruleDisk_IO_Counter
		{
			$current = $this_Disk_IO_Counter_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getCounterAccess().getMemoryCounterParserRuleCall_1());
		}
		this_MemoryCounter_1=ruleMemoryCounter
		{
			$current = $this_MemoryCounter_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getCounterAccess().getTransactionCounterParserRuleCall_2());
		}
		this_TransactionCounter_2=ruleTransactionCounter
		{
			$current = $this_TransactionCounter_2.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleSUT
entryRuleSUT returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSUTRule()); }
	iv_ruleSUT=ruleSUT
	{ $current=$iv_ruleSUT.current; }
	EOF;

// Rule SUT
ruleSUT returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getSUTAccess().getSUTAction_0(),
					$current);
			}
		)
		otherlv_1='SUT'
		{
			newLeafNode(otherlv_1, grammarAccess.getSUTAccess().getSUTKeyword_1());
		}
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getSUTAccess().getLeftCurlyBracketKeyword_2());
		}
		(
			otherlv_3='hostname'
			{
				newLeafNode(otherlv_3, grammarAccess.getSUTAccess().getHostnameKeyword_3_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getSUTAccess().getHostnameEStringParserRuleCall_3_1_0());
					}
					lv_hostname_4_0=ruleEString
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getSUTRule());
						}
						set(
							$current,
							"hostname",
							lv_hostname_4_0,
							"org.unipampa.lesse.XCanopus.EString");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		(
			otherlv_5='ip'
			{
				newLeafNode(otherlv_5, grammarAccess.getSUTAccess().getIpKeyword_4_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getSUTAccess().getIpEStringParserRuleCall_4_1_0());
					}
					lv_ip_6_0=ruleEString
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getSUTRule());
						}
						set(
							$current,
							"ip",
							lv_ip_6_0,
							"org.unipampa.lesse.XCanopus.EString");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		(
			otherlv_7='hardware'
			{
				newLeafNode(otherlv_7, grammarAccess.getSUTAccess().getHardwareKeyword_5_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getSUTAccess().getHardwareHARDWAREEnumRuleCall_5_1_0());
					}
					lv_hardware_8_0=ruleHARDWARE
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getSUTRule());
						}
						set(
							$current,
							"hardware",
							lv_hardware_8_0,
							"org.unipampa.lesse.XCanopus.HARDWARE");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		(
			otherlv_9='type'
			{
				newLeafNode(otherlv_9, grammarAccess.getSUTAccess().getTypeKeyword_6_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getSUTAccess().getTypeSUT_TYPEEnumRuleCall_6_1_0());
					}
					lv_type_10_0=ruleSUT_TYPE
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getSUTRule());
						}
						set(
							$current,
							"type",
							lv_type_10_0,
							"org.unipampa.lesse.XCanopus.SUT_TYPE");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		(
			otherlv_11='sut'
			{
				newLeafNode(otherlv_11, grammarAccess.getSUTAccess().getSutKeyword_7_0());
			}
			otherlv_12='('
			{
				newLeafNode(otherlv_12, grammarAccess.getSUTAccess().getLeftParenthesisKeyword_7_1());
			}
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getSUTRule());
						}
					}
					{
						newCompositeNode(grammarAccess.getSUTAccess().getSutSUTCrossReference_7_2_0());
					}
					ruleEString
					{
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_14=','
				{
					newLeafNode(otherlv_14, grammarAccess.getSUTAccess().getCommaKeyword_7_3_0());
				}
				(
					(
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getSUTRule());
							}
						}
						{
							newCompositeNode(grammarAccess.getSUTAccess().getSutSUTCrossReference_7_3_1_0());
						}
						ruleEString
						{
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
			otherlv_16=')'
			{
				newLeafNode(otherlv_16, grammarAccess.getSUTAccess().getRightParenthesisKeyword_7_4());
			}
		)?
		(
			otherlv_17='metricmodel'
			{
				newLeafNode(otherlv_17, grammarAccess.getSUTAccess().getMetricmodelKeyword_8_0());
			}
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getSUTRule());
						}
					}
					{
						newCompositeNode(grammarAccess.getSUTAccess().getMetricmodelMetricModelCrossReference_8_1_0());
					}
					ruleEString
					{
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		otherlv_19='}'
		{
			newLeafNode(otherlv_19, grammarAccess.getSUTAccess().getRightCurlyBracketKeyword_9());
		}
	)
;

// Entry rule entryRuleLoadGenerator
entryRuleLoadGenerator returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getLoadGeneratorRule()); }
	iv_ruleLoadGenerator=ruleLoadGenerator
	{ $current=$iv_ruleLoadGenerator.current; }
	EOF;

// Rule LoadGenerator
ruleLoadGenerator returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getLoadGeneratorAccess().getLoadGeneratorAction_0(),
					$current);
			}
		)
		(
			(
				lv_isMonitor_1_0='isMonitor'
				{
					newLeafNode(lv_isMonitor_1_0, grammarAccess.getLoadGeneratorAccess().getIsMonitorIsMonitorKeyword_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getLoadGeneratorRule());
					}
					setWithLastConsumed($current, "isMonitor", true, "isMonitor");
				}
			)
		)?
		otherlv_2='LoadGenerator'
		{
			newLeafNode(otherlv_2, grammarAccess.getLoadGeneratorAccess().getLoadGeneratorKeyword_2());
		}
		otherlv_3='{'
		{
			newLeafNode(otherlv_3, grammarAccess.getLoadGeneratorAccess().getLeftCurlyBracketKeyword_3());
		}
		(
			otherlv_4='hostname'
			{
				newLeafNode(otherlv_4, grammarAccess.getLoadGeneratorAccess().getHostnameKeyword_4_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getLoadGeneratorAccess().getHostnameEStringParserRuleCall_4_1_0());
					}
					lv_hostname_5_0=ruleEString
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getLoadGeneratorRule());
						}
						set(
							$current,
							"hostname",
							lv_hostname_5_0,
							"org.unipampa.lesse.XCanopus.EString");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		(
			otherlv_6='ip'
			{
				newLeafNode(otherlv_6, grammarAccess.getLoadGeneratorAccess().getIpKeyword_5_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getLoadGeneratorAccess().getIpEStringParserRuleCall_5_1_0());
					}
					lv_ip_7_0=ruleEString
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getLoadGeneratorRule());
						}
						set(
							$current,
							"ip",
							lv_ip_7_0,
							"org.unipampa.lesse.XCanopus.EString");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		(
			otherlv_8='hardware'
			{
				newLeafNode(otherlv_8, grammarAccess.getLoadGeneratorAccess().getHardwareKeyword_6_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getLoadGeneratorAccess().getHardwareHARDWAREEnumRuleCall_6_1_0());
					}
					lv_hardware_9_0=ruleHARDWARE
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getLoadGeneratorRule());
						}
						set(
							$current,
							"hardware",
							lv_hardware_9_0,
							"org.unipampa.lesse.XCanopus.HARDWARE");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		(
			otherlv_10='sut'
			{
				newLeafNode(otherlv_10, grammarAccess.getLoadGeneratorAccess().getSutKeyword_7_0());
			}
			otherlv_11='('
			{
				newLeafNode(otherlv_11, grammarAccess.getLoadGeneratorAccess().getLeftParenthesisKeyword_7_1());
			}
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getLoadGeneratorRule());
						}
					}
					{
						newCompositeNode(grammarAccess.getLoadGeneratorAccess().getSutSUTCrossReference_7_2_0());
					}
					ruleEString
					{
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_13=','
				{
					newLeafNode(otherlv_13, grammarAccess.getLoadGeneratorAccess().getCommaKeyword_7_3_0());
				}
				(
					(
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getLoadGeneratorRule());
							}
						}
						{
							newCompositeNode(grammarAccess.getLoadGeneratorAccess().getSutSUTCrossReference_7_3_1_0());
						}
						ruleEString
						{
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
			otherlv_15=')'
			{
				newLeafNode(otherlv_15, grammarAccess.getLoadGeneratorAccess().getRightParenthesisKeyword_7_4());
			}
		)?
		(
			otherlv_16='metricmodel'
			{
				newLeafNode(otherlv_16, grammarAccess.getLoadGeneratorAccess().getMetricmodelKeyword_8_0());
			}
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getLoadGeneratorRule());
						}
					}
					{
						newCompositeNode(grammarAccess.getLoadGeneratorAccess().getMetricmodelMetricModelCrossReference_8_1_0());
					}
					ruleEString
					{
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		(
			otherlv_18='monitor'
			{
				newLeafNode(otherlv_18, grammarAccess.getLoadGeneratorAccess().getMonitorKeyword_9_0());
			}
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getLoadGeneratorRule());
						}
					}
					{
						newCompositeNode(grammarAccess.getLoadGeneratorAccess().getMonitorMonitorCrossReference_9_1_0());
					}
					ruleEString
					{
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		otherlv_20='}'
		{
			newLeafNode(otherlv_20, grammarAccess.getLoadGeneratorAccess().getRightCurlyBracketKeyword_10());
		}
	)
;

// Entry rule entryRuleMemory
entryRuleMemory returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getMemoryRule()); }
	iv_ruleMemory=ruleMemory
	{ $current=$iv_ruleMemory.current; }
	EOF;

// Rule Memory
ruleMemory returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getMemoryAccess().getMemoryAction_0(),
					$current);
			}
		)
		otherlv_1='Memory'
		{
			newLeafNode(otherlv_1, grammarAccess.getMemoryAccess().getMemoryKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getMemoryAccess().getNameEStringParserRuleCall_2_0());
				}
				lv_name_2_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getMemoryRule());
					}
					set(
						$current,
						"name",
						lv_name_2_0,
						"org.unipampa.lesse.XCanopus.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_3='{'
		{
			newLeafNode(otherlv_3, grammarAccess.getMemoryAccess().getLeftCurlyBracketKeyword_3());
		}
		(
			otherlv_4='memoryCounter'
			{
				newLeafNode(otherlv_4, grammarAccess.getMemoryAccess().getMemoryCounterKeyword_4_0());
			}
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getMemoryRule());
						}
					}
					{
						newCompositeNode(grammarAccess.getMemoryAccess().getMemoryCounterMemoryCounterCrossReference_4_1_0());
					}
					ruleEString
					{
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		otherlv_6='}'
		{
			newLeafNode(otherlv_6, grammarAccess.getMemoryAccess().getRightCurlyBracketKeyword_5());
		}
	)
;

// Entry rule entryRuleDisk
entryRuleDisk returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDiskRule()); }
	iv_ruleDisk=ruleDisk
	{ $current=$iv_ruleDisk.current; }
	EOF;

// Rule Disk
ruleDisk returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getDiskAccess().getDiskAction_0(),
					$current);
			}
		)
		otherlv_1='Disk'
		{
			newLeafNode(otherlv_1, grammarAccess.getDiskAccess().getDiskKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getDiskAccess().getNameEStringParserRuleCall_2_0());
				}
				lv_name_2_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getDiskRule());
					}
					set(
						$current,
						"name",
						lv_name_2_0,
						"org.unipampa.lesse.XCanopus.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_3='{'
		{
			newLeafNode(otherlv_3, grammarAccess.getDiskAccess().getLeftCurlyBracketKeyword_3());
		}
		(
			otherlv_4='disk_io_counter'
			{
				newLeafNode(otherlv_4, grammarAccess.getDiskAccess().getDisk_io_counterKeyword_4_0());
			}
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getDiskRule());
						}
					}
					{
						newCompositeNode(grammarAccess.getDiskAccess().getDisk_io_counterDisk_IO_CounterCrossReference_4_1_0());
					}
					ruleEString
					{
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		otherlv_6='}'
		{
			newLeafNode(otherlv_6, grammarAccess.getDiskAccess().getRightCurlyBracketKeyword_5());
		}
	)
;

// Entry rule entryRuleCriteria
entryRuleCriteria returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getCriteriaRule()); }
	iv_ruleCriteria=ruleCriteria
	{ $current=$iv_ruleCriteria.current; }
	EOF;

// Rule Criteria
ruleCriteria returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getCriteriaAccess().getCriteriaAction_0(),
					$current);
			}
		)
		otherlv_1='Criteria'
		{
			newLeafNode(otherlv_1, grammarAccess.getCriteriaAccess().getCriteriaKeyword_1());
		}
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getCriteriaAccess().getLeftCurlyBracketKeyword_2());
		}
		(
			otherlv_3='value'
			{
				newLeafNode(otherlv_3, grammarAccess.getCriteriaAccess().getValueKeyword_3_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getCriteriaAccess().getValueEIntParserRuleCall_3_1_0());
					}
					lv_value_4_0=ruleEInt
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getCriteriaRule());
						}
						set(
							$current,
							"value",
							lv_value_4_0,
							"org.unipampa.lesse.XCanopus.EInt");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		otherlv_5='}'
		{
			newLeafNode(otherlv_5, grammarAccess.getCriteriaAccess().getRightCurlyBracketKeyword_4());
		}
	)
;

// Entry rule entryRuleThreshold
entryRuleThreshold returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getThresholdRule()); }
	iv_ruleThreshold=ruleThreshold
	{ $current=$iv_ruleThreshold.current; }
	EOF;

// Rule Threshold
ruleThreshold returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getThresholdAccess().getThresholdAction_0(),
					$current);
			}
		)
		otherlv_1='Threshold'
		{
			newLeafNode(otherlv_1, grammarAccess.getThresholdAccess().getThresholdKeyword_1());
		}
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getThresholdAccess().getLeftCurlyBracketKeyword_2());
		}
		(
			otherlv_3='value'
			{
				newLeafNode(otherlv_3, grammarAccess.getThresholdAccess().getValueKeyword_3_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getThresholdAccess().getValueEIntParserRuleCall_3_1_0());
					}
					lv_value_4_0=ruleEInt
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getThresholdRule());
						}
						set(
							$current,
							"value",
							lv_value_4_0,
							"org.unipampa.lesse.XCanopus.EInt");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		otherlv_5='}'
		{
			newLeafNode(otherlv_5, grammarAccess.getThresholdAccess().getRightCurlyBracketKeyword_4());
		}
	)
;

// Entry rule entryRuleDisk_IO_Counter
entryRuleDisk_IO_Counter returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDisk_IO_CounterRule()); }
	iv_ruleDisk_IO_Counter=ruleDisk_IO_Counter
	{ $current=$iv_ruleDisk_IO_Counter.current; }
	EOF;

// Rule Disk_IO_Counter
ruleDisk_IO_Counter returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getDisk_IO_CounterAccess().getDisk_IO_CounterAction_0(),
					$current);
			}
		)
		otherlv_1='Disk_IO_Counter'
		{
			newLeafNode(otherlv_1, grammarAccess.getDisk_IO_CounterAccess().getDisk_IO_CounterKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getDisk_IO_CounterAccess().getNameEStringParserRuleCall_2_0());
				}
				lv_name_2_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getDisk_IO_CounterRule());
					}
					set(
						$current,
						"name",
						lv_name_2_0,
						"org.unipampa.lesse.XCanopus.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_3='{'
		{
			newLeafNode(otherlv_3, grammarAccess.getDisk_IO_CounterAccess().getLeftCurlyBracketKeyword_3());
		}
		(
			otherlv_4='counterDisk'
			{
				newLeafNode(otherlv_4, grammarAccess.getDisk_IO_CounterAccess().getCounterDiskKeyword_4_0());
			}
			otherlv_5='{'
			{
				newLeafNode(otherlv_5, grammarAccess.getDisk_IO_CounterAccess().getLeftCurlyBracketKeyword_4_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getDisk_IO_CounterAccess().getCounterDiskCOUNTER_DISKEnumRuleCall_4_2_0());
					}
					lv_counterDisk_6_0=ruleCOUNTER_DISK
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getDisk_IO_CounterRule());
						}
						add(
							$current,
							"counterDisk",
							lv_counterDisk_6_0,
							"org.unipampa.lesse.XCanopus.COUNTER_DISK");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_7=','
				{
					newLeafNode(otherlv_7, grammarAccess.getDisk_IO_CounterAccess().getCommaKeyword_4_3_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getDisk_IO_CounterAccess().getCounterDiskCOUNTER_DISKEnumRuleCall_4_3_1_0());
						}
						lv_counterDisk_8_0=ruleCOUNTER_DISK
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getDisk_IO_CounterRule());
							}
							add(
								$current,
								"counterDisk",
								lv_counterDisk_8_0,
								"org.unipampa.lesse.XCanopus.COUNTER_DISK");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
			otherlv_9='}'
			{
				newLeafNode(otherlv_9, grammarAccess.getDisk_IO_CounterAccess().getRightCurlyBracketKeyword_4_4());
			}
		)?
		otherlv_10='}'
		{
			newLeafNode(otherlv_10, grammarAccess.getDisk_IO_CounterAccess().getRightCurlyBracketKeyword_5());
		}
	)
;

// Entry rule entryRuleTransactionCounter
entryRuleTransactionCounter returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTransactionCounterRule()); }
	iv_ruleTransactionCounter=ruleTransactionCounter
	{ $current=$iv_ruleTransactionCounter.current; }
	EOF;

// Rule TransactionCounter
ruleTransactionCounter returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getTransactionCounterAccess().getTransactionCounterAction_0(),
					$current);
			}
		)
		otherlv_1='TransactionCounter'
		{
			newLeafNode(otherlv_1, grammarAccess.getTransactionCounterAccess().getTransactionCounterKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getTransactionCounterAccess().getNameEStringParserRuleCall_2_0());
				}
				lv_name_2_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getTransactionCounterRule());
					}
					set(
						$current,
						"name",
						lv_name_2_0,
						"org.unipampa.lesse.XCanopus.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_3='{'
		{
			newLeafNode(otherlv_3, grammarAccess.getTransactionCounterAccess().getLeftCurlyBracketKeyword_3());
		}
		(
			otherlv_4='counterTransaction'
			{
				newLeafNode(otherlv_4, grammarAccess.getTransactionCounterAccess().getCounterTransactionKeyword_4_0());
			}
			otherlv_5='{'
			{
				newLeafNode(otherlv_5, grammarAccess.getTransactionCounterAccess().getLeftCurlyBracketKeyword_4_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getTransactionCounterAccess().getCounterTransactionCOUNTER_TRANSACTIONEnumRuleCall_4_2_0());
					}
					lv_counterTransaction_6_0=ruleCOUNTER_TRANSACTION
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getTransactionCounterRule());
						}
						add(
							$current,
							"counterTransaction",
							lv_counterTransaction_6_0,
							"org.unipampa.lesse.XCanopus.COUNTER_TRANSACTION");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_7=','
				{
					newLeafNode(otherlv_7, grammarAccess.getTransactionCounterAccess().getCommaKeyword_4_3_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getTransactionCounterAccess().getCounterTransactionCOUNTER_TRANSACTIONEnumRuleCall_4_3_1_0());
						}
						lv_counterTransaction_8_0=ruleCOUNTER_TRANSACTION
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getTransactionCounterRule());
							}
							add(
								$current,
								"counterTransaction",
								lv_counterTransaction_8_0,
								"org.unipampa.lesse.XCanopus.COUNTER_TRANSACTION");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
			otherlv_9='}'
			{
				newLeafNode(otherlv_9, grammarAccess.getTransactionCounterAccess().getRightCurlyBracketKeyword_4_4());
			}
		)?
		otherlv_10='}'
		{
			newLeafNode(otherlv_10, grammarAccess.getTransactionCounterAccess().getRightCurlyBracketKeyword_5());
		}
	)
;

// Entry rule entryRuleMemoryCounter
entryRuleMemoryCounter returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getMemoryCounterRule()); }
	iv_ruleMemoryCounter=ruleMemoryCounter
	{ $current=$iv_ruleMemoryCounter.current; }
	EOF;

// Rule MemoryCounter
ruleMemoryCounter returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getMemoryCounterAccess().getMemoryCounterAction_0(),
					$current);
			}
		)
		otherlv_1='MemoryCounter'
		{
			newLeafNode(otherlv_1, grammarAccess.getMemoryCounterAccess().getMemoryCounterKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getMemoryCounterAccess().getNameEStringParserRuleCall_2_0());
				}
				lv_name_2_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getMemoryCounterRule());
					}
					set(
						$current,
						"name",
						lv_name_2_0,
						"org.unipampa.lesse.XCanopus.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_3='{'
		{
			newLeafNode(otherlv_3, grammarAccess.getMemoryCounterAccess().getLeftCurlyBracketKeyword_3());
		}
		(
			otherlv_4='counterMemory'
			{
				newLeafNode(otherlv_4, grammarAccess.getMemoryCounterAccess().getCounterMemoryKeyword_4_0());
			}
			otherlv_5='{'
			{
				newLeafNode(otherlv_5, grammarAccess.getMemoryCounterAccess().getLeftCurlyBracketKeyword_4_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getMemoryCounterAccess().getCounterMemoryCOUNTER_MEMORYEnumRuleCall_4_2_0());
					}
					lv_counterMemory_6_0=ruleCOUNTER_MEMORY
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getMemoryCounterRule());
						}
						add(
							$current,
							"counterMemory",
							lv_counterMemory_6_0,
							"org.unipampa.lesse.XCanopus.COUNTER_MEMORY");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_7=','
				{
					newLeafNode(otherlv_7, grammarAccess.getMemoryCounterAccess().getCommaKeyword_4_3_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getMemoryCounterAccess().getCounterMemoryCOUNTER_MEMORYEnumRuleCall_4_3_1_0());
						}
						lv_counterMemory_8_0=ruleCOUNTER_MEMORY
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getMemoryCounterRule());
							}
							add(
								$current,
								"counterMemory",
								lv_counterMemory_8_0,
								"org.unipampa.lesse.XCanopus.COUNTER_MEMORY");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
			otherlv_9='}'
			{
				newLeafNode(otherlv_9, grammarAccess.getMemoryCounterAccess().getRightCurlyBracketKeyword_4_4());
			}
		)?
		otherlv_10='}'
		{
			newLeafNode(otherlv_10, grammarAccess.getMemoryCounterAccess().getRightCurlyBracketKeyword_5());
		}
	)
;

// Entry rule entryRuleEInt
entryRuleEInt returns [String current=null]:
	{ newCompositeNode(grammarAccess.getEIntRule()); }
	iv_ruleEInt=ruleEInt
	{ $current=$iv_ruleEInt.current.getText(); }
	EOF;

// Rule EInt
ruleEInt returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			kw='-'
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getEIntAccess().getHyphenMinusKeyword_0());
			}
		)?
		this_INT_1=RULE_INT
		{
			$current.merge(this_INT_1);
		}
		{
			newLeafNode(this_INT_1, grammarAccess.getEIntAccess().getINTTerminalRuleCall_1());
		}
	)
;

// Entry rule entryRuleEString
entryRuleEString returns [String current=null]:
	{ newCompositeNode(grammarAccess.getEStringRule()); }
	iv_ruleEString=ruleEString
	{ $current=$iv_ruleEString.current.getText(); }
	EOF;

// Rule EString
ruleEString returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		this_STRING_0=RULE_STRING
		{
			$current.merge(this_STRING_0);
		}
		{
			newLeafNode(this_STRING_0, grammarAccess.getEStringAccess().getSTRINGTerminalRuleCall_0());
		}
		    |
		this_ID_1=RULE_ID
		{
			$current.merge(this_ID_1);
		}
		{
			newLeafNode(this_ID_1, grammarAccess.getEStringAccess().getIDTerminalRuleCall_1());
		}
	)
;

// Rule HARDWARE
ruleHARDWARE returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='PHYSICAL_MACHINE'
			{
				$current = grammarAccess.getHARDWAREAccess().getPHYSICAL_MACHINEEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getHARDWAREAccess().getPHYSICAL_MACHINEEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='VIRTUAL_MACHINE'
			{
				$current = grammarAccess.getHARDWAREAccess().getVIRTUAL_MACHINEEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getHARDWAREAccess().getVIRTUAL_MACHINEEnumLiteralDeclaration_1());
			}
		)
		    |
		(
			enumLiteral_2='CLOUD_SERVICE'
			{
				$current = grammarAccess.getHARDWAREAccess().getCLOUD_SERVICEEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_2, grammarAccess.getHARDWAREAccess().getCLOUD_SERVICEEnumLiteralDeclaration_2());
			}
		)
	)
;

// Rule SUT_TYPE
ruleSUT_TYPE returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='DESKTOPAPP'
			{
				$current = grammarAccess.getSUT_TYPEAccess().getDESKTOPAPPEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getSUT_TYPEAccess().getDESKTOPAPPEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='DATABASE'
			{
				$current = grammarAccess.getSUT_TYPEAccess().getDATABASEEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getSUT_TYPEAccess().getDATABASEEnumLiteralDeclaration_1());
			}
		)
		    |
		(
			enumLiteral_2='WEBAPP'
			{
				$current = grammarAccess.getSUT_TYPEAccess().getWEBAPPEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_2, grammarAccess.getSUT_TYPEAccess().getWEBAPPEnumLiteralDeclaration_2());
			}
		)
		    |
		(
			enumLiteral_3='WEBSERVICE'
			{
				$current = grammarAccess.getSUT_TYPEAccess().getWEBSERVICEEnumLiteralDeclaration_3().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_3, grammarAccess.getSUT_TYPEAccess().getWEBSERVICEEnumLiteralDeclaration_3());
			}
		)
	)
;

// Rule COUNTER_DISK
ruleCOUNTER_DISK returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='AVG_DISK_SECS_TRANSFER_COUNTER'
			{
				$current = grammarAccess.getCOUNTER_DISKAccess().getAVG_DISK_SECS_TRANSFER_COUNTEREnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getCOUNTER_DISKAccess().getAVG_DISK_SECS_TRANSFER_COUNTEREnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='PERCENTAGE_IDLE_TIME_COUNTER'
			{
				$current = grammarAccess.getCOUNTER_DISKAccess().getPERCENTAGE_IDLE_TIME_COUNTEREnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getCOUNTER_DISKAccess().getPERCENTAGE_IDLE_TIME_COUNTEREnumLiteralDeclaration_1());
			}
		)
		    |
		(
			enumLiteral_2='DISK_TRANSFERS_SEC_COUNTER'
			{
				$current = grammarAccess.getCOUNTER_DISKAccess().getDISK_TRANSFERS_SEC_COUNTEREnumLiteralDeclaration_2().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_2, grammarAccess.getCOUNTER_DISKAccess().getDISK_TRANSFERS_SEC_COUNTEREnumLiteralDeclaration_2());
			}
		)
		    |
		(
			enumLiteral_3='AVG_DISK_QUEUE_LENGTH_COUNTER'
			{
				$current = grammarAccess.getCOUNTER_DISKAccess().getAVG_DISK_QUEUE_LENGTH_COUNTEREnumLiteralDeclaration_3().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_3, grammarAccess.getCOUNTER_DISKAccess().getAVG_DISK_QUEUE_LENGTH_COUNTEREnumLiteralDeclaration_3());
			}
		)
		    |
		(
			enumLiteral_4='SPLIT_IO_SEC_COUNTER'
			{
				$current = grammarAccess.getCOUNTER_DISKAccess().getSPLIT_IO_SEC_COUNTEREnumLiteralDeclaration_4().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_4, grammarAccess.getCOUNTER_DISKAccess().getSPLIT_IO_SEC_COUNTEREnumLiteralDeclaration_4());
			}
		)
		    |
		(
			enumLiteral_5='FREE_MEGABYTES_COUNTER'
			{
				$current = grammarAccess.getCOUNTER_DISKAccess().getFREE_MEGABYTES_COUNTEREnumLiteralDeclaration_5().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_5, grammarAccess.getCOUNTER_DISKAccess().getFREE_MEGABYTES_COUNTEREnumLiteralDeclaration_5());
			}
		)
	)
;

// Rule COUNTER_TRANSACTION
ruleCOUNTER_TRANSACTION returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='TRANSACTION_RESPONSE_TIME'
			{
				$current = grammarAccess.getCOUNTER_TRANSACTIONAccess().getTRANSACTION_RESPONSE_TIMEEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getCOUNTER_TRANSACTIONAccess().getTRANSACTION_RESPONSE_TIMEEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='TRANSACTION_PER_SECOND_TPS'
			{
				$current = grammarAccess.getCOUNTER_TRANSACTIONAccess().getTRANSACTION_PER_SECOND_TPSEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getCOUNTER_TRANSACTIONAccess().getTRANSACTION_PER_SECOND_TPSEnumLiteralDeclaration_1());
			}
		)
		    |
		(
			enumLiteral_2='TRANSACTION_SUCCESS_RATE'
			{
				$current = grammarAccess.getCOUNTER_TRANSACTIONAccess().getTRANSACTION_SUCCESS_RATEEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_2, grammarAccess.getCOUNTER_TRANSACTIONAccess().getTRANSACTION_SUCCESS_RATEEnumLiteralDeclaration_2());
			}
		)
	)
;

// Rule COUNTER_MEMORY
ruleCOUNTER_MEMORY returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='AVALIABLE_MBYTES_COUNTER'
			{
				$current = grammarAccess.getCOUNTER_MEMORYAccess().getAVALIABLE_MBYTES_COUNTEREnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getCOUNTER_MEMORYAccess().getAVALIABLE_MBYTES_COUNTEREnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='PAGES_SEC_COUNTER'
			{
				$current = grammarAccess.getCOUNTER_MEMORYAccess().getPAGES_SEC_COUNTEREnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getCOUNTER_MEMORYAccess().getPAGES_SEC_COUNTEREnumLiteralDeclaration_1());
			}
		)
		    |
		(
			enumLiteral_2='PAGE_READS_SEC_COUNTER'
			{
				$current = grammarAccess.getCOUNTER_MEMORYAccess().getPAGE_READS_SEC_COUNTEREnumLiteralDeclaration_2().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_2, grammarAccess.getCOUNTER_MEMORYAccess().getPAGE_READS_SEC_COUNTEREnumLiteralDeclaration_2());
			}
		)
		    |
		(
			enumLiteral_3='WORKING_SET_COUNTER'
			{
				$current = grammarAccess.getCOUNTER_MEMORYAccess().getWORKING_SET_COUNTEREnumLiteralDeclaration_3().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_3, grammarAccess.getCOUNTER_MEMORYAccess().getWORKING_SET_COUNTEREnumLiteralDeclaration_3());
			}
		)
		    |
		(
			enumLiteral_4='POOL_NONPAGE_BYTES_COUNTER'
			{
				$current = grammarAccess.getCOUNTER_MEMORYAccess().getPOOL_NONPAGE_BYTES_COUNTEREnumLiteralDeclaration_4().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_4, grammarAccess.getCOUNTER_MEMORYAccess().getPOOL_NONPAGE_BYTES_COUNTEREnumLiteralDeclaration_4());
			}
		)
		    |
		(
			enumLiteral_5='PAGED_POOL_BYTES_COUNTER'
			{
				$current = grammarAccess.getCOUNTER_MEMORYAccess().getPAGED_POOL_BYTES_COUNTEREnumLiteralDeclaration_5().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_5, grammarAccess.getCOUNTER_MEMORYAccess().getPAGED_POOL_BYTES_COUNTEREnumLiteralDeclaration_5());
			}
		)
		    |
		(
			enumLiteral_6='PAGED_POOL_FAILURES_COUNTER'
			{
				$current = grammarAccess.getCOUNTER_MEMORYAccess().getPAGED_POOL_FAILURES_COUNTEREnumLiteralDeclaration_6().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_6, grammarAccess.getCOUNTER_MEMORYAccess().getPAGED_POOL_FAILURES_COUNTEREnumLiteralDeclaration_6());
			}
		)
		    |
		(
			enumLiteral_7='CACHE_BYTES_COUNTER'
			{
				$current = grammarAccess.getCOUNTER_MEMORYAccess().getCACHE_BYTES_COUNTEREnumLiteralDeclaration_7().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_7, grammarAccess.getCOUNTER_MEMORYAccess().getCACHE_BYTES_COUNTEREnumLiteralDeclaration_7());
			}
		)
	)
;

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'"')))* '"'|'\'' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
