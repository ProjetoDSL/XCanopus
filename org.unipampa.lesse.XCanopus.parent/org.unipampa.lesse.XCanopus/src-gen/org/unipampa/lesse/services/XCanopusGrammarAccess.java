/*
 * generated by Xtext 2.16.0
 */
package org.unipampa.lesse.services;

import com.google.inject.Inject;
import com.google.inject.Singleton;
import java.util.List;
import org.eclipse.xtext.Action;
import org.eclipse.xtext.Alternatives;
import org.eclipse.xtext.Assignment;
import org.eclipse.xtext.CrossReference;
import org.eclipse.xtext.EnumLiteralDeclaration;
import org.eclipse.xtext.EnumRule;
import org.eclipse.xtext.Grammar;
import org.eclipse.xtext.GrammarUtil;
import org.eclipse.xtext.Group;
import org.eclipse.xtext.Keyword;
import org.eclipse.xtext.ParserRule;
import org.eclipse.xtext.RuleCall;
import org.eclipse.xtext.TerminalRule;
import org.eclipse.xtext.service.AbstractElementFinder.AbstractEnumRuleElementFinder;
import org.eclipse.xtext.service.AbstractElementFinder.AbstractGrammarElementFinder;
import org.eclipse.xtext.service.GrammarProvider;

@Singleton
public class XCanopusGrammarAccess extends AbstractGrammarElementFinder {
	
	public class ModelElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.unipampa.lesse.XCanopus.Model");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cIncludesAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cIncludesIncludeParserRuleCall_0_0 = (RuleCall)cIncludesAssignment_0.eContents().get(0);
		private final Assignment cMonitoringsAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cMonitoringsMonitoringParserRuleCall_1_0 = (RuleCall)cMonitoringsAssignment_1.eContents().get(0);
		private final Assignment cSutsAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cSutsSUTParserRuleCall_2_0 = (RuleCall)cSutsAssignment_2.eContents().get(0);
		private final Assignment cLoadGeneratorsAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cLoadGeneratorsLoadGeneratorParserRuleCall_3_0 = (RuleCall)cLoadGeneratorsAssignment_3.eContents().get(0);
		
		//Model:
		//	includes+=Include*
		//	monitorings+=Monitoring*
		//	suts+=SUT*
		//	loadGenerators+=LoadGenerator*;
		@Override public ParserRule getRule() { return rule; }
		
		//includes+=Include* monitorings+=Monitoring* suts+=SUT* loadGenerators+=LoadGenerator*
		public Group getGroup() { return cGroup; }
		
		//includes+=Include*
		public Assignment getIncludesAssignment_0() { return cIncludesAssignment_0; }
		
		//Include
		public RuleCall getIncludesIncludeParserRuleCall_0_0() { return cIncludesIncludeParserRuleCall_0_0; }
		
		//monitorings+=Monitoring*
		public Assignment getMonitoringsAssignment_1() { return cMonitoringsAssignment_1; }
		
		//Monitoring
		public RuleCall getMonitoringsMonitoringParserRuleCall_1_0() { return cMonitoringsMonitoringParserRuleCall_1_0; }
		
		//suts+=SUT*
		public Assignment getSutsAssignment_2() { return cSutsAssignment_2; }
		
		//SUT
		public RuleCall getSutsSUTParserRuleCall_2_0() { return cSutsSUTParserRuleCall_2_0; }
		
		//loadGenerators+=LoadGenerator*
		public Assignment getLoadGeneratorsAssignment_3() { return cLoadGeneratorsAssignment_3; }
		
		//LoadGenerator
		public RuleCall getLoadGeneratorsLoadGeneratorParserRuleCall_3_0() { return cLoadGeneratorsLoadGeneratorParserRuleCall_3_0; }
	}
	public class IncludeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.unipampa.lesse.XCanopus.Include");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cIncludeKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cImportURIAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cImportURISTRINGTerminalRuleCall_1_0 = (RuleCall)cImportURIAssignment_1.eContents().get(0);
		private final Keyword cAsKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cNameAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cNameIDTerminalRuleCall_3_0 = (RuleCall)cNameAssignment_3.eContents().get(0);
		
		//Include:
		//	'include' importURI=STRING 'as' name=ID;
		@Override public ParserRule getRule() { return rule; }
		
		//'include' importURI=STRING 'as' name=ID
		public Group getGroup() { return cGroup; }
		
		//'include'
		public Keyword getIncludeKeyword_0() { return cIncludeKeyword_0; }
		
		//importURI=STRING
		public Assignment getImportURIAssignment_1() { return cImportURIAssignment_1; }
		
		//STRING
		public RuleCall getImportURISTRINGTerminalRuleCall_1_0() { return cImportURISTRINGTerminalRuleCall_1_0; }
		
		//'as'
		public Keyword getAsKeyword_2() { return cAsKeyword_2; }
		
		//name=ID
		public Assignment getNameAssignment_3() { return cNameAssignment_3; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_3_0() { return cNameIDTerminalRuleCall_3_0; }
	}
	public class MonitoringElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.unipampa.lesse.XCanopus.Monitoring");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cMonitoringAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cFeatureKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final RuleCall cFreetextParserRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		private final Keyword cFullStopKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Keyword cMonitoringKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final RuleCall cFreetextParserRuleCall_5 = (RuleCall)cGroup.eContents().get(5);
		private final Keyword cFullStopKeyword_6 = (Keyword)cGroup.eContents().get(6);
		private final Keyword cGivenKeyword_7 = (Keyword)cGroup.eContents().get(7);
		private final Keyword cThatKeyword_8 = (Keyword)cGroup.eContents().get(8);
		private final Assignment cSutAssignment_9 = (Assignment)cGroup.eContents().get(9);
		private final CrossReference cSutSUTCrossReference_9_0 = (CrossReference)cSutAssignment_9.eContents().get(0);
		private final RuleCall cSutSUTIDTerminalRuleCall_9_0_1 = (RuleCall)cSutSUTCrossReference_9_0.eContents().get(1);
		private final Assignment cSut_typeAssignment_10 = (Assignment)cGroup.eContents().get(10);
		private final RuleCall cSut_typeSUT_TYPEEnumRuleCall_10_0 = (RuleCall)cSut_typeAssignment_10.eContents().get(0);
		private final Keyword cMonitoredByKeyword_11 = (Keyword)cGroup.eContents().get(11);
		private final Assignment cSutAssignment_12 = (Assignment)cGroup.eContents().get(12);
		private final CrossReference cSutSUTCrossReference_12_0 = (CrossReference)cSutAssignment_12.eContents().get(0);
		private final RuleCall cSutSUTIDTerminalRuleCall_12_0_1 = (RuleCall)cSutSUTCrossReference_12_0.eContents().get(1);
		private final Keyword cMonitorKeyword_13 = (Keyword)cGroup.eContents().get(13);
		private final Assignment cConditionAssignment_14 = (Assignment)cGroup.eContents().get(14);
		private final RuleCall cConditionCONDITIONParserRuleCall_14_0 = (RuleCall)cConditionAssignment_14.eContents().get(0);
		private final Assignment cSutAssignment_15 = (Assignment)cGroup.eContents().get(15);
		private final CrossReference cSutSUTCrossReference_15_0 = (CrossReference)cSutAssignment_15.eContents().get(0);
		private final RuleCall cSutSUTIDTerminalRuleCall_15_0_1 = (RuleCall)cSutSUTCrossReference_15_0.eContents().get(1);
		private final Keyword cLoadGeneratorKeyword_16 = (Keyword)cGroup.eContents().get(16);
		private final Keyword cForTheKeyword_17 = (Keyword)cGroup.eContents().get(17);
		private final Assignment cSut_type2Assignment_18 = (Assignment)cGroup.eContents().get(18);
		private final RuleCall cSut_type2SUT_TYPEEnumRuleCall_18_0 = (RuleCall)cSut_type2Assignment_18.eContents().get(0);
		private final Keyword cOnKeyword_19 = (Keyword)cGroup.eContents().get(19);
		private final Assignment cSutAssignment_20 = (Assignment)cGroup.eContents().get(20);
		private final CrossReference cSutSUTCrossReference_20_0 = (CrossReference)cSutAssignment_20.eContents().get(0);
		private final RuleCall cSutSUTIDTerminalRuleCall_20_0_1 = (RuleCall)cSutSUTCrossReference_20_0.eContents().get(1);
		
		//Monitoring:
		//	{Monitoring}
		//	'Feature' Freetext '.'
		//	'Monitoring:' Freetext '.'
		//	'Given' 'that' sut=[SUT] sut_type=SUT_TYPE 'monitored by' sut=[SUT] "monitor"
		//	condition=CONDITION sut=[SUT] "Load Generator" "for the" sut_type2=SUT_TYPE "on" sut=[SUT];
		@Override public ParserRule getRule() { return rule; }
		
		//{Monitoring} 'Feature' Freetext '.' 'Monitoring:' Freetext '.' 'Given' 'that' sut=[SUT] sut_type=SUT_TYPE 'monitored by'
		//sut=[SUT] "monitor" condition=CONDITION sut=[SUT] "Load Generator" "for the" sut_type2=SUT_TYPE "on" sut=[SUT]
		public Group getGroup() { return cGroup; }
		
		//{Monitoring}
		public Action getMonitoringAction_0() { return cMonitoringAction_0; }
		
		//'Feature'
		public Keyword getFeatureKeyword_1() { return cFeatureKeyword_1; }
		
		//Freetext
		public RuleCall getFreetextParserRuleCall_2() { return cFreetextParserRuleCall_2; }
		
		//'.'
		public Keyword getFullStopKeyword_3() { return cFullStopKeyword_3; }
		
		//'Monitoring:'
		public Keyword getMonitoringKeyword_4() { return cMonitoringKeyword_4; }
		
		//Freetext
		public RuleCall getFreetextParserRuleCall_5() { return cFreetextParserRuleCall_5; }
		
		//'.'
		public Keyword getFullStopKeyword_6() { return cFullStopKeyword_6; }
		
		//'Given'
		public Keyword getGivenKeyword_7() { return cGivenKeyword_7; }
		
		//'that'
		public Keyword getThatKeyword_8() { return cThatKeyword_8; }
		
		//sut=[SUT]
		public Assignment getSutAssignment_9() { return cSutAssignment_9; }
		
		//[SUT]
		public CrossReference getSutSUTCrossReference_9_0() { return cSutSUTCrossReference_9_0; }
		
		//ID
		public RuleCall getSutSUTIDTerminalRuleCall_9_0_1() { return cSutSUTIDTerminalRuleCall_9_0_1; }
		
		//sut_type=SUT_TYPE
		public Assignment getSut_typeAssignment_10() { return cSut_typeAssignment_10; }
		
		//SUT_TYPE
		public RuleCall getSut_typeSUT_TYPEEnumRuleCall_10_0() { return cSut_typeSUT_TYPEEnumRuleCall_10_0; }
		
		//'monitored by'
		public Keyword getMonitoredByKeyword_11() { return cMonitoredByKeyword_11; }
		
		//sut=[SUT]
		public Assignment getSutAssignment_12() { return cSutAssignment_12; }
		
		//[SUT]
		public CrossReference getSutSUTCrossReference_12_0() { return cSutSUTCrossReference_12_0; }
		
		//ID
		public RuleCall getSutSUTIDTerminalRuleCall_12_0_1() { return cSutSUTIDTerminalRuleCall_12_0_1; }
		
		//"monitor"
		public Keyword getMonitorKeyword_13() { return cMonitorKeyword_13; }
		
		//condition=CONDITION
		public Assignment getConditionAssignment_14() { return cConditionAssignment_14; }
		
		//CONDITION
		public RuleCall getConditionCONDITIONParserRuleCall_14_0() { return cConditionCONDITIONParserRuleCall_14_0; }
		
		//sut=[SUT]
		public Assignment getSutAssignment_15() { return cSutAssignment_15; }
		
		//[SUT]
		public CrossReference getSutSUTCrossReference_15_0() { return cSutSUTCrossReference_15_0; }
		
		//ID
		public RuleCall getSutSUTIDTerminalRuleCall_15_0_1() { return cSutSUTIDTerminalRuleCall_15_0_1; }
		
		//"Load Generator"
		public Keyword getLoadGeneratorKeyword_16() { return cLoadGeneratorKeyword_16; }
		
		//"for the"
		public Keyword getForTheKeyword_17() { return cForTheKeyword_17; }
		
		//sut_type2=SUT_TYPE
		public Assignment getSut_type2Assignment_18() { return cSut_type2Assignment_18; }
		
		//SUT_TYPE
		public RuleCall getSut_type2SUT_TYPEEnumRuleCall_18_0() { return cSut_type2SUT_TYPEEnumRuleCall_18_0; }
		
		//"on"
		public Keyword getOnKeyword_19() { return cOnKeyword_19; }
		
		//sut=[SUT]
		public Assignment getSutAssignment_20() { return cSutAssignment_20; }
		
		//[SUT]
		public CrossReference getSutSUTCrossReference_20_0() { return cSutSUTCrossReference_20_0; }
		
		//ID
		public RuleCall getSutSUTIDTerminalRuleCall_20_0_1() { return cSutSUTIDTerminalRuleCall_20_0_1; }
	}
	public class FreetextElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.unipampa.lesse.XCanopus.Freetext");
		private final RuleCall cEStringParserRuleCall = (RuleCall)rule.eContents().get(1);
		
		//// '|' choice
		//// '?' optional
		//// '+' 1 or more
		//// '*' 0 or more
		//// '+=' list of elements
		//Freetext:
		//	EString*;
		@Override public ParserRule getRule() { return rule; }
		
		//EString*
		public RuleCall getEStringParserRuleCall() { return cEStringParserRuleCall; }
	}
	public class CONDITIONElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.unipampa.lesse.XCanopus.CONDITION");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cANDParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cWHENParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cTHENParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		
		//CONDITION:
		//	AND | WHEN | THEN // features
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//AND | WHEN | THEN
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//AND
		public RuleCall getANDParserRuleCall_0() { return cANDParserRuleCall_0; }
		
		//WHEN
		public RuleCall getWHENParserRuleCall_1() { return cWHENParserRuleCall_1; }
		
		//THEN
		public RuleCall getTHENParserRuleCall_2() { return cTHENParserRuleCall_2; }
	}
	public class ANDElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.unipampa.lesse.XCanopus.AND");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cAndKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cPostAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cPostPOSTCONDITIONParserRuleCall_1_0 = (RuleCall)cPostAssignment_1.eContents().get(0);
		
		//AND:
		//	'And' post=POSTCONDITION;
		@Override public ParserRule getRule() { return rule; }
		
		//'And' post=POSTCONDITION
		public Group getGroup() { return cGroup; }
		
		//'And'
		public Keyword getAndKeyword_0() { return cAndKeyword_0; }
		
		//post=POSTCONDITION
		public Assignment getPostAssignment_1() { return cPostAssignment_1; }
		
		//POSTCONDITION
		public RuleCall getPostPOSTCONDITIONParserRuleCall_1_0() { return cPostPOSTCONDITIONParserRuleCall_1_0; }
	}
	public class WHENElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.unipampa.lesse.XCanopus.WHEN");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cWhenKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cPostAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cPostPOSTCONDITIONParserRuleCall_1_0 = (RuleCall)cPostAssignment_1.eContents().get(0);
		
		//WHEN:
		//	'When' post=POSTCONDITION;
		@Override public ParserRule getRule() { return rule; }
		
		//'When' post=POSTCONDITION
		public Group getGroup() { return cGroup; }
		
		//'When'
		public Keyword getWhenKeyword_0() { return cWhenKeyword_0; }
		
		//post=POSTCONDITION
		public Assignment getPostAssignment_1() { return cPostAssignment_1; }
		
		//POSTCONDITION
		public RuleCall getPostPOSTCONDITIONParserRuleCall_1_0() { return cPostPOSTCONDITIONParserRuleCall_1_0; }
	}
	public class THENElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.unipampa.lesse.XCanopus.THEN");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cThenKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cPostAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cPostPOSTCONDITIONParserRuleCall_1_0 = (RuleCall)cPostAssignment_1.eContents().get(0);
		
		//THEN:
		//	'Then' post=POSTCONDITION;
		@Override public ParserRule getRule() { return rule; }
		
		//'Then' post=POSTCONDITION
		public Group getGroup() { return cGroup; }
		
		//'Then'
		public Keyword getThenKeyword_0() { return cThenKeyword_0; }
		
		//post=POSTCONDITION
		public Assignment getPostAssignment_1() { return cPostAssignment_1; }
		
		//POSTCONDITION
		public RuleCall getPostPOSTCONDITIONParserRuleCall_1_0() { return cPostPOSTCONDITIONParserRuleCall_1_0; }
	}
	public class POSTCONDITIONElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.unipampa.lesse.XCanopus.POSTCONDITION");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Assignment cWGTAssignment_0 = (Assignment)cAlternatives.eContents().get(0);
		private final Keyword cWGTWorkloadGeneratedThroughKeyword_0_0 = (Keyword)cWGTAssignment_0.eContents().get(0);
		private final Assignment cTHEAssignment_1 = (Assignment)cAlternatives.eContents().get(1);
		private final Keyword cTHETheKeyword_1_0 = (Keyword)cTHEAssignment_1.eContents().get(0);
		private final Assignment cATLAssignment_2 = (Assignment)cAlternatives.eContents().get(2);
		private final Keyword cATLAtLeastKeyword_2_0 = (Keyword)cATLAssignment_2.eContents().get(0);
		
		//POSTCONDITION:
		//	WGT='workload generated through' | THE='the' | ATL='At Least';
		@Override public ParserRule getRule() { return rule; }
		
		//WGT='workload generated through' | THE='the' | ATL='At Least'
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//WGT='workload generated through'
		public Assignment getWGTAssignment_0() { return cWGTAssignment_0; }
		
		//'workload generated through'
		public Keyword getWGTWorkloadGeneratedThroughKeyword_0_0() { return cWGTWorkloadGeneratedThroughKeyword_0_0; }
		
		//THE='the'
		public Assignment getTHEAssignment_1() { return cTHEAssignment_1; }
		
		//'the'
		public Keyword getTHETheKeyword_1_0() { return cTHETheKeyword_1_0; }
		
		//ATL='At Least'
		public Assignment getATLAssignment_2() { return cATLAssignment_2; }
		
		//'At Least'
		public Keyword getATLAtLeastKeyword_2_0() { return cATLAtLeastKeyword_2_0; }
	}
	public class MetricElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.unipampa.lesse.XCanopus.Metric");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cMemoryParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cDiskParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		////POSTCONDITIONAL:
		////			WGT = 'workload generated through' | THE = 'the' | ATLEAST = 'at least'  
		////;		
		////Monitoring:
		////	{Monitoring}
		////	'Monitoring'
		////	name=EString
		////	'{'
		////		('projectLabel' projectLabel=EString)?
		////		('projectAuthor' projectAuthor=EString)?
		////		('description' description=EString)?
		////		('suts' '{' suts+=SUT ( "," suts+=SUT)* '}' )?
		////		('loadGenerators' loadGenerators=LoadGenerator)?
		////		('monitors' monitors=Monitor)?
		////		('metricModel' '{' metricModel+=MetricModel ( "," metricModel+=MetricModel)* '}' )?
		////	'}';
		//Metric:
		//	Memory | Disk;
		@Override public ParserRule getRule() { return rule; }
		
		//Memory | Disk
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//Memory
		public RuleCall getMemoryParserRuleCall_0() { return cMemoryParserRuleCall_0; }
		
		//Disk
		public RuleCall getDiskParserRuleCall_1() { return cDiskParserRuleCall_1; }
	}
	public class CounterElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.unipampa.lesse.XCanopus.Counter");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cDisk_IO_CounterParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cMemoryCounterParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cTransactionCounterParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		
		//// | Transaction;
		//Counter:
		//	Disk_IO_Counter | MemoryCounter | TransactionCounter;
		@Override public ParserRule getRule() { return rule; }
		
		//Disk_IO_Counter | MemoryCounter | TransactionCounter
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//Disk_IO_Counter
		public RuleCall getDisk_IO_CounterParserRuleCall_0() { return cDisk_IO_CounterParserRuleCall_0; }
		
		//MemoryCounter
		public RuleCall getMemoryCounterParserRuleCall_1() { return cMemoryCounterParserRuleCall_1; }
		
		//TransactionCounter
		public RuleCall getTransactionCounterParserRuleCall_2() { return cTransactionCounterParserRuleCall_2; }
	}
	public class SUTElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.unipampa.lesse.XCanopus.SUT");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cSUTAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cSUTKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cNameAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cNameIDTerminalRuleCall_3_0 = (RuleCall)cNameAssignment_3.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//SUT:
		//	{SUT}
		//	'SUT'
		//	'{'
		//	name=ID
		//	//	('hostname' hostname=EString)?
		//	//	('ip' ip=EString)?
		//	//	('hardware' hardware=HARDWARE)?
		//	//	('type' type=SUT_TYPE)?
		//	//	('sut' '(' sut+=[SUT|EString] ( "," sut+=[SUT|EString])* ')' )?
		//	//	('metricmodel' metricmodel=[MetricModel|EString])?
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//{SUT} 'SUT' '{' name=ID //	('hostname' hostname=EString)?
		////	('ip' ip=EString)?
		////	('hardware' hardware=HARDWARE)?
		////	('type' type=SUT_TYPE)?
		////	('sut' '(' sut+=[SUT|EString] ( "," sut+=[SUT|EString])* ')' )?
		////	('metricmodel' metricmodel=[MetricModel|EString])?
		//'}'
		public Group getGroup() { return cGroup; }
		
		//{SUT}
		public Action getSUTAction_0() { return cSUTAction_0; }
		
		//'SUT'
		public Keyword getSUTKeyword_1() { return cSUTKeyword_1; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//name=ID
		public Assignment getNameAssignment_3() { return cNameAssignment_3; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_3_0() { return cNameIDTerminalRuleCall_3_0; }
		
		////	('hostname' hostname=EString)?
		////	('ip' ip=EString)?
		////	('hardware' hardware=HARDWARE)?
		////	('type' type=SUT_TYPE)?
		////	('sut' '(' sut+=[SUT|EString] ( "," sut+=[SUT|EString])* ')' )?
		////	('metricmodel' metricmodel=[MetricModel|EString])?
		//'}'
		public Keyword getRightCurlyBracketKeyword_4() { return cRightCurlyBracketKeyword_4; }
	}
	public class LoadGeneratorElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.unipampa.lesse.XCanopus.LoadGenerator");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cLoadGeneratorAction_0 = (Action)cGroup.eContents().get(0);
		private final Assignment cIsMonitorAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final Keyword cIsMonitorIsMonitorKeyword_1_0 = (Keyword)cIsMonitorAssignment_1.eContents().get(0);
		private final Keyword cLoadGeneratorKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Keyword cLeftCurlyBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cHostnameKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cHostnameAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final RuleCall cHostnameEStringParserRuleCall_4_1_0 = (RuleCall)cHostnameAssignment_4_1.eContents().get(0);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cIpKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Assignment cIpAssignment_5_1 = (Assignment)cGroup_5.eContents().get(1);
		private final RuleCall cIpEStringParserRuleCall_5_1_0 = (RuleCall)cIpAssignment_5_1.eContents().get(0);
		private final Group cGroup_6 = (Group)cGroup.eContents().get(6);
		private final Keyword cHardwareKeyword_6_0 = (Keyword)cGroup_6.eContents().get(0);
		private final Assignment cHardwareAssignment_6_1 = (Assignment)cGroup_6.eContents().get(1);
		private final RuleCall cHardwareHARDWAREEnumRuleCall_6_1_0 = (RuleCall)cHardwareAssignment_6_1.eContents().get(0);
		private final Group cGroup_7 = (Group)cGroup.eContents().get(7);
		private final Keyword cSutKeyword_7_0 = (Keyword)cGroup_7.eContents().get(0);
		private final Keyword cLeftParenthesisKeyword_7_1 = (Keyword)cGroup_7.eContents().get(1);
		private final Assignment cSutAssignment_7_2 = (Assignment)cGroup_7.eContents().get(2);
		private final CrossReference cSutSUTCrossReference_7_2_0 = (CrossReference)cSutAssignment_7_2.eContents().get(0);
		private final RuleCall cSutSUTEStringParserRuleCall_7_2_0_1 = (RuleCall)cSutSUTCrossReference_7_2_0.eContents().get(1);
		private final Group cGroup_7_3 = (Group)cGroup_7.eContents().get(3);
		private final Keyword cCommaKeyword_7_3_0 = (Keyword)cGroup_7_3.eContents().get(0);
		private final Assignment cSutAssignment_7_3_1 = (Assignment)cGroup_7_3.eContents().get(1);
		private final CrossReference cSutSUTCrossReference_7_3_1_0 = (CrossReference)cSutAssignment_7_3_1.eContents().get(0);
		private final RuleCall cSutSUTEStringParserRuleCall_7_3_1_0_1 = (RuleCall)cSutSUTCrossReference_7_3_1_0.eContents().get(1);
		private final Keyword cRightParenthesisKeyword_7_4 = (Keyword)cGroup_7.eContents().get(4);
		private final Group cGroup_8 = (Group)cGroup.eContents().get(8);
		private final Keyword cMetricmodelKeyword_8_0 = (Keyword)cGroup_8.eContents().get(0);
		private final Assignment cMetricmodelAssignment_8_1 = (Assignment)cGroup_8.eContents().get(1);
		private final CrossReference cMetricmodelMetricModelCrossReference_8_1_0 = (CrossReference)cMetricmodelAssignment_8_1.eContents().get(0);
		private final RuleCall cMetricmodelMetricModelEStringParserRuleCall_8_1_0_1 = (RuleCall)cMetricmodelMetricModelCrossReference_8_1_0.eContents().get(1);
		private final Group cGroup_9 = (Group)cGroup.eContents().get(9);
		private final Keyword cMonitorKeyword_9_0 = (Keyword)cGroup_9.eContents().get(0);
		private final Assignment cMonitorAssignment_9_1 = (Assignment)cGroup_9.eContents().get(1);
		private final CrossReference cMonitorMonitorCrossReference_9_1_0 = (CrossReference)cMonitorAssignment_9_1.eContents().get(0);
		private final RuleCall cMonitorMonitorEStringParserRuleCall_9_1_0_1 = (RuleCall)cMonitorMonitorCrossReference_9_1_0.eContents().get(1);
		private final Keyword cRightCurlyBracketKeyword_10 = (Keyword)cGroup.eContents().get(10);
		
		//LoadGenerator:
		//	{LoadGenerator} isMonitor?='isMonitor'?
		//	'LoadGenerator'
		//	'{' ('hostname' hostname=EString)? ('ip' ip=EString)? ('hardware' hardware=HARDWARE)? ('sut' '(' sut+=[SUT|EString]
		//	("," sut+=[SUT|EString])* ')')? ('metricmodel' metricmodel=[MetricModel|EString])? ('monitor'
		//	monitor=[Monitor|EString])?
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//{LoadGenerator} isMonitor?='isMonitor'? 'LoadGenerator' '{' ('hostname' hostname=EString)? ('ip' ip=EString)?
		//('hardware' hardware=HARDWARE)? ('sut' '(' sut+=[SUT|EString] ("," sut+=[SUT|EString])* ')')? ('metricmodel'
		//metricmodel=[MetricModel|EString])? ('monitor' monitor=[Monitor|EString])? '}'
		public Group getGroup() { return cGroup; }
		
		//{LoadGenerator}
		public Action getLoadGeneratorAction_0() { return cLoadGeneratorAction_0; }
		
		//isMonitor?='isMonitor'?
		public Assignment getIsMonitorAssignment_1() { return cIsMonitorAssignment_1; }
		
		//'isMonitor'
		public Keyword getIsMonitorIsMonitorKeyword_1_0() { return cIsMonitorIsMonitorKeyword_1_0; }
		
		//'LoadGenerator'
		public Keyword getLoadGeneratorKeyword_2() { return cLoadGeneratorKeyword_2; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_3() { return cLeftCurlyBracketKeyword_3; }
		
		//('hostname' hostname=EString)?
		public Group getGroup_4() { return cGroup_4; }
		
		//'hostname'
		public Keyword getHostnameKeyword_4_0() { return cHostnameKeyword_4_0; }
		
		//hostname=EString
		public Assignment getHostnameAssignment_4_1() { return cHostnameAssignment_4_1; }
		
		//EString
		public RuleCall getHostnameEStringParserRuleCall_4_1_0() { return cHostnameEStringParserRuleCall_4_1_0; }
		
		//('ip' ip=EString)?
		public Group getGroup_5() { return cGroup_5; }
		
		//'ip'
		public Keyword getIpKeyword_5_0() { return cIpKeyword_5_0; }
		
		//ip=EString
		public Assignment getIpAssignment_5_1() { return cIpAssignment_5_1; }
		
		//EString
		public RuleCall getIpEStringParserRuleCall_5_1_0() { return cIpEStringParserRuleCall_5_1_0; }
		
		//('hardware' hardware=HARDWARE)?
		public Group getGroup_6() { return cGroup_6; }
		
		//'hardware'
		public Keyword getHardwareKeyword_6_0() { return cHardwareKeyword_6_0; }
		
		//hardware=HARDWARE
		public Assignment getHardwareAssignment_6_1() { return cHardwareAssignment_6_1; }
		
		//HARDWARE
		public RuleCall getHardwareHARDWAREEnumRuleCall_6_1_0() { return cHardwareHARDWAREEnumRuleCall_6_1_0; }
		
		//('sut' '(' sut+=[SUT|EString] ("," sut+=[SUT|EString])* ')')?
		public Group getGroup_7() { return cGroup_7; }
		
		//'sut'
		public Keyword getSutKeyword_7_0() { return cSutKeyword_7_0; }
		
		//'('
		public Keyword getLeftParenthesisKeyword_7_1() { return cLeftParenthesisKeyword_7_1; }
		
		//sut+=[SUT|EString]
		public Assignment getSutAssignment_7_2() { return cSutAssignment_7_2; }
		
		//[SUT|EString]
		public CrossReference getSutSUTCrossReference_7_2_0() { return cSutSUTCrossReference_7_2_0; }
		
		//EString
		public RuleCall getSutSUTEStringParserRuleCall_7_2_0_1() { return cSutSUTEStringParserRuleCall_7_2_0_1; }
		
		//("," sut+=[SUT|EString])*
		public Group getGroup_7_3() { return cGroup_7_3; }
		
		//","
		public Keyword getCommaKeyword_7_3_0() { return cCommaKeyword_7_3_0; }
		
		//sut+=[SUT|EString]
		public Assignment getSutAssignment_7_3_1() { return cSutAssignment_7_3_1; }
		
		//[SUT|EString]
		public CrossReference getSutSUTCrossReference_7_3_1_0() { return cSutSUTCrossReference_7_3_1_0; }
		
		//EString
		public RuleCall getSutSUTEStringParserRuleCall_7_3_1_0_1() { return cSutSUTEStringParserRuleCall_7_3_1_0_1; }
		
		//')'
		public Keyword getRightParenthesisKeyword_7_4() { return cRightParenthesisKeyword_7_4; }
		
		//('metricmodel' metricmodel=[MetricModel|EString])?
		public Group getGroup_8() { return cGroup_8; }
		
		//'metricmodel'
		public Keyword getMetricmodelKeyword_8_0() { return cMetricmodelKeyword_8_0; }
		
		//metricmodel=[MetricModel|EString]
		public Assignment getMetricmodelAssignment_8_1() { return cMetricmodelAssignment_8_1; }
		
		//[MetricModel|EString]
		public CrossReference getMetricmodelMetricModelCrossReference_8_1_0() { return cMetricmodelMetricModelCrossReference_8_1_0; }
		
		//EString
		public RuleCall getMetricmodelMetricModelEStringParserRuleCall_8_1_0_1() { return cMetricmodelMetricModelEStringParserRuleCall_8_1_0_1; }
		
		//('monitor' monitor=[Monitor|EString])?
		public Group getGroup_9() { return cGroup_9; }
		
		//'monitor'
		public Keyword getMonitorKeyword_9_0() { return cMonitorKeyword_9_0; }
		
		//monitor=[Monitor|EString]
		public Assignment getMonitorAssignment_9_1() { return cMonitorAssignment_9_1; }
		
		//[Monitor|EString]
		public CrossReference getMonitorMonitorCrossReference_9_1_0() { return cMonitorMonitorCrossReference_9_1_0; }
		
		//EString
		public RuleCall getMonitorMonitorEStringParserRuleCall_9_1_0_1() { return cMonitorMonitorEStringParserRuleCall_9_1_0_1; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_10() { return cRightCurlyBracketKeyword_10; }
	}
	public class MonitorElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.unipampa.lesse.XCanopus.Monitor");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cMonitorAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cMonitorKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cHostnameKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cHostnameAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cHostnameEStringParserRuleCall_3_1_0 = (RuleCall)cHostnameAssignment_3_1.eContents().get(0);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cIpKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cIpAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final RuleCall cIpEStringParserRuleCall_4_1_0 = (RuleCall)cIpAssignment_4_1.eContents().get(0);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cHardwareKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Assignment cHardwareAssignment_5_1 = (Assignment)cGroup_5.eContents().get(1);
		private final RuleCall cHardwareHARDWAREEnumRuleCall_5_1_0 = (RuleCall)cHardwareAssignment_5_1.eContents().get(0);
		private final Group cGroup_6 = (Group)cGroup.eContents().get(6);
		private final Keyword cSutKeyword_6_0 = (Keyword)cGroup_6.eContents().get(0);
		private final Keyword cLeftParenthesisKeyword_6_1 = (Keyword)cGroup_6.eContents().get(1);
		private final Assignment cSutAssignment_6_2 = (Assignment)cGroup_6.eContents().get(2);
		private final CrossReference cSutSUTCrossReference_6_2_0 = (CrossReference)cSutAssignment_6_2.eContents().get(0);
		private final RuleCall cSutSUTEStringParserRuleCall_6_2_0_1 = (RuleCall)cSutSUTCrossReference_6_2_0.eContents().get(1);
		private final Group cGroup_6_3 = (Group)cGroup_6.eContents().get(3);
		private final Keyword cCommaKeyword_6_3_0 = (Keyword)cGroup_6_3.eContents().get(0);
		private final Assignment cSutAssignment_6_3_1 = (Assignment)cGroup_6_3.eContents().get(1);
		private final CrossReference cSutSUTCrossReference_6_3_1_0 = (CrossReference)cSutAssignment_6_3_1.eContents().get(0);
		private final RuleCall cSutSUTEStringParserRuleCall_6_3_1_0_1 = (RuleCall)cSutSUTCrossReference_6_3_1_0.eContents().get(1);
		private final Keyword cRightParenthesisKeyword_6_4 = (Keyword)cGroup_6.eContents().get(4);
		private final Keyword cRightCurlyBracketKeyword_7 = (Keyword)cGroup.eContents().get(7);
		
		//Monitor:
		//	{Monitor}
		//	'Monitor'
		//	'{' ('hostname' hostname=EString)? ('ip' ip=EString)? ('hardware' hardware=HARDWARE)? ('sut' '(' sut+=[SUT|EString]
		//	("," sut+=[SUT|EString])* ')')?
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//{Monitor} 'Monitor' '{' ('hostname' hostname=EString)? ('ip' ip=EString)? ('hardware' hardware=HARDWARE)? ('sut' '('
		//sut+=[SUT|EString] ("," sut+=[SUT|EString])* ')')? '}'
		public Group getGroup() { return cGroup; }
		
		//{Monitor}
		public Action getMonitorAction_0() { return cMonitorAction_0; }
		
		//'Monitor'
		public Keyword getMonitorKeyword_1() { return cMonitorKeyword_1; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//('hostname' hostname=EString)?
		public Group getGroup_3() { return cGroup_3; }
		
		//'hostname'
		public Keyword getHostnameKeyword_3_0() { return cHostnameKeyword_3_0; }
		
		//hostname=EString
		public Assignment getHostnameAssignment_3_1() { return cHostnameAssignment_3_1; }
		
		//EString
		public RuleCall getHostnameEStringParserRuleCall_3_1_0() { return cHostnameEStringParserRuleCall_3_1_0; }
		
		//('ip' ip=EString)?
		public Group getGroup_4() { return cGroup_4; }
		
		//'ip'
		public Keyword getIpKeyword_4_0() { return cIpKeyword_4_0; }
		
		//ip=EString
		public Assignment getIpAssignment_4_1() { return cIpAssignment_4_1; }
		
		//EString
		public RuleCall getIpEStringParserRuleCall_4_1_0() { return cIpEStringParserRuleCall_4_1_0; }
		
		//('hardware' hardware=HARDWARE)?
		public Group getGroup_5() { return cGroup_5; }
		
		//'hardware'
		public Keyword getHardwareKeyword_5_0() { return cHardwareKeyword_5_0; }
		
		//hardware=HARDWARE
		public Assignment getHardwareAssignment_5_1() { return cHardwareAssignment_5_1; }
		
		//HARDWARE
		public RuleCall getHardwareHARDWAREEnumRuleCall_5_1_0() { return cHardwareHARDWAREEnumRuleCall_5_1_0; }
		
		//('sut' '(' sut+=[SUT|EString] ("," sut+=[SUT|EString])* ')')?
		public Group getGroup_6() { return cGroup_6; }
		
		//'sut'
		public Keyword getSutKeyword_6_0() { return cSutKeyword_6_0; }
		
		//'('
		public Keyword getLeftParenthesisKeyword_6_1() { return cLeftParenthesisKeyword_6_1; }
		
		//sut+=[SUT|EString]
		public Assignment getSutAssignment_6_2() { return cSutAssignment_6_2; }
		
		//[SUT|EString]
		public CrossReference getSutSUTCrossReference_6_2_0() { return cSutSUTCrossReference_6_2_0; }
		
		//EString
		public RuleCall getSutSUTEStringParserRuleCall_6_2_0_1() { return cSutSUTEStringParserRuleCall_6_2_0_1; }
		
		//("," sut+=[SUT|EString])*
		public Group getGroup_6_3() { return cGroup_6_3; }
		
		//","
		public Keyword getCommaKeyword_6_3_0() { return cCommaKeyword_6_3_0; }
		
		//sut+=[SUT|EString]
		public Assignment getSutAssignment_6_3_1() { return cSutAssignment_6_3_1; }
		
		//[SUT|EString]
		public CrossReference getSutSUTCrossReference_6_3_1_0() { return cSutSUTCrossReference_6_3_1_0; }
		
		//EString
		public RuleCall getSutSUTEStringParserRuleCall_6_3_1_0_1() { return cSutSUTEStringParserRuleCall_6_3_1_0_1; }
		
		//')'
		public Keyword getRightParenthesisKeyword_6_4() { return cRightParenthesisKeyword_6_4; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_7() { return cRightCurlyBracketKeyword_7; }
	}
	public class MetricModelElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.unipampa.lesse.XCanopus.MetricModel");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cMetricModelAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cMetricModelKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cMemoryKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cMemoryAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cMemoryMemoryParserRuleCall_3_1_0 = (RuleCall)cMemoryAssignment_3_1.eContents().get(0);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cDiskKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cDiskAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final RuleCall cDiskDiskParserRuleCall_4_1_0 = (RuleCall)cDiskAssignment_4_1.eContents().get(0);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cCriteriaKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_5_1 = (Keyword)cGroup_5.eContents().get(1);
		private final Assignment cCriteriaAssignment_5_2 = (Assignment)cGroup_5.eContents().get(2);
		private final RuleCall cCriteriaCriteriaParserRuleCall_5_2_0 = (RuleCall)cCriteriaAssignment_5_2.eContents().get(0);
		private final Group cGroup_5_3 = (Group)cGroup_5.eContents().get(3);
		private final Keyword cCommaKeyword_5_3_0 = (Keyword)cGroup_5_3.eContents().get(0);
		private final Assignment cCriteriaAssignment_5_3_1 = (Assignment)cGroup_5_3.eContents().get(1);
		private final RuleCall cCriteriaCriteriaParserRuleCall_5_3_1_0 = (RuleCall)cCriteriaAssignment_5_3_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_5_4 = (Keyword)cGroup_5.eContents().get(4);
		private final Group cGroup_6 = (Group)cGroup.eContents().get(6);
		private final Keyword cThresholdKeyword_6_0 = (Keyword)cGroup_6.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_6_1 = (Keyword)cGroup_6.eContents().get(1);
		private final Assignment cThresholdAssignment_6_2 = (Assignment)cGroup_6.eContents().get(2);
		private final RuleCall cThresholdThresholdParserRuleCall_6_2_0 = (RuleCall)cThresholdAssignment_6_2.eContents().get(0);
		private final Group cGroup_6_3 = (Group)cGroup_6.eContents().get(3);
		private final Keyword cCommaKeyword_6_3_0 = (Keyword)cGroup_6_3.eContents().get(0);
		private final Assignment cThresholdAssignment_6_3_1 = (Assignment)cGroup_6_3.eContents().get(1);
		private final RuleCall cThresholdThresholdParserRuleCall_6_3_1_0 = (RuleCall)cThresholdAssignment_6_3_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_6_4 = (Keyword)cGroup_6.eContents().get(4);
		private final Group cGroup_7 = (Group)cGroup.eContents().get(7);
		private final Keyword cDiskCounterKeyword_7_0 = (Keyword)cGroup_7.eContents().get(0);
		private final Assignment cDiskCounterAssignment_7_1 = (Assignment)cGroup_7.eContents().get(1);
		private final RuleCall cDiskCounterDisk_IO_CounterParserRuleCall_7_1_0 = (RuleCall)cDiskCounterAssignment_7_1.eContents().get(0);
		private final Group cGroup_8 = (Group)cGroup.eContents().get(8);
		private final Keyword cTransactionCounterKeyword_8_0 = (Keyword)cGroup_8.eContents().get(0);
		private final Assignment cTransactionCounterAssignment_8_1 = (Assignment)cGroup_8.eContents().get(1);
		private final RuleCall cTransactionCounterTransactionCounterParserRuleCall_8_1_0 = (RuleCall)cTransactionCounterAssignment_8_1.eContents().get(0);
		private final Group cGroup_9 = (Group)cGroup.eContents().get(9);
		private final Keyword cMemoryCounterKeyword_9_0 = (Keyword)cGroup_9.eContents().get(0);
		private final Assignment cMemoryCounterAssignment_9_1 = (Assignment)cGroup_9.eContents().get(1);
		private final RuleCall cMemoryCounterMemoryCounterParserRuleCall_9_1_0 = (RuleCall)cMemoryCounterAssignment_9_1.eContents().get(0);
		private final Group cGroup_10 = (Group)cGroup.eContents().get(10);
		private final Keyword cMetricKeyword_10_0 = (Keyword)cGroup_10.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_10_1 = (Keyword)cGroup_10.eContents().get(1);
		private final Assignment cMetricAssignment_10_2 = (Assignment)cGroup_10.eContents().get(2);
		private final RuleCall cMetricMetricParserRuleCall_10_2_0 = (RuleCall)cMetricAssignment_10_2.eContents().get(0);
		private final Group cGroup_10_3 = (Group)cGroup_10.eContents().get(3);
		private final Keyword cCommaKeyword_10_3_0 = (Keyword)cGroup_10_3.eContents().get(0);
		private final Assignment cMetricAssignment_10_3_1 = (Assignment)cGroup_10_3.eContents().get(1);
		private final RuleCall cMetricMetricParserRuleCall_10_3_1_0 = (RuleCall)cMetricAssignment_10_3_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_10_4 = (Keyword)cGroup_10.eContents().get(4);
		private final Group cGroup_11 = (Group)cGroup.eContents().get(11);
		private final Keyword cCounterKeyword_11_0 = (Keyword)cGroup_11.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_11_1 = (Keyword)cGroup_11.eContents().get(1);
		private final Assignment cCounterAssignment_11_2 = (Assignment)cGroup_11.eContents().get(2);
		private final RuleCall cCounterCounterParserRuleCall_11_2_0 = (RuleCall)cCounterAssignment_11_2.eContents().get(0);
		private final Group cGroup_11_3 = (Group)cGroup_11.eContents().get(3);
		private final Keyword cCommaKeyword_11_3_0 = (Keyword)cGroup_11_3.eContents().get(0);
		private final Assignment cCounterAssignment_11_3_1 = (Assignment)cGroup_11_3.eContents().get(1);
		private final RuleCall cCounterCounterParserRuleCall_11_3_1_0 = (RuleCall)cCounterAssignment_11_3_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_11_4 = (Keyword)cGroup_11.eContents().get(4);
		private final Keyword cRightCurlyBracketKeyword_12 = (Keyword)cGroup.eContents().get(12);
		
		//MetricModel:
		//	{MetricModel}
		//	'MetricModel'
		//	'{' ('memory' memory=Memory)? ('disk' disk=Disk)? ('criteria' '{' criteria+=Criteria ("," criteria+=Criteria)* '}')?
		//	('threshold' '{' threshold+=Threshold ("," threshold+=Threshold)* '}')? ('diskCounter' diskCounter=Disk_IO_Counter)?
		//	('transactionCounter' transactionCounter=TransactionCounter)? ('memoryCounter' memoryCounter=MemoryCounter)?
		//	('metric' '{' metric+=Metric ("," metric+=Metric)* '}')? ('counter' '{' counter+=Counter ("," counter+=Counter)*
		//	'}')?
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//{MetricModel} 'MetricModel' '{' ('memory' memory=Memory)? ('disk' disk=Disk)? ('criteria' '{' criteria+=Criteria (","
		//criteria+=Criteria)* '}')? ('threshold' '{' threshold+=Threshold ("," threshold+=Threshold)* '}')? ('diskCounter'
		//diskCounter=Disk_IO_Counter)? ('transactionCounter' transactionCounter=TransactionCounter)? ('memoryCounter'
		//memoryCounter=MemoryCounter)? ('metric' '{' metric+=Metric ("," metric+=Metric)* '}')? ('counter' '{' counter+=Counter
		//("," counter+=Counter)* '}')? '}'
		public Group getGroup() { return cGroup; }
		
		//{MetricModel}
		public Action getMetricModelAction_0() { return cMetricModelAction_0; }
		
		//'MetricModel'
		public Keyword getMetricModelKeyword_1() { return cMetricModelKeyword_1; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//('memory' memory=Memory)?
		public Group getGroup_3() { return cGroup_3; }
		
		//'memory'
		public Keyword getMemoryKeyword_3_0() { return cMemoryKeyword_3_0; }
		
		//memory=Memory
		public Assignment getMemoryAssignment_3_1() { return cMemoryAssignment_3_1; }
		
		//Memory
		public RuleCall getMemoryMemoryParserRuleCall_3_1_0() { return cMemoryMemoryParserRuleCall_3_1_0; }
		
		//('disk' disk=Disk)?
		public Group getGroup_4() { return cGroup_4; }
		
		//'disk'
		public Keyword getDiskKeyword_4_0() { return cDiskKeyword_4_0; }
		
		//disk=Disk
		public Assignment getDiskAssignment_4_1() { return cDiskAssignment_4_1; }
		
		//Disk
		public RuleCall getDiskDiskParserRuleCall_4_1_0() { return cDiskDiskParserRuleCall_4_1_0; }
		
		//('criteria' '{' criteria+=Criteria ("," criteria+=Criteria)* '}')?
		public Group getGroup_5() { return cGroup_5; }
		
		//'criteria'
		public Keyword getCriteriaKeyword_5_0() { return cCriteriaKeyword_5_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_5_1() { return cLeftCurlyBracketKeyword_5_1; }
		
		//criteria+=Criteria
		public Assignment getCriteriaAssignment_5_2() { return cCriteriaAssignment_5_2; }
		
		//Criteria
		public RuleCall getCriteriaCriteriaParserRuleCall_5_2_0() { return cCriteriaCriteriaParserRuleCall_5_2_0; }
		
		//("," criteria+=Criteria)*
		public Group getGroup_5_3() { return cGroup_5_3; }
		
		//","
		public Keyword getCommaKeyword_5_3_0() { return cCommaKeyword_5_3_0; }
		
		//criteria+=Criteria
		public Assignment getCriteriaAssignment_5_3_1() { return cCriteriaAssignment_5_3_1; }
		
		//Criteria
		public RuleCall getCriteriaCriteriaParserRuleCall_5_3_1_0() { return cCriteriaCriteriaParserRuleCall_5_3_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_5_4() { return cRightCurlyBracketKeyword_5_4; }
		
		//('threshold' '{' threshold+=Threshold ("," threshold+=Threshold)* '}')?
		public Group getGroup_6() { return cGroup_6; }
		
		//'threshold'
		public Keyword getThresholdKeyword_6_0() { return cThresholdKeyword_6_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_6_1() { return cLeftCurlyBracketKeyword_6_1; }
		
		//threshold+=Threshold
		public Assignment getThresholdAssignment_6_2() { return cThresholdAssignment_6_2; }
		
		//Threshold
		public RuleCall getThresholdThresholdParserRuleCall_6_2_0() { return cThresholdThresholdParserRuleCall_6_2_0; }
		
		//("," threshold+=Threshold)*
		public Group getGroup_6_3() { return cGroup_6_3; }
		
		//","
		public Keyword getCommaKeyword_6_3_0() { return cCommaKeyword_6_3_0; }
		
		//threshold+=Threshold
		public Assignment getThresholdAssignment_6_3_1() { return cThresholdAssignment_6_3_1; }
		
		//Threshold
		public RuleCall getThresholdThresholdParserRuleCall_6_3_1_0() { return cThresholdThresholdParserRuleCall_6_3_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_6_4() { return cRightCurlyBracketKeyword_6_4; }
		
		//('diskCounter' diskCounter=Disk_IO_Counter)?
		public Group getGroup_7() { return cGroup_7; }
		
		//'diskCounter'
		public Keyword getDiskCounterKeyword_7_0() { return cDiskCounterKeyword_7_0; }
		
		//diskCounter=Disk_IO_Counter
		public Assignment getDiskCounterAssignment_7_1() { return cDiskCounterAssignment_7_1; }
		
		//Disk_IO_Counter
		public RuleCall getDiskCounterDisk_IO_CounterParserRuleCall_7_1_0() { return cDiskCounterDisk_IO_CounterParserRuleCall_7_1_0; }
		
		//('transactionCounter' transactionCounter=TransactionCounter)?
		public Group getGroup_8() { return cGroup_8; }
		
		//'transactionCounter'
		public Keyword getTransactionCounterKeyword_8_0() { return cTransactionCounterKeyword_8_0; }
		
		//transactionCounter=TransactionCounter
		public Assignment getTransactionCounterAssignment_8_1() { return cTransactionCounterAssignment_8_1; }
		
		//TransactionCounter
		public RuleCall getTransactionCounterTransactionCounterParserRuleCall_8_1_0() { return cTransactionCounterTransactionCounterParserRuleCall_8_1_0; }
		
		//('memoryCounter' memoryCounter=MemoryCounter)?
		public Group getGroup_9() { return cGroup_9; }
		
		//'memoryCounter'
		public Keyword getMemoryCounterKeyword_9_0() { return cMemoryCounterKeyword_9_0; }
		
		//memoryCounter=MemoryCounter
		public Assignment getMemoryCounterAssignment_9_1() { return cMemoryCounterAssignment_9_1; }
		
		//MemoryCounter
		public RuleCall getMemoryCounterMemoryCounterParserRuleCall_9_1_0() { return cMemoryCounterMemoryCounterParserRuleCall_9_1_0; }
		
		//('metric' '{' metric+=Metric ("," metric+=Metric)* '}')?
		public Group getGroup_10() { return cGroup_10; }
		
		//'metric'
		public Keyword getMetricKeyword_10_0() { return cMetricKeyword_10_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_10_1() { return cLeftCurlyBracketKeyword_10_1; }
		
		//metric+=Metric
		public Assignment getMetricAssignment_10_2() { return cMetricAssignment_10_2; }
		
		//Metric
		public RuleCall getMetricMetricParserRuleCall_10_2_0() { return cMetricMetricParserRuleCall_10_2_0; }
		
		//("," metric+=Metric)*
		public Group getGroup_10_3() { return cGroup_10_3; }
		
		//","
		public Keyword getCommaKeyword_10_3_0() { return cCommaKeyword_10_3_0; }
		
		//metric+=Metric
		public Assignment getMetricAssignment_10_3_1() { return cMetricAssignment_10_3_1; }
		
		//Metric
		public RuleCall getMetricMetricParserRuleCall_10_3_1_0() { return cMetricMetricParserRuleCall_10_3_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_10_4() { return cRightCurlyBracketKeyword_10_4; }
		
		//('counter' '{' counter+=Counter ("," counter+=Counter)* '}')?
		public Group getGroup_11() { return cGroup_11; }
		
		//'counter'
		public Keyword getCounterKeyword_11_0() { return cCounterKeyword_11_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_11_1() { return cLeftCurlyBracketKeyword_11_1; }
		
		//counter+=Counter
		public Assignment getCounterAssignment_11_2() { return cCounterAssignment_11_2; }
		
		//Counter
		public RuleCall getCounterCounterParserRuleCall_11_2_0() { return cCounterCounterParserRuleCall_11_2_0; }
		
		//("," counter+=Counter)*
		public Group getGroup_11_3() { return cGroup_11_3; }
		
		//","
		public Keyword getCommaKeyword_11_3_0() { return cCommaKeyword_11_3_0; }
		
		//counter+=Counter
		public Assignment getCounterAssignment_11_3_1() { return cCounterAssignment_11_3_1; }
		
		//Counter
		public RuleCall getCounterCounterParserRuleCall_11_3_1_0() { return cCounterCounterParserRuleCall_11_3_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_11_4() { return cRightCurlyBracketKeyword_11_4; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_12() { return cRightCurlyBracketKeyword_12; }
	}
	public class MemoryElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.unipampa.lesse.XCanopus.Memory");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cMemoryAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cMemoryKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameEStringParserRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cMemoryCounterKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cMemoryCounterAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final CrossReference cMemoryCounterMemoryCounterCrossReference_4_1_0 = (CrossReference)cMemoryCounterAssignment_4_1.eContents().get(0);
		private final RuleCall cMemoryCounterMemoryCounterEStringParserRuleCall_4_1_0_1 = (RuleCall)cMemoryCounterMemoryCounterCrossReference_4_1_0.eContents().get(1);
		private final Keyword cRightCurlyBracketKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		//Memory:
		//	{Memory}
		//	'Memory'
		//	name=EString
		//	'{' ('memoryCounter' memoryCounter=[MemoryCounter|EString])?
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//{Memory} 'Memory' name=EString '{' ('memoryCounter' memoryCounter=[MemoryCounter|EString])? '}'
		public Group getGroup() { return cGroup; }
		
		//{Memory}
		public Action getMemoryAction_0() { return cMemoryAction_0; }
		
		//'Memory'
		public Keyword getMemoryKeyword_1() { return cMemoryKeyword_1; }
		
		//name=EString
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }
		
		//EString
		public RuleCall getNameEStringParserRuleCall_2_0() { return cNameEStringParserRuleCall_2_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_3() { return cLeftCurlyBracketKeyword_3; }
		
		//('memoryCounter' memoryCounter=[MemoryCounter|EString])?
		public Group getGroup_4() { return cGroup_4; }
		
		//'memoryCounter'
		public Keyword getMemoryCounterKeyword_4_0() { return cMemoryCounterKeyword_4_0; }
		
		//memoryCounter=[MemoryCounter|EString]
		public Assignment getMemoryCounterAssignment_4_1() { return cMemoryCounterAssignment_4_1; }
		
		//[MemoryCounter|EString]
		public CrossReference getMemoryCounterMemoryCounterCrossReference_4_1_0() { return cMemoryCounterMemoryCounterCrossReference_4_1_0; }
		
		//EString
		public RuleCall getMemoryCounterMemoryCounterEStringParserRuleCall_4_1_0_1() { return cMemoryCounterMemoryCounterEStringParserRuleCall_4_1_0_1; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_5() { return cRightCurlyBracketKeyword_5; }
	}
	public class TransactionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.unipampa.lesse.XCanopus.Transaction");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cTransactionAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cTransactionKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameEStringParserRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cTransactionCounterKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cTransactionCounterAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final CrossReference cTransactionCounterTransactionCounterCrossReference_4_1_0 = (CrossReference)cTransactionCounterAssignment_4_1.eContents().get(0);
		private final RuleCall cTransactionCounterTransactionCounterEStringParserRuleCall_4_1_0_1 = (RuleCall)cTransactionCounterTransactionCounterCrossReference_4_1_0.eContents().get(1);
		private final Keyword cRightCurlyBracketKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		//Transaction:
		//	{Transaction}
		//	'Transaction'
		//	name=EString
		//	'{' ('transactionCounter' transactionCounter=[TransactionCounter|EString])?
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//{Transaction} 'Transaction' name=EString '{' ('transactionCounter' transactionCounter=[TransactionCounter|EString])? '}'
		public Group getGroup() { return cGroup; }
		
		//{Transaction}
		public Action getTransactionAction_0() { return cTransactionAction_0; }
		
		//'Transaction'
		public Keyword getTransactionKeyword_1() { return cTransactionKeyword_1; }
		
		//name=EString
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }
		
		//EString
		public RuleCall getNameEStringParserRuleCall_2_0() { return cNameEStringParserRuleCall_2_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_3() { return cLeftCurlyBracketKeyword_3; }
		
		//('transactionCounter' transactionCounter=[TransactionCounter|EString])?
		public Group getGroup_4() { return cGroup_4; }
		
		//'transactionCounter'
		public Keyword getTransactionCounterKeyword_4_0() { return cTransactionCounterKeyword_4_0; }
		
		//transactionCounter=[TransactionCounter|EString]
		public Assignment getTransactionCounterAssignment_4_1() { return cTransactionCounterAssignment_4_1; }
		
		//[TransactionCounter|EString]
		public CrossReference getTransactionCounterTransactionCounterCrossReference_4_1_0() { return cTransactionCounterTransactionCounterCrossReference_4_1_0; }
		
		//EString
		public RuleCall getTransactionCounterTransactionCounterEStringParserRuleCall_4_1_0_1() { return cTransactionCounterTransactionCounterEStringParserRuleCall_4_1_0_1; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_5() { return cRightCurlyBracketKeyword_5; }
	}
	public class DiskElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.unipampa.lesse.XCanopus.Disk");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cDiskAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cDiskKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameEStringParserRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cDisk_io_counterKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cDisk_io_counterAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final CrossReference cDisk_io_counterDisk_IO_CounterCrossReference_4_1_0 = (CrossReference)cDisk_io_counterAssignment_4_1.eContents().get(0);
		private final RuleCall cDisk_io_counterDisk_IO_CounterEStringParserRuleCall_4_1_0_1 = (RuleCall)cDisk_io_counterDisk_IO_CounterCrossReference_4_1_0.eContents().get(1);
		private final Keyword cRightCurlyBracketKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		//Disk:
		//	{Disk}
		//	'Disk'
		//	name=EString
		//	'{' ('disk_io_counter' disk_io_counter=[Disk_IO_Counter|EString])?
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//{Disk} 'Disk' name=EString '{' ('disk_io_counter' disk_io_counter=[Disk_IO_Counter|EString])? '}'
		public Group getGroup() { return cGroup; }
		
		//{Disk}
		public Action getDiskAction_0() { return cDiskAction_0; }
		
		//'Disk'
		public Keyword getDiskKeyword_1() { return cDiskKeyword_1; }
		
		//name=EString
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }
		
		//EString
		public RuleCall getNameEStringParserRuleCall_2_0() { return cNameEStringParserRuleCall_2_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_3() { return cLeftCurlyBracketKeyword_3; }
		
		//('disk_io_counter' disk_io_counter=[Disk_IO_Counter|EString])?
		public Group getGroup_4() { return cGroup_4; }
		
		//'disk_io_counter'
		public Keyword getDisk_io_counterKeyword_4_0() { return cDisk_io_counterKeyword_4_0; }
		
		//disk_io_counter=[Disk_IO_Counter|EString]
		public Assignment getDisk_io_counterAssignment_4_1() { return cDisk_io_counterAssignment_4_1; }
		
		//[Disk_IO_Counter|EString]
		public CrossReference getDisk_io_counterDisk_IO_CounterCrossReference_4_1_0() { return cDisk_io_counterDisk_IO_CounterCrossReference_4_1_0; }
		
		//EString
		public RuleCall getDisk_io_counterDisk_IO_CounterEStringParserRuleCall_4_1_0_1() { return cDisk_io_counterDisk_IO_CounterEStringParserRuleCall_4_1_0_1; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_5() { return cRightCurlyBracketKeyword_5; }
	}
	public class CriteriaElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.unipampa.lesse.XCanopus.Criteria");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cCriteriaAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cCriteriaKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cValueKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cValueAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cValueEIntParserRuleCall_3_1_0 = (RuleCall)cValueAssignment_3_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//Criteria:
		//	{Criteria}
		//	'Criteria'
		//	'{' ('value' value=EInt)?
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//{Criteria} 'Criteria' '{' ('value' value=EInt)? '}'
		public Group getGroup() { return cGroup; }
		
		//{Criteria}
		public Action getCriteriaAction_0() { return cCriteriaAction_0; }
		
		//'Criteria'
		public Keyword getCriteriaKeyword_1() { return cCriteriaKeyword_1; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//('value' value=EInt)?
		public Group getGroup_3() { return cGroup_3; }
		
		//'value'
		public Keyword getValueKeyword_3_0() { return cValueKeyword_3_0; }
		
		//value=EInt
		public Assignment getValueAssignment_3_1() { return cValueAssignment_3_1; }
		
		//EInt
		public RuleCall getValueEIntParserRuleCall_3_1_0() { return cValueEIntParserRuleCall_3_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_4() { return cRightCurlyBracketKeyword_4; }
	}
	public class ThresholdElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.unipampa.lesse.XCanopus.Threshold");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cThresholdAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cThresholdKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cValueKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cValueAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cValueEIntParserRuleCall_3_1_0 = (RuleCall)cValueAssignment_3_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//Threshold:
		//	{Threshold}
		//	'Threshold'
		//	'{' ('value' value=EInt)?
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//{Threshold} 'Threshold' '{' ('value' value=EInt)? '}'
		public Group getGroup() { return cGroup; }
		
		//{Threshold}
		public Action getThresholdAction_0() { return cThresholdAction_0; }
		
		//'Threshold'
		public Keyword getThresholdKeyword_1() { return cThresholdKeyword_1; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//('value' value=EInt)?
		public Group getGroup_3() { return cGroup_3; }
		
		//'value'
		public Keyword getValueKeyword_3_0() { return cValueKeyword_3_0; }
		
		//value=EInt
		public Assignment getValueAssignment_3_1() { return cValueAssignment_3_1; }
		
		//EInt
		public RuleCall getValueEIntParserRuleCall_3_1_0() { return cValueEIntParserRuleCall_3_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_4() { return cRightCurlyBracketKeyword_4; }
	}
	public class Disk_IO_CounterElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.unipampa.lesse.XCanopus.Disk_IO_Counter");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cDisk_IO_CounterAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cDisk_IO_CounterKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameEStringParserRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cCounterDiskKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_4_1 = (Keyword)cGroup_4.eContents().get(1);
		private final Assignment cCounterDiskAssignment_4_2 = (Assignment)cGroup_4.eContents().get(2);
		private final RuleCall cCounterDiskCOUNTER_DISKEnumRuleCall_4_2_0 = (RuleCall)cCounterDiskAssignment_4_2.eContents().get(0);
		private final Group cGroup_4_3 = (Group)cGroup_4.eContents().get(3);
		private final Keyword cCommaKeyword_4_3_0 = (Keyword)cGroup_4_3.eContents().get(0);
		private final Assignment cCounterDiskAssignment_4_3_1 = (Assignment)cGroup_4_3.eContents().get(1);
		private final RuleCall cCounterDiskCOUNTER_DISKEnumRuleCall_4_3_1_0 = (RuleCall)cCounterDiskAssignment_4_3_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_4_4 = (Keyword)cGroup_4.eContents().get(4);
		private final Keyword cRightCurlyBracketKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		////AssociationCounterCriteriaThreshold returns canopusPerformanceMetric::AssociationCounterCriteriaThreshold:
		////	{canopusPerformanceMetric::AssociationCounterCriteriaThreshold}
		////	'AssociationCounterCriteriaThreshold'
		////	'{'
		////		('associationCriteria' associationCriteria=ASSOCIATION_CRITERIA)?
		////		('threshold' threshold=[canopusPerformanceMetric::Threshold|EString])?
		////		('criteria' criteria=[canopusPerformanceMetric::Criteria|EString])?
		////	'}';
		//Disk_IO_Counter:
		//	{Disk_IO_Counter}
		//	'Disk_IO_Counter'
		//	name=EString
		//	'{' ('counterDisk' '{' counterDisk+=COUNTER_DISK ("," counterDisk+=COUNTER_DISK)* '}')?
		//	//	('associationcountercriteriathreshold' '(' associationcountercriteriathreshold+=[canopusPerformanceMetric::AssociationCounterCriteriaThreshold|EString] ( "," associationcountercriteriathreshold+=[canopusPerformanceMetric::AssociationCounterCriteriaThreshold|EString])* ')' )?
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//{Disk_IO_Counter} 'Disk_IO_Counter' name=EString '{' ('counterDisk' '{' counterDisk+=COUNTER_DISK (","
		//counterDisk+=COUNTER_DISK)* '}')? //	('associationcountercriteriathreshold' '(' associationcountercriteriathreshold+=[canopusPerformanceMetric::AssociationCounterCriteriaThreshold|EString] ( "," associationcountercriteriathreshold+=[canopusPerformanceMetric::AssociationCounterCriteriaThreshold|EString])* ')' )?
		//'}'
		public Group getGroup() { return cGroup; }
		
		//{Disk_IO_Counter}
		public Action getDisk_IO_CounterAction_0() { return cDisk_IO_CounterAction_0; }
		
		//'Disk_IO_Counter'
		public Keyword getDisk_IO_CounterKeyword_1() { return cDisk_IO_CounterKeyword_1; }
		
		//name=EString
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }
		
		//EString
		public RuleCall getNameEStringParserRuleCall_2_0() { return cNameEStringParserRuleCall_2_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_3() { return cLeftCurlyBracketKeyword_3; }
		
		//('counterDisk' '{' counterDisk+=COUNTER_DISK ("," counterDisk+=COUNTER_DISK)* '}')?
		public Group getGroup_4() { return cGroup_4; }
		
		//'counterDisk'
		public Keyword getCounterDiskKeyword_4_0() { return cCounterDiskKeyword_4_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_4_1() { return cLeftCurlyBracketKeyword_4_1; }
		
		//counterDisk+=COUNTER_DISK
		public Assignment getCounterDiskAssignment_4_2() { return cCounterDiskAssignment_4_2; }
		
		//COUNTER_DISK
		public RuleCall getCounterDiskCOUNTER_DISKEnumRuleCall_4_2_0() { return cCounterDiskCOUNTER_DISKEnumRuleCall_4_2_0; }
		
		//("," counterDisk+=COUNTER_DISK)*
		public Group getGroup_4_3() { return cGroup_4_3; }
		
		//","
		public Keyword getCommaKeyword_4_3_0() { return cCommaKeyword_4_3_0; }
		
		//counterDisk+=COUNTER_DISK
		public Assignment getCounterDiskAssignment_4_3_1() { return cCounterDiskAssignment_4_3_1; }
		
		//COUNTER_DISK
		public RuleCall getCounterDiskCOUNTER_DISKEnumRuleCall_4_3_1_0() { return cCounterDiskCOUNTER_DISKEnumRuleCall_4_3_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_4_4() { return cRightCurlyBracketKeyword_4_4; }
		
		////	('associationcountercriteriathreshold' '(' associationcountercriteriathreshold+=[canopusPerformanceMetric::AssociationCounterCriteriaThreshold|EString] ( "," associationcountercriteriathreshold+=[canopusPerformanceMetric::AssociationCounterCriteriaThreshold|EString])* ')' )?
		//'}'
		public Keyword getRightCurlyBracketKeyword_5() { return cRightCurlyBracketKeyword_5; }
	}
	public class TransactionCounterElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.unipampa.lesse.XCanopus.TransactionCounter");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cTransactionCounterAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cTransactionCounterKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameEStringParserRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cCounterTransactionKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_4_1 = (Keyword)cGroup_4.eContents().get(1);
		private final Assignment cCounterTransactionAssignment_4_2 = (Assignment)cGroup_4.eContents().get(2);
		private final RuleCall cCounterTransactionCOUNTER_TRANSACTIONEnumRuleCall_4_2_0 = (RuleCall)cCounterTransactionAssignment_4_2.eContents().get(0);
		private final Group cGroup_4_3 = (Group)cGroup_4.eContents().get(3);
		private final Keyword cCommaKeyword_4_3_0 = (Keyword)cGroup_4_3.eContents().get(0);
		private final Assignment cCounterTransactionAssignment_4_3_1 = (Assignment)cGroup_4_3.eContents().get(1);
		private final RuleCall cCounterTransactionCOUNTER_TRANSACTIONEnumRuleCall_4_3_1_0 = (RuleCall)cCounterTransactionAssignment_4_3_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_4_4 = (Keyword)cGroup_4.eContents().get(4);
		private final Keyword cRightCurlyBracketKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		//TransactionCounter:
		//	{TransactionCounter}
		//	'TransactionCounter'
		//	name=EString
		//	'{' ('counterTransaction' '{' counterTransaction+=COUNTER_TRANSACTION ("," counterTransaction+=COUNTER_TRANSACTION)*
		//	'}')?
		//	//	('associationcountercriteriathreshold' '(' associationcountercriteriathreshold+=[canopusPerformanceMetric::AssociationCounterCriteriaThreshold|EString] ( "," associationcountercriteriathreshold+=[canopusPerformanceMetric::AssociationCounterCriteriaThreshold|EString])* ')' )?
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//{TransactionCounter} 'TransactionCounter' name=EString '{' ('counterTransaction' '{'
		//counterTransaction+=COUNTER_TRANSACTION ("," counterTransaction+=COUNTER_TRANSACTION)* '}')? //	('associationcountercriteriathreshold' '(' associationcountercriteriathreshold+=[canopusPerformanceMetric::AssociationCounterCriteriaThreshold|EString] ( "," associationcountercriteriathreshold+=[canopusPerformanceMetric::AssociationCounterCriteriaThreshold|EString])* ')' )?
		//'}'
		public Group getGroup() { return cGroup; }
		
		//{TransactionCounter}
		public Action getTransactionCounterAction_0() { return cTransactionCounterAction_0; }
		
		//'TransactionCounter'
		public Keyword getTransactionCounterKeyword_1() { return cTransactionCounterKeyword_1; }
		
		//name=EString
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }
		
		//EString
		public RuleCall getNameEStringParserRuleCall_2_0() { return cNameEStringParserRuleCall_2_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_3() { return cLeftCurlyBracketKeyword_3; }
		
		//('counterTransaction' '{' counterTransaction+=COUNTER_TRANSACTION ("," counterTransaction+=COUNTER_TRANSACTION)* '}')?
		public Group getGroup_4() { return cGroup_4; }
		
		//'counterTransaction'
		public Keyword getCounterTransactionKeyword_4_0() { return cCounterTransactionKeyword_4_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_4_1() { return cLeftCurlyBracketKeyword_4_1; }
		
		//counterTransaction+=COUNTER_TRANSACTION
		public Assignment getCounterTransactionAssignment_4_2() { return cCounterTransactionAssignment_4_2; }
		
		//COUNTER_TRANSACTION
		public RuleCall getCounterTransactionCOUNTER_TRANSACTIONEnumRuleCall_4_2_0() { return cCounterTransactionCOUNTER_TRANSACTIONEnumRuleCall_4_2_0; }
		
		//("," counterTransaction+=COUNTER_TRANSACTION)*
		public Group getGroup_4_3() { return cGroup_4_3; }
		
		//","
		public Keyword getCommaKeyword_4_3_0() { return cCommaKeyword_4_3_0; }
		
		//counterTransaction+=COUNTER_TRANSACTION
		public Assignment getCounterTransactionAssignment_4_3_1() { return cCounterTransactionAssignment_4_3_1; }
		
		//COUNTER_TRANSACTION
		public RuleCall getCounterTransactionCOUNTER_TRANSACTIONEnumRuleCall_4_3_1_0() { return cCounterTransactionCOUNTER_TRANSACTIONEnumRuleCall_4_3_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_4_4() { return cRightCurlyBracketKeyword_4_4; }
		
		////	('associationcountercriteriathreshold' '(' associationcountercriteriathreshold+=[canopusPerformanceMetric::AssociationCounterCriteriaThreshold|EString] ( "," associationcountercriteriathreshold+=[canopusPerformanceMetric::AssociationCounterCriteriaThreshold|EString])* ')' )?
		//'}'
		public Keyword getRightCurlyBracketKeyword_5() { return cRightCurlyBracketKeyword_5; }
	}
	public class MemoryCounterElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.unipampa.lesse.XCanopus.MemoryCounter");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cMemoryCounterAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cMemoryCounterKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameEStringParserRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cCounterMemoryKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_4_1 = (Keyword)cGroup_4.eContents().get(1);
		private final Assignment cCounterMemoryAssignment_4_2 = (Assignment)cGroup_4.eContents().get(2);
		private final RuleCall cCounterMemoryCOUNTER_MEMORYEnumRuleCall_4_2_0 = (RuleCall)cCounterMemoryAssignment_4_2.eContents().get(0);
		private final Group cGroup_4_3 = (Group)cGroup_4.eContents().get(3);
		private final Keyword cCommaKeyword_4_3_0 = (Keyword)cGroup_4_3.eContents().get(0);
		private final Assignment cCounterMemoryAssignment_4_3_1 = (Assignment)cGroup_4_3.eContents().get(1);
		private final RuleCall cCounterMemoryCOUNTER_MEMORYEnumRuleCall_4_3_1_0 = (RuleCall)cCounterMemoryAssignment_4_3_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_4_4 = (Keyword)cGroup_4.eContents().get(4);
		private final Keyword cRightCurlyBracketKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		//MemoryCounter:
		//	{MemoryCounter}
		//	'MemoryCounter'
		//	name=EString
		//	'{' ('counterMemory' '{' counterMemory+=COUNTER_MEMORY ("," counterMemory+=COUNTER_MEMORY)* '}')?
		//	//		('associationcountercriteriathreshold' '(' associationcountercriteriathreshold+=[canopusPerformanceMetric::AssociationCounterCriteriaThreshold|EString] ( "," associationcountercriteriathreshold+=[canopusPerformanceMetric::AssociationCounterCriteriaThreshold|EString])* ')' )?
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//{MemoryCounter} 'MemoryCounter' name=EString '{' ('counterMemory' '{' counterMemory+=COUNTER_MEMORY (","
		//counterMemory+=COUNTER_MEMORY)* '}')? //		('associationcountercriteriathreshold' '(' associationcountercriteriathreshold+=[canopusPerformanceMetric::AssociationCounterCriteriaThreshold|EString] ( "," associationcountercriteriathreshold+=[canopusPerformanceMetric::AssociationCounterCriteriaThreshold|EString])* ')' )?
		//'}'
		public Group getGroup() { return cGroup; }
		
		//{MemoryCounter}
		public Action getMemoryCounterAction_0() { return cMemoryCounterAction_0; }
		
		//'MemoryCounter'
		public Keyword getMemoryCounterKeyword_1() { return cMemoryCounterKeyword_1; }
		
		//name=EString
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }
		
		//EString
		public RuleCall getNameEStringParserRuleCall_2_0() { return cNameEStringParserRuleCall_2_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_3() { return cLeftCurlyBracketKeyword_3; }
		
		//('counterMemory' '{' counterMemory+=COUNTER_MEMORY ("," counterMemory+=COUNTER_MEMORY)* '}')?
		public Group getGroup_4() { return cGroup_4; }
		
		//'counterMemory'
		public Keyword getCounterMemoryKeyword_4_0() { return cCounterMemoryKeyword_4_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_4_1() { return cLeftCurlyBracketKeyword_4_1; }
		
		//counterMemory+=COUNTER_MEMORY
		public Assignment getCounterMemoryAssignment_4_2() { return cCounterMemoryAssignment_4_2; }
		
		//COUNTER_MEMORY
		public RuleCall getCounterMemoryCOUNTER_MEMORYEnumRuleCall_4_2_0() { return cCounterMemoryCOUNTER_MEMORYEnumRuleCall_4_2_0; }
		
		//("," counterMemory+=COUNTER_MEMORY)*
		public Group getGroup_4_3() { return cGroup_4_3; }
		
		//","
		public Keyword getCommaKeyword_4_3_0() { return cCommaKeyword_4_3_0; }
		
		//counterMemory+=COUNTER_MEMORY
		public Assignment getCounterMemoryAssignment_4_3_1() { return cCounterMemoryAssignment_4_3_1; }
		
		//COUNTER_MEMORY
		public RuleCall getCounterMemoryCOUNTER_MEMORYEnumRuleCall_4_3_1_0() { return cCounterMemoryCOUNTER_MEMORYEnumRuleCall_4_3_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_4_4() { return cRightCurlyBracketKeyword_4_4; }
		
		////		('associationcountercriteriathreshold' '(' associationcountercriteriathreshold+=[canopusPerformanceMetric::AssociationCounterCriteriaThreshold|EString] ( "," associationcountercriteriathreshold+=[canopusPerformanceMetric::AssociationCounterCriteriaThreshold|EString])* ')' )?
		//'}'
		public Keyword getRightCurlyBracketKeyword_5() { return cRightCurlyBracketKeyword_5; }
	}
	public class EIntElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.unipampa.lesse.XCanopus.EInt");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cHyphenMinusKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final RuleCall cINTTerminalRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		
		//EInt ecore::EInt:
		//	'-'? INT;
		@Override public ParserRule getRule() { return rule; }
		
		//'-'? INT
		public Group getGroup() { return cGroup; }
		
		//'-'?
		public Keyword getHyphenMinusKeyword_0() { return cHyphenMinusKeyword_0; }
		
		//INT
		public RuleCall getINTTerminalRuleCall_1() { return cINTTerminalRuleCall_1; }
	}
	public class EBooleanElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.unipampa.lesse.XCanopus.EBoolean");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Keyword cTrueKeyword_0 = (Keyword)cAlternatives.eContents().get(0);
		private final Keyword cFalseKeyword_1 = (Keyword)cAlternatives.eContents().get(1);
		
		//EBoolean ecore::EBoolean:
		//	'true' | 'false';
		@Override public ParserRule getRule() { return rule; }
		
		//'true' | 'false'
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//'true'
		public Keyword getTrueKeyword_0() { return cTrueKeyword_0; }
		
		//'false'
		public Keyword getFalseKeyword_1() { return cFalseKeyword_1; }
	}
	public class EStringElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.unipampa.lesse.XCanopus.EString");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cSTRINGTerminalRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cIDTerminalRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//EString:
		//	STRING | ID;
		@Override public ParserRule getRule() { return rule; }
		
		//STRING | ID
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//STRING
		public RuleCall getSTRINGTerminalRuleCall_0() { return cSTRINGTerminalRuleCall_0; }
		
		//ID
		public RuleCall getIDTerminalRuleCall_1() { return cIDTerminalRuleCall_1; }
	}
	
	public class HARDWAREElements extends AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "org.unipampa.lesse.XCanopus.HARDWARE");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cPHYSICAL_MACHINEEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cPHYSICAL_MACHINEPHYSICAL_MACHINEKeyword_0_0 = (Keyword)cPHYSICAL_MACHINEEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cVIRTUAL_MACHINEEnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cVIRTUAL_MACHINEVIRTUAL_MACHINEKeyword_1_0 = (Keyword)cVIRTUAL_MACHINEEnumLiteralDeclaration_1.eContents().get(0);
		private final EnumLiteralDeclaration cCLOUD_SERVICEEnumLiteralDeclaration_2 = (EnumLiteralDeclaration)cAlternatives.eContents().get(2);
		private final Keyword cCLOUD_SERVICECLOUD_SERVICEKeyword_2_0 = (Keyword)cCLOUD_SERVICEEnumLiteralDeclaration_2.eContents().get(0);
		
		//enum HARDWARE:
		//	PHYSICAL_MACHINE | VIRTUAL_MACHINE | CLOUD_SERVICE;
		public EnumRule getRule() { return rule; }
		
		//PHYSICAL_MACHINE | VIRTUAL_MACHINE | CLOUD_SERVICE
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//PHYSICAL_MACHINE
		public EnumLiteralDeclaration getPHYSICAL_MACHINEEnumLiteralDeclaration_0() { return cPHYSICAL_MACHINEEnumLiteralDeclaration_0; }
		
		//'PHYSICAL_MACHINE'
		public Keyword getPHYSICAL_MACHINEPHYSICAL_MACHINEKeyword_0_0() { return cPHYSICAL_MACHINEPHYSICAL_MACHINEKeyword_0_0; }
		
		//VIRTUAL_MACHINE
		public EnumLiteralDeclaration getVIRTUAL_MACHINEEnumLiteralDeclaration_1() { return cVIRTUAL_MACHINEEnumLiteralDeclaration_1; }
		
		//'VIRTUAL_MACHINE'
		public Keyword getVIRTUAL_MACHINEVIRTUAL_MACHINEKeyword_1_0() { return cVIRTUAL_MACHINEVIRTUAL_MACHINEKeyword_1_0; }
		
		//CLOUD_SERVICE
		public EnumLiteralDeclaration getCLOUD_SERVICEEnumLiteralDeclaration_2() { return cCLOUD_SERVICEEnumLiteralDeclaration_2; }
		
		//'CLOUD_SERVICE'
		public Keyword getCLOUD_SERVICECLOUD_SERVICEKeyword_2_0() { return cCLOUD_SERVICECLOUD_SERVICEKeyword_2_0; }
	}
	public class SUT_TYPEElements extends AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "org.unipampa.lesse.XCanopus.SUT_TYPE");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cDESKTOPAPPEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cDESKTOPAPPDESKTOPAPPKeyword_0_0 = (Keyword)cDESKTOPAPPEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cDATABASEEnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cDATABASEDATABASEKeyword_1_0 = (Keyword)cDATABASEEnumLiteralDeclaration_1.eContents().get(0);
		private final EnumLiteralDeclaration cWEBAPPEnumLiteralDeclaration_2 = (EnumLiteralDeclaration)cAlternatives.eContents().get(2);
		private final Keyword cWEBAPPWEBAPPKeyword_2_0 = (Keyword)cWEBAPPEnumLiteralDeclaration_2.eContents().get(0);
		private final EnumLiteralDeclaration cWEBSERVICEEnumLiteralDeclaration_3 = (EnumLiteralDeclaration)cAlternatives.eContents().get(3);
		private final Keyword cWEBSERVICEWEBSERVICEKeyword_3_0 = (Keyword)cWEBSERVICEEnumLiteralDeclaration_3.eContents().get(0);
		
		//enum SUT_TYPE:
		//	DESKTOPAPP | DATABASE | WEBAPP | WEBSERVICE;
		public EnumRule getRule() { return rule; }
		
		//DESKTOPAPP | DATABASE | WEBAPP | WEBSERVICE
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//DESKTOPAPP
		public EnumLiteralDeclaration getDESKTOPAPPEnumLiteralDeclaration_0() { return cDESKTOPAPPEnumLiteralDeclaration_0; }
		
		//'DESKTOPAPP'
		public Keyword getDESKTOPAPPDESKTOPAPPKeyword_0_0() { return cDESKTOPAPPDESKTOPAPPKeyword_0_0; }
		
		//DATABASE
		public EnumLiteralDeclaration getDATABASEEnumLiteralDeclaration_1() { return cDATABASEEnumLiteralDeclaration_1; }
		
		//'DATABASE'
		public Keyword getDATABASEDATABASEKeyword_1_0() { return cDATABASEDATABASEKeyword_1_0; }
		
		//WEBAPP
		public EnumLiteralDeclaration getWEBAPPEnumLiteralDeclaration_2() { return cWEBAPPEnumLiteralDeclaration_2; }
		
		//'WEBAPP'
		public Keyword getWEBAPPWEBAPPKeyword_2_0() { return cWEBAPPWEBAPPKeyword_2_0; }
		
		//WEBSERVICE
		public EnumLiteralDeclaration getWEBSERVICEEnumLiteralDeclaration_3() { return cWEBSERVICEEnumLiteralDeclaration_3; }
		
		//'WEBSERVICE'
		public Keyword getWEBSERVICEWEBSERVICEKeyword_3_0() { return cWEBSERVICEWEBSERVICEKeyword_3_0; }
	}
	public class ASSOCIATION_CRITERIAElements extends AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "org.unipampa.lesse.XCanopus.ASSOCIATION_CRITERIA");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cBETWEENEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cBETWEENBETWEENKeyword_0_0 = (Keyword)cBETWEENEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cGREATER_THAN_OR_EQUAL_TOEnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cGREATER_THAN_OR_EQUAL_TOGREATER_THAN_OR_EQUAL_TOKeyword_1_0 = (Keyword)cGREATER_THAN_OR_EQUAL_TOEnumLiteralDeclaration_1.eContents().get(0);
		private final EnumLiteralDeclaration cLESS_THANEnumLiteralDeclaration_2 = (EnumLiteralDeclaration)cAlternatives.eContents().get(2);
		private final Keyword cLESS_THANLESS_THANKeyword_2_0 = (Keyword)cLESS_THANEnumLiteralDeclaration_2.eContents().get(0);
		
		//enum ASSOCIATION_CRITERIA:
		//	BETWEEN | GREATER_THAN_OR_EQUAL_TO | LESS_THAN;
		public EnumRule getRule() { return rule; }
		
		//BETWEEN | GREATER_THAN_OR_EQUAL_TO | LESS_THAN
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//BETWEEN
		public EnumLiteralDeclaration getBETWEENEnumLiteralDeclaration_0() { return cBETWEENEnumLiteralDeclaration_0; }
		
		//'BETWEEN'
		public Keyword getBETWEENBETWEENKeyword_0_0() { return cBETWEENBETWEENKeyword_0_0; }
		
		//GREATER_THAN_OR_EQUAL_TO
		public EnumLiteralDeclaration getGREATER_THAN_OR_EQUAL_TOEnumLiteralDeclaration_1() { return cGREATER_THAN_OR_EQUAL_TOEnumLiteralDeclaration_1; }
		
		//'GREATER_THAN_OR_EQUAL_TO'
		public Keyword getGREATER_THAN_OR_EQUAL_TOGREATER_THAN_OR_EQUAL_TOKeyword_1_0() { return cGREATER_THAN_OR_EQUAL_TOGREATER_THAN_OR_EQUAL_TOKeyword_1_0; }
		
		//LESS_THAN
		public EnumLiteralDeclaration getLESS_THANEnumLiteralDeclaration_2() { return cLESS_THANEnumLiteralDeclaration_2; }
		
		//'LESS_THAN'
		public Keyword getLESS_THANLESS_THANKeyword_2_0() { return cLESS_THANLESS_THANKeyword_2_0; }
	}
	public class COUNTER_DISKElements extends AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "org.unipampa.lesse.XCanopus.COUNTER_DISK");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cAVG_DISK_SECS_TRANSFER_COUNTEREnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cAVG_DISK_SECS_TRANSFER_COUNTERAVG_DISK_SECS_TRANSFER_COUNTERKeyword_0_0 = (Keyword)cAVG_DISK_SECS_TRANSFER_COUNTEREnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cPERCENTAGE_IDLE_TIME_COUNTEREnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cPERCENTAGE_IDLE_TIME_COUNTERPERCENTAGE_IDLE_TIME_COUNTERKeyword_1_0 = (Keyword)cPERCENTAGE_IDLE_TIME_COUNTEREnumLiteralDeclaration_1.eContents().get(0);
		private final EnumLiteralDeclaration cDISK_TRANSFERS_SEC_COUNTEREnumLiteralDeclaration_2 = (EnumLiteralDeclaration)cAlternatives.eContents().get(2);
		private final Keyword cDISK_TRANSFERS_SEC_COUNTERDISK_TRANSFERS_SEC_COUNTERKeyword_2_0 = (Keyword)cDISK_TRANSFERS_SEC_COUNTEREnumLiteralDeclaration_2.eContents().get(0);
		private final EnumLiteralDeclaration cAVG_DISK_QUEUE_LENGTH_COUNTEREnumLiteralDeclaration_3 = (EnumLiteralDeclaration)cAlternatives.eContents().get(3);
		private final Keyword cAVG_DISK_QUEUE_LENGTH_COUNTERAVG_DISK_QUEUE_LENGTH_COUNTERKeyword_3_0 = (Keyword)cAVG_DISK_QUEUE_LENGTH_COUNTEREnumLiteralDeclaration_3.eContents().get(0);
		private final EnumLiteralDeclaration cSPLIT_IO_SEC_COUNTEREnumLiteralDeclaration_4 = (EnumLiteralDeclaration)cAlternatives.eContents().get(4);
		private final Keyword cSPLIT_IO_SEC_COUNTERSPLIT_IO_SEC_COUNTERKeyword_4_0 = (Keyword)cSPLIT_IO_SEC_COUNTEREnumLiteralDeclaration_4.eContents().get(0);
		private final EnumLiteralDeclaration cFREE_MEGABYTES_COUNTEREnumLiteralDeclaration_5 = (EnumLiteralDeclaration)cAlternatives.eContents().get(5);
		private final Keyword cFREE_MEGABYTES_COUNTERFREE_MEGABYTES_COUNTERKeyword_5_0 = (Keyword)cFREE_MEGABYTES_COUNTEREnumLiteralDeclaration_5.eContents().get(0);
		
		//enum COUNTER_DISK:
		//	AVG_DISK_SECS_TRANSFER_COUNTER | PERCENTAGE_IDLE_TIME_COUNTER | DISK_TRANSFERS_SEC_COUNTER |
		//	AVG_DISK_QUEUE_LENGTH_COUNTER | SPLIT_IO_SEC_COUNTER | FREE_MEGABYTES_COUNTER;
		public EnumRule getRule() { return rule; }
		
		//AVG_DISK_SECS_TRANSFER_COUNTER | PERCENTAGE_IDLE_TIME_COUNTER | DISK_TRANSFERS_SEC_COUNTER |
		//AVG_DISK_QUEUE_LENGTH_COUNTER | SPLIT_IO_SEC_COUNTER | FREE_MEGABYTES_COUNTER
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//AVG_DISK_SECS_TRANSFER_COUNTER
		public EnumLiteralDeclaration getAVG_DISK_SECS_TRANSFER_COUNTEREnumLiteralDeclaration_0() { return cAVG_DISK_SECS_TRANSFER_COUNTEREnumLiteralDeclaration_0; }
		
		//'AVG_DISK_SECS_TRANSFER_COUNTER'
		public Keyword getAVG_DISK_SECS_TRANSFER_COUNTERAVG_DISK_SECS_TRANSFER_COUNTERKeyword_0_0() { return cAVG_DISK_SECS_TRANSFER_COUNTERAVG_DISK_SECS_TRANSFER_COUNTERKeyword_0_0; }
		
		//PERCENTAGE_IDLE_TIME_COUNTER
		public EnumLiteralDeclaration getPERCENTAGE_IDLE_TIME_COUNTEREnumLiteralDeclaration_1() { return cPERCENTAGE_IDLE_TIME_COUNTEREnumLiteralDeclaration_1; }
		
		//'PERCENTAGE_IDLE_TIME_COUNTER'
		public Keyword getPERCENTAGE_IDLE_TIME_COUNTERPERCENTAGE_IDLE_TIME_COUNTERKeyword_1_0() { return cPERCENTAGE_IDLE_TIME_COUNTERPERCENTAGE_IDLE_TIME_COUNTERKeyword_1_0; }
		
		//DISK_TRANSFERS_SEC_COUNTER
		public EnumLiteralDeclaration getDISK_TRANSFERS_SEC_COUNTEREnumLiteralDeclaration_2() { return cDISK_TRANSFERS_SEC_COUNTEREnumLiteralDeclaration_2; }
		
		//'DISK_TRANSFERS_SEC_COUNTER'
		public Keyword getDISK_TRANSFERS_SEC_COUNTERDISK_TRANSFERS_SEC_COUNTERKeyword_2_0() { return cDISK_TRANSFERS_SEC_COUNTERDISK_TRANSFERS_SEC_COUNTERKeyword_2_0; }
		
		//AVG_DISK_QUEUE_LENGTH_COUNTER
		public EnumLiteralDeclaration getAVG_DISK_QUEUE_LENGTH_COUNTEREnumLiteralDeclaration_3() { return cAVG_DISK_QUEUE_LENGTH_COUNTEREnumLiteralDeclaration_3; }
		
		//'AVG_DISK_QUEUE_LENGTH_COUNTER'
		public Keyword getAVG_DISK_QUEUE_LENGTH_COUNTERAVG_DISK_QUEUE_LENGTH_COUNTERKeyword_3_0() { return cAVG_DISK_QUEUE_LENGTH_COUNTERAVG_DISK_QUEUE_LENGTH_COUNTERKeyword_3_0; }
		
		//SPLIT_IO_SEC_COUNTER
		public EnumLiteralDeclaration getSPLIT_IO_SEC_COUNTEREnumLiteralDeclaration_4() { return cSPLIT_IO_SEC_COUNTEREnumLiteralDeclaration_4; }
		
		//'SPLIT_IO_SEC_COUNTER'
		public Keyword getSPLIT_IO_SEC_COUNTERSPLIT_IO_SEC_COUNTERKeyword_4_0() { return cSPLIT_IO_SEC_COUNTERSPLIT_IO_SEC_COUNTERKeyword_4_0; }
		
		//FREE_MEGABYTES_COUNTER
		public EnumLiteralDeclaration getFREE_MEGABYTES_COUNTEREnumLiteralDeclaration_5() { return cFREE_MEGABYTES_COUNTEREnumLiteralDeclaration_5; }
		
		//'FREE_MEGABYTES_COUNTER'
		public Keyword getFREE_MEGABYTES_COUNTERFREE_MEGABYTES_COUNTERKeyword_5_0() { return cFREE_MEGABYTES_COUNTERFREE_MEGABYTES_COUNTERKeyword_5_0; }
	}
	public class COUNTER_TRANSACTIONElements extends AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "org.unipampa.lesse.XCanopus.COUNTER_TRANSACTION");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cTRANSACTION_RESPONSE_TIMEEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cTRANSACTION_RESPONSE_TIMETRANSACTION_RESPONSE_TIMEKeyword_0_0 = (Keyword)cTRANSACTION_RESPONSE_TIMEEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cTRANSACTION_PER_SECOND_TPSEnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cTRANSACTION_PER_SECOND_TPSTRANSACTION_PER_SECOND_TPSKeyword_1_0 = (Keyword)cTRANSACTION_PER_SECOND_TPSEnumLiteralDeclaration_1.eContents().get(0);
		private final EnumLiteralDeclaration cTRANSACTION_SUCCESS_RATEEnumLiteralDeclaration_2 = (EnumLiteralDeclaration)cAlternatives.eContents().get(2);
		private final Keyword cTRANSACTION_SUCCESS_RATETRANSACTION_SUCCESS_RATEKeyword_2_0 = (Keyword)cTRANSACTION_SUCCESS_RATEEnumLiteralDeclaration_2.eContents().get(0);
		
		//enum COUNTER_TRANSACTION:
		//	TRANSACTION_RESPONSE_TIME | TRANSACTION_PER_SECOND_TPS | TRANSACTION_SUCCESS_RATE;
		public EnumRule getRule() { return rule; }
		
		//TRANSACTION_RESPONSE_TIME | TRANSACTION_PER_SECOND_TPS | TRANSACTION_SUCCESS_RATE
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//TRANSACTION_RESPONSE_TIME
		public EnumLiteralDeclaration getTRANSACTION_RESPONSE_TIMEEnumLiteralDeclaration_0() { return cTRANSACTION_RESPONSE_TIMEEnumLiteralDeclaration_0; }
		
		//'TRANSACTION_RESPONSE_TIME'
		public Keyword getTRANSACTION_RESPONSE_TIMETRANSACTION_RESPONSE_TIMEKeyword_0_0() { return cTRANSACTION_RESPONSE_TIMETRANSACTION_RESPONSE_TIMEKeyword_0_0; }
		
		//TRANSACTION_PER_SECOND_TPS
		public EnumLiteralDeclaration getTRANSACTION_PER_SECOND_TPSEnumLiteralDeclaration_1() { return cTRANSACTION_PER_SECOND_TPSEnumLiteralDeclaration_1; }
		
		//'TRANSACTION_PER_SECOND_TPS'
		public Keyword getTRANSACTION_PER_SECOND_TPSTRANSACTION_PER_SECOND_TPSKeyword_1_0() { return cTRANSACTION_PER_SECOND_TPSTRANSACTION_PER_SECOND_TPSKeyword_1_0; }
		
		//TRANSACTION_SUCCESS_RATE
		public EnumLiteralDeclaration getTRANSACTION_SUCCESS_RATEEnumLiteralDeclaration_2() { return cTRANSACTION_SUCCESS_RATEEnumLiteralDeclaration_2; }
		
		//'TRANSACTION_SUCCESS_RATE'
		public Keyword getTRANSACTION_SUCCESS_RATETRANSACTION_SUCCESS_RATEKeyword_2_0() { return cTRANSACTION_SUCCESS_RATETRANSACTION_SUCCESS_RATEKeyword_2_0; }
	}
	public class COUNTER_MEMORYElements extends AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "org.unipampa.lesse.XCanopus.COUNTER_MEMORY");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cAVALIABLE_MBYTES_COUNTEREnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cAVALIABLE_MBYTES_COUNTERAVALIABLE_MBYTES_COUNTERKeyword_0_0 = (Keyword)cAVALIABLE_MBYTES_COUNTEREnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cPAGES_SEC_COUNTEREnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cPAGES_SEC_COUNTERPAGES_SEC_COUNTERKeyword_1_0 = (Keyword)cPAGES_SEC_COUNTEREnumLiteralDeclaration_1.eContents().get(0);
		private final EnumLiteralDeclaration cPAGE_READS_SEC_COUNTEREnumLiteralDeclaration_2 = (EnumLiteralDeclaration)cAlternatives.eContents().get(2);
		private final Keyword cPAGE_READS_SEC_COUNTERPAGE_READS_SEC_COUNTERKeyword_2_0 = (Keyword)cPAGE_READS_SEC_COUNTEREnumLiteralDeclaration_2.eContents().get(0);
		private final EnumLiteralDeclaration cWORKING_SET_COUNTEREnumLiteralDeclaration_3 = (EnumLiteralDeclaration)cAlternatives.eContents().get(3);
		private final Keyword cWORKING_SET_COUNTERWORKING_SET_COUNTERKeyword_3_0 = (Keyword)cWORKING_SET_COUNTEREnumLiteralDeclaration_3.eContents().get(0);
		private final EnumLiteralDeclaration cPOOL_NONPAGE_BYTES_COUNTEREnumLiteralDeclaration_4 = (EnumLiteralDeclaration)cAlternatives.eContents().get(4);
		private final Keyword cPOOL_NONPAGE_BYTES_COUNTERPOOL_NONPAGE_BYTES_COUNTERKeyword_4_0 = (Keyword)cPOOL_NONPAGE_BYTES_COUNTEREnumLiteralDeclaration_4.eContents().get(0);
		private final EnumLiteralDeclaration cPAGED_POOL_BYTES_COUNTEREnumLiteralDeclaration_5 = (EnumLiteralDeclaration)cAlternatives.eContents().get(5);
		private final Keyword cPAGED_POOL_BYTES_COUNTERPAGED_POOL_BYTES_COUNTERKeyword_5_0 = (Keyword)cPAGED_POOL_BYTES_COUNTEREnumLiteralDeclaration_5.eContents().get(0);
		private final EnumLiteralDeclaration cPAGED_POOL_FAILURES_COUNTEREnumLiteralDeclaration_6 = (EnumLiteralDeclaration)cAlternatives.eContents().get(6);
		private final Keyword cPAGED_POOL_FAILURES_COUNTERPAGED_POOL_FAILURES_COUNTERKeyword_6_0 = (Keyword)cPAGED_POOL_FAILURES_COUNTEREnumLiteralDeclaration_6.eContents().get(0);
		private final EnumLiteralDeclaration cCACHE_BYTES_COUNTEREnumLiteralDeclaration_7 = (EnumLiteralDeclaration)cAlternatives.eContents().get(7);
		private final Keyword cCACHE_BYTES_COUNTERCACHE_BYTES_COUNTERKeyword_7_0 = (Keyword)cCACHE_BYTES_COUNTEREnumLiteralDeclaration_7.eContents().get(0);
		
		//enum COUNTER_MEMORY:
		//	AVALIABLE_MBYTES_COUNTER | PAGES_SEC_COUNTER | PAGE_READS_SEC_COUNTER | WORKING_SET_COUNTER |
		//	POOL_NONPAGE_BYTES_COUNTER | PAGED_POOL_BYTES_COUNTER | PAGED_POOL_FAILURES_COUNTER | CACHE_BYTES_COUNTER;
		public EnumRule getRule() { return rule; }
		
		//AVALIABLE_MBYTES_COUNTER | PAGES_SEC_COUNTER | PAGE_READS_SEC_COUNTER | WORKING_SET_COUNTER | POOL_NONPAGE_BYTES_COUNTER
		//| PAGED_POOL_BYTES_COUNTER | PAGED_POOL_FAILURES_COUNTER | CACHE_BYTES_COUNTER
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//AVALIABLE_MBYTES_COUNTER
		public EnumLiteralDeclaration getAVALIABLE_MBYTES_COUNTEREnumLiteralDeclaration_0() { return cAVALIABLE_MBYTES_COUNTEREnumLiteralDeclaration_0; }
		
		//'AVALIABLE_MBYTES_COUNTER'
		public Keyword getAVALIABLE_MBYTES_COUNTERAVALIABLE_MBYTES_COUNTERKeyword_0_0() { return cAVALIABLE_MBYTES_COUNTERAVALIABLE_MBYTES_COUNTERKeyword_0_0; }
		
		//PAGES_SEC_COUNTER
		public EnumLiteralDeclaration getPAGES_SEC_COUNTEREnumLiteralDeclaration_1() { return cPAGES_SEC_COUNTEREnumLiteralDeclaration_1; }
		
		//'PAGES_SEC_COUNTER'
		public Keyword getPAGES_SEC_COUNTERPAGES_SEC_COUNTERKeyword_1_0() { return cPAGES_SEC_COUNTERPAGES_SEC_COUNTERKeyword_1_0; }
		
		//PAGE_READS_SEC_COUNTER
		public EnumLiteralDeclaration getPAGE_READS_SEC_COUNTEREnumLiteralDeclaration_2() { return cPAGE_READS_SEC_COUNTEREnumLiteralDeclaration_2; }
		
		//'PAGE_READS_SEC_COUNTER'
		public Keyword getPAGE_READS_SEC_COUNTERPAGE_READS_SEC_COUNTERKeyword_2_0() { return cPAGE_READS_SEC_COUNTERPAGE_READS_SEC_COUNTERKeyword_2_0; }
		
		//WORKING_SET_COUNTER
		public EnumLiteralDeclaration getWORKING_SET_COUNTEREnumLiteralDeclaration_3() { return cWORKING_SET_COUNTEREnumLiteralDeclaration_3; }
		
		//'WORKING_SET_COUNTER'
		public Keyword getWORKING_SET_COUNTERWORKING_SET_COUNTERKeyword_3_0() { return cWORKING_SET_COUNTERWORKING_SET_COUNTERKeyword_3_0; }
		
		//POOL_NONPAGE_BYTES_COUNTER
		public EnumLiteralDeclaration getPOOL_NONPAGE_BYTES_COUNTEREnumLiteralDeclaration_4() { return cPOOL_NONPAGE_BYTES_COUNTEREnumLiteralDeclaration_4; }
		
		//'POOL_NONPAGE_BYTES_COUNTER'
		public Keyword getPOOL_NONPAGE_BYTES_COUNTERPOOL_NONPAGE_BYTES_COUNTERKeyword_4_0() { return cPOOL_NONPAGE_BYTES_COUNTERPOOL_NONPAGE_BYTES_COUNTERKeyword_4_0; }
		
		//PAGED_POOL_BYTES_COUNTER
		public EnumLiteralDeclaration getPAGED_POOL_BYTES_COUNTEREnumLiteralDeclaration_5() { return cPAGED_POOL_BYTES_COUNTEREnumLiteralDeclaration_5; }
		
		//'PAGED_POOL_BYTES_COUNTER'
		public Keyword getPAGED_POOL_BYTES_COUNTERPAGED_POOL_BYTES_COUNTERKeyword_5_0() { return cPAGED_POOL_BYTES_COUNTERPAGED_POOL_BYTES_COUNTERKeyword_5_0; }
		
		//PAGED_POOL_FAILURES_COUNTER
		public EnumLiteralDeclaration getPAGED_POOL_FAILURES_COUNTEREnumLiteralDeclaration_6() { return cPAGED_POOL_FAILURES_COUNTEREnumLiteralDeclaration_6; }
		
		//'PAGED_POOL_FAILURES_COUNTER'
		public Keyword getPAGED_POOL_FAILURES_COUNTERPAGED_POOL_FAILURES_COUNTERKeyword_6_0() { return cPAGED_POOL_FAILURES_COUNTERPAGED_POOL_FAILURES_COUNTERKeyword_6_0; }
		
		//CACHE_BYTES_COUNTER
		public EnumLiteralDeclaration getCACHE_BYTES_COUNTEREnumLiteralDeclaration_7() { return cCACHE_BYTES_COUNTEREnumLiteralDeclaration_7; }
		
		//'CACHE_BYTES_COUNTER'
		public Keyword getCACHE_BYTES_COUNTERCACHE_BYTES_COUNTERKeyword_7_0() { return cCACHE_BYTES_COUNTERCACHE_BYTES_COUNTERKeyword_7_0; }
	}
	
	private final ModelElements pModel;
	private final IncludeElements pInclude;
	private final MonitoringElements pMonitoring;
	private final FreetextElements pFreetext;
	private final CONDITIONElements pCONDITION;
	private final ANDElements pAND;
	private final WHENElements pWHEN;
	private final THENElements pTHEN;
	private final POSTCONDITIONElements pPOSTCONDITION;
	private final MetricElements pMetric;
	private final CounterElements pCounter;
	private final SUTElements pSUT;
	private final LoadGeneratorElements pLoadGenerator;
	private final MonitorElements pMonitor;
	private final MetricModelElements pMetricModel;
	private final MemoryElements pMemory;
	private final TransactionElements pTransaction;
	private final DiskElements pDisk;
	private final CriteriaElements pCriteria;
	private final ThresholdElements pThreshold;
	private final Disk_IO_CounterElements pDisk_IO_Counter;
	private final TransactionCounterElements pTransactionCounter;
	private final MemoryCounterElements pMemoryCounter;
	private final EIntElements pEInt;
	private final EBooleanElements pEBoolean;
	private final EStringElements pEString;
	private final HARDWAREElements eHARDWARE;
	private final SUT_TYPEElements eSUT_TYPE;
	private final ASSOCIATION_CRITERIAElements eASSOCIATION_CRITERIA;
	private final COUNTER_DISKElements eCOUNTER_DISK;
	private final COUNTER_TRANSACTIONElements eCOUNTER_TRANSACTION;
	private final COUNTER_MEMORYElements eCOUNTER_MEMORY;
	private final TerminalRule tID;
	private final TerminalRule tINT;
	private final TerminalRule tSTRING;
	private final TerminalRule tML_COMMENT;
	private final TerminalRule tSL_COMMENT;
	private final TerminalRule tWS;
	private final TerminalRule tANY_OTHER;
	
	private final Grammar grammar;

	@Inject
	public XCanopusGrammarAccess(GrammarProvider grammarProvider) {
		this.grammar = internalFindGrammar(grammarProvider);
		this.pModel = new ModelElements();
		this.pInclude = new IncludeElements();
		this.pMonitoring = new MonitoringElements();
		this.pFreetext = new FreetextElements();
		this.pCONDITION = new CONDITIONElements();
		this.pAND = new ANDElements();
		this.pWHEN = new WHENElements();
		this.pTHEN = new THENElements();
		this.pPOSTCONDITION = new POSTCONDITIONElements();
		this.pMetric = new MetricElements();
		this.pCounter = new CounterElements();
		this.pSUT = new SUTElements();
		this.pLoadGenerator = new LoadGeneratorElements();
		this.pMonitor = new MonitorElements();
		this.pMetricModel = new MetricModelElements();
		this.pMemory = new MemoryElements();
		this.pTransaction = new TransactionElements();
		this.pDisk = new DiskElements();
		this.pCriteria = new CriteriaElements();
		this.pThreshold = new ThresholdElements();
		this.pDisk_IO_Counter = new Disk_IO_CounterElements();
		this.pTransactionCounter = new TransactionCounterElements();
		this.pMemoryCounter = new MemoryCounterElements();
		this.pEInt = new EIntElements();
		this.pEBoolean = new EBooleanElements();
		this.pEString = new EStringElements();
		this.eHARDWARE = new HARDWAREElements();
		this.eSUT_TYPE = new SUT_TYPEElements();
		this.eASSOCIATION_CRITERIA = new ASSOCIATION_CRITERIAElements();
		this.eCOUNTER_DISK = new COUNTER_DISKElements();
		this.eCOUNTER_TRANSACTION = new COUNTER_TRANSACTIONElements();
		this.eCOUNTER_MEMORY = new COUNTER_MEMORYElements();
		this.tID = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "org.unipampa.lesse.XCanopus.ID");
		this.tINT = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "org.unipampa.lesse.XCanopus.INT");
		this.tSTRING = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "org.unipampa.lesse.XCanopus.STRING");
		this.tML_COMMENT = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "org.unipampa.lesse.XCanopus.ML_COMMENT");
		this.tSL_COMMENT = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "org.unipampa.lesse.XCanopus.SL_COMMENT");
		this.tWS = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "org.unipampa.lesse.XCanopus.WS");
		this.tANY_OTHER = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "org.unipampa.lesse.XCanopus.ANY_OTHER");
	}
	
	protected Grammar internalFindGrammar(GrammarProvider grammarProvider) {
		Grammar grammar = grammarProvider.getGrammar(this);
		while (grammar != null) {
			if ("org.unipampa.lesse.XCanopus".equals(grammar.getName())) {
				return grammar;
			}
			List<Grammar> grammars = grammar.getUsedGrammars();
			if (!grammars.isEmpty()) {
				grammar = grammars.iterator().next();
			} else {
				return null;
			}
		}
		return grammar;
	}
	
	@Override
	public Grammar getGrammar() {
		return grammar;
	}
	

	
	//Model:
	//	includes+=Include*
	//	monitorings+=Monitoring*
	//	suts+=SUT*
	//	loadGenerators+=LoadGenerator*;
	public ModelElements getModelAccess() {
		return pModel;
	}
	
	public ParserRule getModelRule() {
		return getModelAccess().getRule();
	}
	
	//Include:
	//	'include' importURI=STRING 'as' name=ID;
	public IncludeElements getIncludeAccess() {
		return pInclude;
	}
	
	public ParserRule getIncludeRule() {
		return getIncludeAccess().getRule();
	}
	
	//Monitoring:
	//	{Monitoring}
	//	'Feature' Freetext '.'
	//	'Monitoring:' Freetext '.'
	//	'Given' 'that' sut=[SUT] sut_type=SUT_TYPE 'monitored by' sut=[SUT] "monitor"
	//	condition=CONDITION sut=[SUT] "Load Generator" "for the" sut_type2=SUT_TYPE "on" sut=[SUT];
	public MonitoringElements getMonitoringAccess() {
		return pMonitoring;
	}
	
	public ParserRule getMonitoringRule() {
		return getMonitoringAccess().getRule();
	}
	
	//// '|' choice
	//// '?' optional
	//// '+' 1 or more
	//// '*' 0 or more
	//// '+=' list of elements
	//Freetext:
	//	EString*;
	public FreetextElements getFreetextAccess() {
		return pFreetext;
	}
	
	public ParserRule getFreetextRule() {
		return getFreetextAccess().getRule();
	}
	
	//CONDITION:
	//	AND | WHEN | THEN // features
	//;
	public CONDITIONElements getCONDITIONAccess() {
		return pCONDITION;
	}
	
	public ParserRule getCONDITIONRule() {
		return getCONDITIONAccess().getRule();
	}
	
	//AND:
	//	'And' post=POSTCONDITION;
	public ANDElements getANDAccess() {
		return pAND;
	}
	
	public ParserRule getANDRule() {
		return getANDAccess().getRule();
	}
	
	//WHEN:
	//	'When' post=POSTCONDITION;
	public WHENElements getWHENAccess() {
		return pWHEN;
	}
	
	public ParserRule getWHENRule() {
		return getWHENAccess().getRule();
	}
	
	//THEN:
	//	'Then' post=POSTCONDITION;
	public THENElements getTHENAccess() {
		return pTHEN;
	}
	
	public ParserRule getTHENRule() {
		return getTHENAccess().getRule();
	}
	
	//POSTCONDITION:
	//	WGT='workload generated through' | THE='the' | ATL='At Least';
	public POSTCONDITIONElements getPOSTCONDITIONAccess() {
		return pPOSTCONDITION;
	}
	
	public ParserRule getPOSTCONDITIONRule() {
		return getPOSTCONDITIONAccess().getRule();
	}
	
	////POSTCONDITIONAL:
	////			WGT = 'workload generated through' | THE = 'the' | ATLEAST = 'at least'  
	////;		
	////Monitoring:
	////	{Monitoring}
	////	'Monitoring'
	////	name=EString
	////	'{'
	////		('projectLabel' projectLabel=EString)?
	////		('projectAuthor' projectAuthor=EString)?
	////		('description' description=EString)?
	////		('suts' '{' suts+=SUT ( "," suts+=SUT)* '}' )?
	////		('loadGenerators' loadGenerators=LoadGenerator)?
	////		('monitors' monitors=Monitor)?
	////		('metricModel' '{' metricModel+=MetricModel ( "," metricModel+=MetricModel)* '}' )?
	////	'}';
	//Metric:
	//	Memory | Disk;
	public MetricElements getMetricAccess() {
		return pMetric;
	}
	
	public ParserRule getMetricRule() {
		return getMetricAccess().getRule();
	}
	
	//// | Transaction;
	//Counter:
	//	Disk_IO_Counter | MemoryCounter | TransactionCounter;
	public CounterElements getCounterAccess() {
		return pCounter;
	}
	
	public ParserRule getCounterRule() {
		return getCounterAccess().getRule();
	}
	
	//SUT:
	//	{SUT}
	//	'SUT'
	//	'{'
	//	name=ID
	//	//	('hostname' hostname=EString)?
	//	//	('ip' ip=EString)?
	//	//	('hardware' hardware=HARDWARE)?
	//	//	('type' type=SUT_TYPE)?
	//	//	('sut' '(' sut+=[SUT|EString] ( "," sut+=[SUT|EString])* ')' )?
	//	//	('metricmodel' metricmodel=[MetricModel|EString])?
	//	'}';
	public SUTElements getSUTAccess() {
		return pSUT;
	}
	
	public ParserRule getSUTRule() {
		return getSUTAccess().getRule();
	}
	
	//LoadGenerator:
	//	{LoadGenerator} isMonitor?='isMonitor'?
	//	'LoadGenerator'
	//	'{' ('hostname' hostname=EString)? ('ip' ip=EString)? ('hardware' hardware=HARDWARE)? ('sut' '(' sut+=[SUT|EString]
	//	("," sut+=[SUT|EString])* ')')? ('metricmodel' metricmodel=[MetricModel|EString])? ('monitor'
	//	monitor=[Monitor|EString])?
	//	'}';
	public LoadGeneratorElements getLoadGeneratorAccess() {
		return pLoadGenerator;
	}
	
	public ParserRule getLoadGeneratorRule() {
		return getLoadGeneratorAccess().getRule();
	}
	
	//Monitor:
	//	{Monitor}
	//	'Monitor'
	//	'{' ('hostname' hostname=EString)? ('ip' ip=EString)? ('hardware' hardware=HARDWARE)? ('sut' '(' sut+=[SUT|EString]
	//	("," sut+=[SUT|EString])* ')')?
	//	'}';
	public MonitorElements getMonitorAccess() {
		return pMonitor;
	}
	
	public ParserRule getMonitorRule() {
		return getMonitorAccess().getRule();
	}
	
	//MetricModel:
	//	{MetricModel}
	//	'MetricModel'
	//	'{' ('memory' memory=Memory)? ('disk' disk=Disk)? ('criteria' '{' criteria+=Criteria ("," criteria+=Criteria)* '}')?
	//	('threshold' '{' threshold+=Threshold ("," threshold+=Threshold)* '}')? ('diskCounter' diskCounter=Disk_IO_Counter)?
	//	('transactionCounter' transactionCounter=TransactionCounter)? ('memoryCounter' memoryCounter=MemoryCounter)?
	//	('metric' '{' metric+=Metric ("," metric+=Metric)* '}')? ('counter' '{' counter+=Counter ("," counter+=Counter)*
	//	'}')?
	//	'}';
	public MetricModelElements getMetricModelAccess() {
		return pMetricModel;
	}
	
	public ParserRule getMetricModelRule() {
		return getMetricModelAccess().getRule();
	}
	
	//Memory:
	//	{Memory}
	//	'Memory'
	//	name=EString
	//	'{' ('memoryCounter' memoryCounter=[MemoryCounter|EString])?
	//	'}';
	public MemoryElements getMemoryAccess() {
		return pMemory;
	}
	
	public ParserRule getMemoryRule() {
		return getMemoryAccess().getRule();
	}
	
	//Transaction:
	//	{Transaction}
	//	'Transaction'
	//	name=EString
	//	'{' ('transactionCounter' transactionCounter=[TransactionCounter|EString])?
	//	'}';
	public TransactionElements getTransactionAccess() {
		return pTransaction;
	}
	
	public ParserRule getTransactionRule() {
		return getTransactionAccess().getRule();
	}
	
	//Disk:
	//	{Disk}
	//	'Disk'
	//	name=EString
	//	'{' ('disk_io_counter' disk_io_counter=[Disk_IO_Counter|EString])?
	//	'}';
	public DiskElements getDiskAccess() {
		return pDisk;
	}
	
	public ParserRule getDiskRule() {
		return getDiskAccess().getRule();
	}
	
	//Criteria:
	//	{Criteria}
	//	'Criteria'
	//	'{' ('value' value=EInt)?
	//	'}';
	public CriteriaElements getCriteriaAccess() {
		return pCriteria;
	}
	
	public ParserRule getCriteriaRule() {
		return getCriteriaAccess().getRule();
	}
	
	//Threshold:
	//	{Threshold}
	//	'Threshold'
	//	'{' ('value' value=EInt)?
	//	'}';
	public ThresholdElements getThresholdAccess() {
		return pThreshold;
	}
	
	public ParserRule getThresholdRule() {
		return getThresholdAccess().getRule();
	}
	
	////AssociationCounterCriteriaThreshold returns canopusPerformanceMetric::AssociationCounterCriteriaThreshold:
	////	{canopusPerformanceMetric::AssociationCounterCriteriaThreshold}
	////	'AssociationCounterCriteriaThreshold'
	////	'{'
	////		('associationCriteria' associationCriteria=ASSOCIATION_CRITERIA)?
	////		('threshold' threshold=[canopusPerformanceMetric::Threshold|EString])?
	////		('criteria' criteria=[canopusPerformanceMetric::Criteria|EString])?
	////	'}';
	//Disk_IO_Counter:
	//	{Disk_IO_Counter}
	//	'Disk_IO_Counter'
	//	name=EString
	//	'{' ('counterDisk' '{' counterDisk+=COUNTER_DISK ("," counterDisk+=COUNTER_DISK)* '}')?
	//	//	('associationcountercriteriathreshold' '(' associationcountercriteriathreshold+=[canopusPerformanceMetric::AssociationCounterCriteriaThreshold|EString] ( "," associationcountercriteriathreshold+=[canopusPerformanceMetric::AssociationCounterCriteriaThreshold|EString])* ')' )?
	//	'}';
	public Disk_IO_CounterElements getDisk_IO_CounterAccess() {
		return pDisk_IO_Counter;
	}
	
	public ParserRule getDisk_IO_CounterRule() {
		return getDisk_IO_CounterAccess().getRule();
	}
	
	//TransactionCounter:
	//	{TransactionCounter}
	//	'TransactionCounter'
	//	name=EString
	//	'{' ('counterTransaction' '{' counterTransaction+=COUNTER_TRANSACTION ("," counterTransaction+=COUNTER_TRANSACTION)*
	//	'}')?
	//	//	('associationcountercriteriathreshold' '(' associationcountercriteriathreshold+=[canopusPerformanceMetric::AssociationCounterCriteriaThreshold|EString] ( "," associationcountercriteriathreshold+=[canopusPerformanceMetric::AssociationCounterCriteriaThreshold|EString])* ')' )?
	//	'}';
	public TransactionCounterElements getTransactionCounterAccess() {
		return pTransactionCounter;
	}
	
	public ParserRule getTransactionCounterRule() {
		return getTransactionCounterAccess().getRule();
	}
	
	//MemoryCounter:
	//	{MemoryCounter}
	//	'MemoryCounter'
	//	name=EString
	//	'{' ('counterMemory' '{' counterMemory+=COUNTER_MEMORY ("," counterMemory+=COUNTER_MEMORY)* '}')?
	//	//		('associationcountercriteriathreshold' '(' associationcountercriteriathreshold+=[canopusPerformanceMetric::AssociationCounterCriteriaThreshold|EString] ( "," associationcountercriteriathreshold+=[canopusPerformanceMetric::AssociationCounterCriteriaThreshold|EString])* ')' )?
	//	'}';
	public MemoryCounterElements getMemoryCounterAccess() {
		return pMemoryCounter;
	}
	
	public ParserRule getMemoryCounterRule() {
		return getMemoryCounterAccess().getRule();
	}
	
	//EInt ecore::EInt:
	//	'-'? INT;
	public EIntElements getEIntAccess() {
		return pEInt;
	}
	
	public ParserRule getEIntRule() {
		return getEIntAccess().getRule();
	}
	
	//EBoolean ecore::EBoolean:
	//	'true' | 'false';
	public EBooleanElements getEBooleanAccess() {
		return pEBoolean;
	}
	
	public ParserRule getEBooleanRule() {
		return getEBooleanAccess().getRule();
	}
	
	//EString:
	//	STRING | ID;
	public EStringElements getEStringAccess() {
		return pEString;
	}
	
	public ParserRule getEStringRule() {
		return getEStringAccess().getRule();
	}
	
	//enum HARDWARE:
	//	PHYSICAL_MACHINE | VIRTUAL_MACHINE | CLOUD_SERVICE;
	public HARDWAREElements getHARDWAREAccess() {
		return eHARDWARE;
	}
	
	public EnumRule getHARDWARERule() {
		return getHARDWAREAccess().getRule();
	}
	
	//enum SUT_TYPE:
	//	DESKTOPAPP | DATABASE | WEBAPP | WEBSERVICE;
	public SUT_TYPEElements getSUT_TYPEAccess() {
		return eSUT_TYPE;
	}
	
	public EnumRule getSUT_TYPERule() {
		return getSUT_TYPEAccess().getRule();
	}
	
	//enum ASSOCIATION_CRITERIA:
	//	BETWEEN | GREATER_THAN_OR_EQUAL_TO | LESS_THAN;
	public ASSOCIATION_CRITERIAElements getASSOCIATION_CRITERIAAccess() {
		return eASSOCIATION_CRITERIA;
	}
	
	public EnumRule getASSOCIATION_CRITERIARule() {
		return getASSOCIATION_CRITERIAAccess().getRule();
	}
	
	//enum COUNTER_DISK:
	//	AVG_DISK_SECS_TRANSFER_COUNTER | PERCENTAGE_IDLE_TIME_COUNTER | DISK_TRANSFERS_SEC_COUNTER |
	//	AVG_DISK_QUEUE_LENGTH_COUNTER | SPLIT_IO_SEC_COUNTER | FREE_MEGABYTES_COUNTER;
	public COUNTER_DISKElements getCOUNTER_DISKAccess() {
		return eCOUNTER_DISK;
	}
	
	public EnumRule getCOUNTER_DISKRule() {
		return getCOUNTER_DISKAccess().getRule();
	}
	
	//enum COUNTER_TRANSACTION:
	//	TRANSACTION_RESPONSE_TIME | TRANSACTION_PER_SECOND_TPS | TRANSACTION_SUCCESS_RATE;
	public COUNTER_TRANSACTIONElements getCOUNTER_TRANSACTIONAccess() {
		return eCOUNTER_TRANSACTION;
	}
	
	public EnumRule getCOUNTER_TRANSACTIONRule() {
		return getCOUNTER_TRANSACTIONAccess().getRule();
	}
	
	//enum COUNTER_MEMORY:
	//	AVALIABLE_MBYTES_COUNTER | PAGES_SEC_COUNTER | PAGE_READS_SEC_COUNTER | WORKING_SET_COUNTER |
	//	POOL_NONPAGE_BYTES_COUNTER | PAGED_POOL_BYTES_COUNTER | PAGED_POOL_FAILURES_COUNTER | CACHE_BYTES_COUNTER;
	public COUNTER_MEMORYElements getCOUNTER_MEMORYAccess() {
		return eCOUNTER_MEMORY;
	}
	
	public EnumRule getCOUNTER_MEMORYRule() {
		return getCOUNTER_MEMORYAccess().getRule();
	}
	
	//@Override
	//terminal ID:
	//	'^'? ('a'..'z' | 'A'..'Z' | '_') ('a'..'z' | 'A'..'Z' | '_' | '0'..'9')*;
	public TerminalRule getIDRule() {
		return tID;
	}
	
	//@Override
	//terminal INT returns ecore::EInt:
	//	'0'..'9'+;
	public TerminalRule getINTRule() {
		return tINT;
	}
	
	//@Override
	//terminal STRING:
	//	'"' ('\\' ('b' | 't' | 'n' | 'f' | 'r' | 'u' | '"' | "'" | '\\') | !('\\' | '"'))* '"' |
	//	"'" ('\\' ('b' | 't' | 'n' | 'f' | 'r' | 'u' | '"' | "'" | '\\') | !('\\' | "'"))* "'";
	public TerminalRule getSTRINGRule() {
		return tSTRING;
	}
	
	//@Override
	//terminal ML_COMMENT:
	//	'/*'->'*/';
	public TerminalRule getML_COMMENTRule() {
		return tML_COMMENT;
	}
	
	//@Override
	//terminal SL_COMMENT:
	//	'//' !('\n' | '\r')* ('\r'? '\n')?;
	public TerminalRule getSL_COMMENTRule() {
		return tSL_COMMENT;
	}
	
	//@Override
	//terminal WS:
	//	' ' | '\t' | '\r' | '\n'+;
	public TerminalRule getWSRule() {
		return tWS;
	}
	
	//@Override
	//terminal ANY_OTHER:
	//	.;
	public TerminalRule getANY_OTHERRule() {
		return tANY_OTHER;
	}
}
