grammar org.unipampa.lesse.XCanopus with org.eclipse.xtext.common.Terminals

generate xCanopus "http://www.unipampa.org/lesse/XCanopus"

import "http://www.eclipse.org/emf/2002/Ecore" as ecore
Model: 
	   includes += Include*
	   monitorings += Monitoring*
	   suts += SUT*
	   loadGenerators+=LoadGenerator*	   
; 


Include:
	'include' importURI=STRING 'as' name=ID
;


Monitoring:
	{Monitoring}
	'Monitoring'
	name=EString
	'{'
		('projectLabel' projectLabel=EString)?
		('projectAuthor' projectAuthor=EString)?
		('description' description=EString)?
		('suts' '{' suts+=SUT ( "," suts+=SUT)* '}' )?
		('loadGenerators' loadGenerators=LoadGenerator)?
		('monitors' monitors=Monitor)?
		('metricModel' '{' metricModel+=MetricModel ( "," metricModel+=MetricModel)* '}' )?
	'}';



Metric:
	Memory | Disk ;  // | Transaction;

Counter:
	Disk_IO_Counter | MemoryCounter | TransactionCounter;



SUT:
	{SUT}
	'SUT'
	'{'
		('hostname' hostname=EString)?
		('ip' ip=EString)?
		('hardware' hardware=HARDWARE)?
		('type' type=SUT_TYPE)?
		('sut' '(' sut+=[SUT|EString] ( "," sut+=[SUT|EString])* ')' )?
		('metricmodel' metricmodel=[MetricModel|EString])?
	'}';

LoadGenerator:
	{LoadGenerator}
	(isMonitor?='isMonitor')?
	'LoadGenerator'
	'{'
		('hostname' hostname=EString)?
		('ip' ip=EString)?
		('hardware' hardware=HARDWARE)?
		('sut' '(' sut+=[SUT|EString] ( "," sut+=[SUT|EString])* ')' )?
		('metricmodel' metricmodel=[MetricModel|EString])?
		('monitor' monitor=[Monitor|EString])?
	'}';

Monitor:
	{Monitor}
	'Monitor'
	'{'
		('hostname' hostname=EString)?
		('ip' ip=EString)?
		('hardware' hardware=HARDWARE)?
		('sut' '(' sut+=[SUT|EString] ( "," sut+=[SUT|EString])* ')' )?
	'}';

MetricModel:
	{MetricModel}
	'MetricModel'
	'{'
		('memory' memory=Memory)?
	//	('transaction' transaction=Transaction)?
		('disk' disk=Disk)?
		('criteria' '{' criteria+=Criteria ( "," criteria+=Criteria)* '}' )?
		('threshold' '{' threshold+=Threshold ( "," threshold+=Threshold)* '}' )?
	//	('associationcountercriteriathreshold' '{' associationcountercriteriathreshold+=AssociationCounterCriteriaThreshold ( "," associationcountercriteriathreshold+=AssociationCounterCriteriaThreshold)* '}' )?
		('diskCounter' diskCounter=Disk_IO_Counter)?
		('transactionCounter' transactionCounter=TransactionCounter)?
		('memoryCounter' memoryCounter=MemoryCounter)?
		('metric' '{' metric+=Metric ( "," metric+=Metric)* '}' )?
		('counter' '{' counter+=Counter ( "," counter+=Counter)* '}' )?
	'}';





Memory:
	{Memory}
	'Memory'
	name=EString
	'{'
		('memoryCounter' memoryCounter=[MemoryCounter|EString])?
	'}';

Transaction:
	{Transaction}
	'Transaction'
	name=EString
	'{'
		('transactionCounter' transactionCounter=[TransactionCounter|EString])?
	'}';

Disk:
	{Disk}
	'Disk'
	name=EString
	'{'
		('disk_io_counter' disk_io_counter=[Disk_IO_Counter|EString])?
	'}';

Criteria:
	{Criteria}
	'Criteria'
	'{'
		('value' value=EInt)?
	'}';

Threshold:
	{Threshold}
	'Threshold'
	'{'
		('value' value=EInt)?
	'}';

//AssociationCounterCriteriaThreshold returns canopusPerformanceMetric::AssociationCounterCriteriaThreshold:
//	{canopusPerformanceMetric::AssociationCounterCriteriaThreshold}
//	'AssociationCounterCriteriaThreshold'
//	'{'
//		('associationCriteria' associationCriteria=ASSOCIATION_CRITERIA)?
//		('threshold' threshold=[canopusPerformanceMetric::Threshold|EString])?
//		('criteria' criteria=[canopusPerformanceMetric::Criteria|EString])?
//	'}';

Disk_IO_Counter:
	{Disk_IO_Counter}
	'Disk_IO_Counter'
	name=EString
	'{'
		('counterDisk' '{' counterDisk+=COUNTER_DISK ( "," counterDisk+=COUNTER_DISK)* '}' )?
	//	('associationcountercriteriathreshold' '(' associationcountercriteriathreshold+=[canopusPerformanceMetric::AssociationCounterCriteriaThreshold|EString] ( "," associationcountercriteriathreshold+=[canopusPerformanceMetric::AssociationCounterCriteriaThreshold|EString])* ')' )?
	'}';

TransactionCounter:
	{TransactionCounter}
	'TransactionCounter'
	name=EString
	'{'
		('counterTransaction' '{' counterTransaction+=COUNTER_TRANSACTION ( "," counterTransaction+=COUNTER_TRANSACTION)* '}' )?
	//	('associationcountercriteriathreshold' '(' associationcountercriteriathreshold+=[canopusPerformanceMetric::AssociationCounterCriteriaThreshold|EString] ( "," associationcountercriteriathreshold+=[canopusPerformanceMetric::AssociationCounterCriteriaThreshold|EString])* ')' )?
	'}';

MemoryCounter:
	{MemoryCounter}
	'MemoryCounter'
	name=EString
	'{'
		('counterMemory' '{' counterMemory+=COUNTER_MEMORY ( "," counterMemory+=COUNTER_MEMORY)* '}' )?
//		('associationcountercriteriathreshold' '(' associationcountercriteriathreshold+=[canopusPerformanceMetric::AssociationCounterCriteriaThreshold|EString] ( "," associationcountercriteriathreshold+=[canopusPerformanceMetric::AssociationCounterCriteriaThreshold|EString])* ')' )?
	'}';

EInt returns ecore::EInt:
	'-'? INT;
	
EBoolean returns ecore::EBoolean:
	'true' | 'false';
	
EString returns ecore::EString:
	STRING | ID;
	
enum HARDWARE:
				PHYSICAL_MACHINE = 'PHYSICAL_MACHINE' | VIRTUAL_MACHINE = 'VIRTUAL_MACHINE' | CLOUD_SERVICE = 'CLOUD_SERVICE';

enum SUT_TYPE:
				DESKTOPAPP = 'DESKTOPAPP' | DATABASE = 'DATABASE' | WEBAPP = 'WEBAPP' | WEBSERVICE = 'WEBSERVICE';	

enum ASSOCIATION_CRITERIA:
				BETWEEN = 'BETWEEN' | GREATER_THAN_OR_EQUAL_TO = 'GREATER_THAN_OR_EQUAL_TO' | LESS_THAN = 'LESS_THAN';

enum COUNTER_DISK:
				AVG_DISK_SECS_TRANSFER_COUNTER = 'AVG_DISK_SECS_TRANSFER_COUNTER' | PERCENTAGE_IDLE_TIME_COUNTER = 'PERCENTAGE_IDLE_TIME_COUNTER' | DISK_TRANSFERS_SEC_COUNTER = 'DISK_TRANSFERS_SEC_COUNTER' | AVG_DISK_QUEUE_LENGTH_COUNTER = 'AVG_DISK_QUEUE_LENGTH_COUNTER' | SPLIT_IO_SEC_COUNTER = 'SPLIT_IO_SEC_COUNTER' | FREE_MEGABYTES_COUNTER = 'FREE_MEGABYTES_COUNTER';

enum COUNTER_TRANSACTION:
				TRANSACTION_RESPONSE_TIME = 'TRANSACTION_RESPONSE_TIME' | TRANSACTION_PER_SECOND_TPS = 'TRANSACTION_PER_SECOND_TPS' | TRANSACTION_SUCCESS_RATE = 'TRANSACTION_SUCCESS_RATE';

enum COUNTER_MEMORY:
				AVALIABLE_MBYTES_COUNTER = 'AVALIABLE_MBYTES_COUNTER' | PAGES_SEC_COUNTER = 'PAGES_SEC_COUNTER' | PAGE_READS_SEC_COUNTER = 'PAGE_READS_SEC_COUNTER' | WORKING_SET_COUNTER = 'WORKING_SET_COUNTER' | POOL_NONPAGE_BYTES_COUNTER = 'POOL_NONPAGE_BYTES_COUNTER' | PAGED_POOL_BYTES_COUNTER = 'PAGED_POOL_BYTES_COUNTER' | PAGED_POOL_FAILURES_COUNTER = 'PAGED_POOL_FAILURES_COUNTER' | CACHE_BYTES_COUNTER = 'CACHE_BYTES_COUNTER';
				
				
@Override 
terminal ID: 
    '^'?('a'..'z'|'A'..'Z'|'_')('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;
 
@Override 
terminal INT returns ecore::EInt: 
    ('0'..'9')+;
 
@Override 
terminal STRING: 
    '"' ( '\\'('b'|'t'|'n'|'f'|'r'|'u'|'"'|"'"|'\\') | !('\\'|'"') )* '"' |
    "'" ( '\\'('b'|'t'|'n'|'f'|'r'|'u'|'"'|"'"|'\\') | !('\\'|"'") )* "'";
 
@Override 
terminal ML_COMMENT: 
    '/*' -> '*/';
 
@Override 
terminal SL_COMMENT: 
    '//' !('\n'|'\r')* ('\r'? '\n')?;
 
@Override 
terminal WS: 
    (' '|'\t'|'\r'|'\n')+;
 
@Override 
terminal ANY_OTHER: 
    .;		
