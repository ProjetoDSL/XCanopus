grammar org.unipampa.lesse.XCanopus with org.eclipse.xtext.common.Terminals hidden (WS, ML_COMMENT, SL_COMMENT) 


generate xCanopus "http://www.unipampa.org/lesse/XCanopus"


import "http://www.eclipse.org/emf/2002/Ecore" as ecore


Model: 
     main+=Main*
; 


Main:
	main+=(Include | MetricModel | SCENARIO | SUT | USERPROFILE | SCRIPT | TRANSACTION)
;

Include:
	'include' importURI=STRING 'as' name=ID
;

Parameter:
	archive=[Include|ID] '.' column=STRING '.' line=STRING
;

MetricModel:
	'Feature:'  FREETEXT '.'
	'Monitoring:'  name=ID  'description'   FREETEXT   '{'
	     (steps+=STEPSMETRYCMODEL)+ 
	'}'
;

// '|' choice
// '?' optional
// '+' 1 or more
// '*' 0 or more
// '+=' list of elements
// 0 or more strings

// ##################################################################################################################################################################################################
// ##################################################### METRIC MODEL RULES #########################################################################################################################
// ##################################################################################################################################################################################################

STEPSMETRYCMODEL: given | when_memory | when_processor | when_disk | when_network | when_web_resources | when_transaction | when_process | and_workload | and_atleast | and_the_scenario;

and_workload:
	'And'  'workload generated through'  sut1=[SUT|ADRESS]  'load generator for the'  suttype=SUT_TYPE  'on'  sut2=[SUT|ADRESS]
;
and_the_scenario:
	'And'  'the'  scenario=[SCENARIO|ID]  'test scenario' 
;

and_atleast:
	'And'  'at least'  integer1=EInt  'MB when the number of virtual users' ('is greater than or equal to' | 'is less than' | 'is more than' | 'is lesser than or equal to' | 'are between')  integer2=EInt (AND  integer8=EInt)?
;
//
// When About Memory
//
when_memory:
	'When' 'the' 'Memory' 'is monitored'
	('Then'  'the'  (availablembytescounter = 'available mbytes counter' | 
	pagesseccounter = 'pages/sec counter' |
	pagesreadsseccounter = 'page reads/sec counter' |
	workingsetcounter = 'working set counter' |
	poolnonpagedbytescounter = 'pool nonpaged bytes counter' | 
	pagedpoolbytescounter = 'paged pool bytes counter' | 
	pagedpoolfailurescounter = 'pages pool failures counter' | 
	cachebytescounter = 'cache bytes counter' ) 
	('should be less than' | 'should be at least' | 'should be greater than')  integer1=EInt  'MB when the number of virtual users' ('is greater than or equal to' | 'is less than' | 'is more than' | 'is lesser than or equal to' | 'are between')   integer2=EInt  (AND  integer3=EInt)? )
	

	('And'  'at least'  integer4=EInt  'MB when the number of virtual users' ('is greater than or equal to' | 'is less than' | 'is more than' | 'is lesser than or equal to')   integer5=EInt (AND  integer8=EInt)?)*
	
		
	('And' 'the' (availablembytescounter = 'available mbytes counter' | 
	pagesseccounter = 'pages/sec counter' |
	pagesreadsseccounter = 'page reads/sec counter' |
	workingsetcounter = 'working set counter' |
	poolnonpagedbytescounter = 'pool nonpaged bytes counter' | 
	pagedpoolbytescounter = 'paged pool bytes counter' | 
	pagedpoolfailurescounter = 'pages pool failures counter' | 
	cachebytescounter = 'cache bytes counter' ) 
	('should be less than' | 'should be at least' | 'should be greater than')  integer6+=EInt  'MB when the number of virtual users' ('is greater than or equal to' | 'is less than' | 'is more than' | 'is lesser than or equal to' | 'are between')   integer7=EInt  (AND  integer8=EInt)? )* 
	
	('And'  'at least'  integer9=EInt  'MB when the number of virtual users' ('is greater than or equal to' | 'is less than' | 'is more than' | 'is lesser than or equal to' | 'are between')  integer10=EInt (AND  integer8=EInt)?)*
	;
	
//enum coisa:
//	um ='MB when the number of virtual users is greater than or equal to' |dois = 'MB when the number of virtual users is less than' | tres = 'MB when the number of virtual users is more than' | quatro = 'MB when the number of virtual users is lesser than or equal to'
//;

//
// When About Processor
//
when_processor:
	'When'  'the'  'Processor'  'is monitored'
	('Then'  'the'  (processortimecounter = '% processor time counter' | 
	privilegedtimecounter = '% privileged time counter' |
	interrupttimecounter = '% interrupt time counter' |
	processorqueuelenghtcounter = 'processor queue lenght counter' |
	contextswitchescounter = 'context switches counter' |
	systemuptimecounter = 'system up time counter') 
	('should be less than' | 'should be at least' | 'should be greater than')  integer1=EInt  'MB when the number of virtual users' ('is greater than or equal to' | 'is less than' | 'is more than' | 'is lesser than or equal to' | 'are between')  integer2=EInt  (AND  integer3=EInt)? )
	
	
	
	('And'  'at least'  integer4=EInt  'MB when the number of virtual users' ('is greater than or equal to' | 'is less than' | 'is more than' | 'is lesser than or equal to' | 'are between')  integer5=EInt (AND  integer8=EInt)?)*
		
	('And' 'the'(processortimecounter = '% processor time counter' | 
	privilegedtimecounter = '% privileged time counter' |
	interrupttimecounter = '% interrupt time counter' |
	processorqueuelenghtcounter = 'processor queue lenght counter' |
	contextswitchescounter = 'context switches counter' |
	systemuptimecounter = 'system up time counter') 
	('should be less than' | 'should be at least' | 'should be greater than')  integer6=EInt  'MB when the number of virtual users' ('is greater than or equal to' | 'is less than' | 'is more than' | 'is lesser than or equal to' | 'are between')   integer7=EInt  (AND  integer8=EInt)? )* 
	
	('And'  'at least'  integer9=EInt  'MB when the number of virtual users' ('is greater than or equal to' | 'is less than' | 'is more than' | 'is lesser than or equal to' | 'are between')  integer10=EInt (AND  integer8=EInt)?)*
	
;
//
// When About Disk
//
when_disk:
	'When'  'the'  'Disk'  'is monitored'
	('Then'  'the'  (avgdisksecstransfercounter = 'average disk secs/transfer counter' |
	idletimecounter = '% idle time counter' | 
	avgdiskqueuelenghtcounter = 'average disk queue lenght counter' |
	splitioseccounter = 'split io/sec counter' |
	freemegabytescounter = 'free megabytes counter') 
	('should be less than' | 'should be at least' | 'should be greater than')  integer1=EInt  'MB when the number of virtual users' ('is greater than or equal to' | 'is less than' | 'is more than' | 'is lesser than or equal to' | 'are between')  integer2=EInt (AND  integer3=EInt)? )
	
	('And'  'at least'  integer=EInt  'MB when the number of virtual users' ('is greater than or equal to' | 'is less than' | 'is more than' | 'is lesser than or equal to' | 'are between')  integer5=EInt (AND  integer8=EInt)?)*
	
		
	('And' 'the' (avgdisksecstransfercounter = 'average disk secs/transfer counter' |
	idletimecounter = '% idle time counter' | 
	avgdiskqueuelenghtcounter = 'average disk queue lenght counter' |
	splitioseccounter = 'split io/sec counter' |
	freemegabytescounter = 'free megabytes counter')  
	('should be less than' | 'should be at least' | 'should be greater than')  integer6=EInt  'MB when the number of virtual users' ('is greater than or equal to' | 'is less than' | 'is more than' | 'is lesser than or equal to' | 'are between')   integer7=EInt  (AND  integer8=EInt)? )* 
	
	('And'  'at least'  integer9=EInt  'MB when the number of virtual users' ('is greater than or equal to' | 'is less than' | 'is more than' | 'is lesser than or equal to' | 'are between')  integer10=EInt (AND  integer8=EInt)?)*

;
//
// When About Network
//
when_network:
	'When'  'the'  'Network'  'is monitored'
	('Then'  'the'  (bytestotalsec = 'bytes total/sec' |
	serverbytestotalsec = 'server bytes total/sec' |
	datagramssec = 'datagrams/sec' |
	connectionsestablished = 'connections established' |
	segmentsreceivedsec = 'segments received/sec' |
	interrupttime = '% interrupt time') 
	('should be less than' | 'should be at least' | 'should be greater than')  integer1=EInt  'MB when the number of virtual users' ('is greater than or equal to' | 'is less than' | 'is more than' | 'is lesser than or equal to' | 'are between')  integer2=EInt  (AND  integer3=EInt)? )
	
	('And'  'at least'  integer4=EInt  'MB when the number of virtual users' ('is greater than or equal to' | 'is less than' | 'is more than' | 'is lesser than or equal to' | 'are between')  integer5=EInt (AND  integer8=EInt)?)*
	
		
	('And' 'the' (bytestotalsec = 'bytes total/sec' |
	serverbytestotalsec = 'server bytes total/sec' |
	datagramssec = 'datagrams/sec' |
	connectionsestablished = 'connections established' |
	segmentsreceivedsec = 'segments received/sec' |
	interrupttime = '% interrupt time')  
	('should be less than' | 'should be at least' | 'should be greater than')  integer6=EInt  'MB when the number of virtual users' ('is greater than or equal to' | 'is less than' | 'is more than' | 'is lesser than or equal to' | 'are between')   integer7=EInt  (AND  integer8=EInt)? )* 
	
	('And'  'at least'  integer9=EInt  'MB when the number of virtual users' ('is greater than or equal to' | 'is less than' | 'is more than' | 'is lesser than or equal to' | 'are between')  integer10=EInt (AND  integer8=EInt)?)*
	
	
;
//
// When about Web Resources
//
when_web_resources:
	'When'  'the'  'Web resources'  'is monitored'
	('Then'  'the'  (throughputmbytes = 'throughput mbytes'  |
	hitspersecond = 'hits per second' |
	httpresponsespersecond = 'http responses per second' |
	pagesdownloadedpersecond = 'pages downlaoded per second' |
	connections = 'connections' |
	sslpersecond = 'ssl per second') 
	('should be less than' | 'should be at least' | 'should be greater than')  integer1=EInt  'MB when the number of virtual users' ('is greater than or equal to' | 'is less than' | 'is more than' | 'is lesser than or equal to' | 'are between')  integer2=EInt  (AND  integer3=EInt)? )
	
	('And'  'at least'  integer4=EInt  'MB when the number of virtual users' ('is greater than or equal to' | 'is less than' | 'is more than' | 'is lesser than or equal to' | 'are between')  integer5=EInt (AND  integer8=EInt)?)*
	
		
	('And' 'the' (throughputmbytes = 'throughput mbytes'  |
	hitspersecond = 'hits per second' |
	httpresponsespersecond = 'http responses per second' |
	pagesdownloadedpersecond = 'pages downlaoded per second' |
	connections = 'connections' |
	sslpersecond = 'ssl per second')  
	('should be less than' | 'should be at least' | 'should be greater than')  integer6=EInt  'MB when the number of virtual users' ('is greater than or equal to' | 'is less than' | 'is more than' | 'is lesser than or equal to' | 'are between')  integer7=EInt  (AND  integer8=EInt)? )* 
	
	('And'  'at least'  integer9=EInt  'MB when the number of virtual users' ('is greater than or equal to' | 'is less than' | 'is more than' | 'is lesser than or equal to' | 'are between')  integer10=EInt (AND  integer8=EInt)?)*
	
;
//
// When about Transaction
//
when_transaction:
	'When'  'the'  'Transaction'  'is monitored'
	('Then'  'the'  (transactionresponsetime  = 'transactions response time' | 
    transactionspersecond = 'transactions per second' | 
    transactionsuccessrate = 'transactions success rate') 
	('should be less than' | 'should be at least' | 'should be greater than')  integer1=EInt 'MB when the number of virtual users' ('is greater than or equal to' | 'is less than' | 'is more than' | 'is lesser than or equal to' | 'are between')  integer2=EInt  (AND  integer3=EInt)? )
	
	
	('And'  'at least'  integer4=EInt  'MB when the number of virtual users' ('is greater than or equal to' | 'is less than' | 'is more than' | 'is lesser than or equal to' | 'are between')  integer5=EInt (AND  integer8=EInt)?)*
	
		
	('And' 'the' (transactionresponsetime  = 'transactions response time' | 
    transactionspersecond = 'transactions per second' | 
    transactionsuccessrate = 'transactions success rate')   
	('should be less than' | 'should be at least' | 'should be greater than')  integer6=EInt  'MB when the number of virtual users' ('is greater than or equal to' | 'is less than' | 'is more than' | 'is lesser than or equal to' | 'are between')  integer7=EInt  (AND  integer8=EInt)? )* 
	
	('And'  'at least'  integer9=EInt  'MB when the number of virtual users' ('is greater than or equal to' | 'is less than' | 'is more than' | 'is lesser than or equal to' | 'are between')  integer10=EInt (AND  integer8=EInt)?)*
	

;
//
// When About Process
//
when_process:
	'When'  'the'  'Process'  'is monitored'
	('Then'  'the'  (exceptionofexcepthrownsec = 'exception # of except thrown/sec' |
    exceptionthrowtocatchdepthsec = 'exception throw to catch depth/sec' |
    memorylargeobjectheapsize = 'mem large object heap size' |
    memorybytesinallheaps = 'mem # bytes in all heaps' |
    memoryofpinnedibjects = 'mem # of pinned objects') 
	('should be less than' | 'should be at least' | 'should be greater than')  integer1=EInt  'MB when the number of virtual users' ('is greater than or equal to' | 'is less than' | 'is more than' | 'is lesser than or equal to' | 'are between') integer2=EInt  (AND  integer3=EInt)? )
	
	('And'  'at least'  integer4=EInt  'MB when the number of virtual users' ('is greater than or equal to' | 'is less than' | 'is more than' | 'is lesser than or equal to' | 'are between')  integer5=EInt  (AND  integer3=EInt)? )*
	
		
	('And' 'the' (exceptionofexcepthrownsec = 'exception # of except thrown/sec' |
    exceptionthrowtocatchdepthsec = 'exception throw to catch depth/sec' |
    memorylargeobjectheapsize = 'mem large object heap size' |
    memorybytesinallheaps = 'mem # bytes in all heaps' |
    memoryofpinnedibjects = 'mem # of pinned objects')  
	('should be less than' | 'should be at least' | 'should be greater than')  integer6=EInt 'MB when the number of virtual users' ('is greater than or equal to' | 'is less than' | 'is more than' | 'is lesser than or equal to' | 'are between')   integer7=EInt  (AND  integer8=EInt)? )* 
	
	('And'  'at least'  integer9=EInt  'MB when the number of virtual users' ('is greater than or equal to' | 'is less than' | 'is more than' | 'is lesser than or equal to' | 'are between')  integer10=EInt (AND  integer11=EInt)?)*
	

;
given:
	'Given'  'that'  sut1=[SUT|ADRESS]   suttype=SUT_TYPE   'monitored by'  sut2=[SUT|ADRESS]   'monitor'
;

// ##################################################################################################################################################################################################
// ##################################################################################################################################################################################################
// ##################################################################################################################################################################################################


// ##################################################################################################################################################################################################
// ##################################################### SCENARIO RULES #########################################################################################################################
// ##################################################################################################################################################################################################


SCENARIO:
//	'Feature' ':' FREETEXT '.'
	
	//################### WORKLOAD #############################
	'Scenario:' 'Evaluate the' name=ID 'workload for' integer1=EInt 'users simultaneosly' '{'
	'Given' integer2=EInt 'users enter the system every' time1=HOUR
	'And' integer3=EInt 'users leave the system every' time2=HOUR
	'And' integer4=EInt 'users register into the system simultaneously'
	'And' 'performance testing execution during' time3=HOUR	
	
	
	//################## scripts of this workload ######################
	(('When' percents1+=EInt 'percent' 'of the virtual users execute the' userprofile=[USERPROFILE|ID] 'user profile:'
	'Then' percents+=EInt 'percent' 'of them execute' script=[SCRIPT|ID] 'script')
	('And' percent3+=EInt 'percent' 'of them execute' scripts+=[SCRIPT|ID] 'script')*)*	
	'}'
;
	
USERPROFILE:
	'User profile' '{'
	name=ID
	'}'
;

// ##################################################################################################################################################################################################
// ##################################################################################################################################################################################################
// ##################################################################################################################################################################################################


// ##################################################################################################################################################################################################
// ##################################################### SCRIPT RULES #########################################################################################################################
// ##################################################################################################################################################################################################


SCRIPT:
	'Script:' FREETEXT 'based on ' testcaseidentifier=FREETEXT 'from' name=ID '{'
	'Given' 'the' transaction1=[TRANSACTION|ID] 'transaction activity through' FREETEXT 'action, which is loaded in' (EInt | EDouble) 'seconds'
	stepswhen=SCRIPTSTEPSWHEN 
	(('then' 'i will be taken to' FREETEXT  'action in the' transactions+=[TRANSACTION|ID] 'transaction activity, which is loaded in' seconds+=EDouble 'seconds')
	steps+=(SCRIPTSTEPSAND)*)*
	'}'
;

SCRIPTSTEPSWHEN: WhenIClick | WhenIPress |  WhenISelect |  WhenIFill;

WhenIClick:
	'when i click' 'on' FREETEXT 'link'  archive=Parameter /* SOMETHING PARAMETRIZED */ ('which is dynamycally generated and update on') ('Each Interaction') 'based on a' ('random' | 'same as type') 'strategy'
;

WhenIPress:
	'when i press' 'the' FREETEXT 'button' archive=Parameter /* SOMETHING PARAMETRIZED */
;

WhenISelect:
	'when i select' FREETEXT 'drop-down list with' archive=Parameter /* something parametrized */ 'which is dynamically generated and update on' ('Each Interaction') 'based on a' ('random' | 'same as type') 'strategy'
;

WhenIFill:
	'when i fill in' FREETEXT 'input field within'  archive=Parameter /* something parametrized */ 'which is dynamically generated and update on' ('Each Interaction') 'based on a' ('random' | 'same as type') 'strategy'
;


SCRIPTSTEPSAND: AndIClick |  AndIPress | AndISelect | AndIFill | AndINeedToWait ;

AndIClick:
	'and i click on' FREETEXT  'link' archive=Parameter /* SOMETHING PARAMETRIZED */ 'which is dynamically generated and update on' ('Each Interaction') 'based on a' ('random' | 'same as type') 'strategy'
;

AndIPress:
	'and i press the' FREETEXT  'button' archive=Parameter /* SOMETHING PARAMETRIZED */ 
;

AndISelect:
	'and i select' FREETEXT 'drop-down list with' archive=Parameter /* something parametrized */ 'which is dynamically generated and update on' ('Each Interaction') 'based on a' ('random' | 'same as type') 'strategy'
;

AndIFill:
	'and i fill in' FREETEXT 'input field within' archive=Parameter /* something parametrized */ 'which is dynamically generated and update on' ('Each Interaction') 'based on a' ('random' | 'same as type') 'strategy'
;

AndINeedToWait:
	'and i need to wait thinking time during' hour=HOUR 
;





TRANSACTION:
	'Transaction' '{'
	name=ID
	'}'
;

SUT:
	{SUT}
	'SUT'
	'{'
		name=ADRESS
	//	('hostname' hostname=EString)?
	//	('ip' ip=EString)?
	//	('hardware' hardware=HARDWARE)?
	//	'type' type=SUT_TYPE
	//	('sut' '(' sut+=[SUT|EString] ( "," sut+=[SUT|EString])* ')' )?
	//	('metricmodel' metricmodel=[MetricModel|EString])?
	'}';

//LoadGenerator:
//	{LoadGenerator}
//	(isMonitor?='isMonitor')?
//	'LoadGenerator'
//	'{'
//		('hostname' hostname=EString)?
//		('ip' ip=EString)?
//		('hardware' hardware=HARDWARE)?
//		('sut' '(' sut+=[SUT|EString] ( "," sut+=[SUT|EString])* ')' )?
//		('metricmodel' metricmodel=[MetricModel|EString])?
//		('monitorr' monitor=[Monitor|EString])?
//	'}';

//Monitor:
//	{Monitor}
//	'Monitor'
//	'{'
//		('hostname' hostname=EString)?
//		('ip' ip=EString)?
//		('hardware' hardware=HARDWARE)?
//		('sut' '(' sut+=[SUT|EString] ( "," sut+=[SUT|EString])* ')' )?
//	'}';

EInt returns ecore::EInt:
	'-'? INT;
	
EBoolean returns ecore::EBoolean:
	'true' | 'false';
	
EString returns ecore::EString:
	STRING | ID
;

EDouble returns ecore::EDouble:
	INT '.' INT
;

enum HARDWARE:
				PHYSICAL_MACHINE = 'PHYSICAL_MACHINE' | VIRTUAL_MACHINE = 'VIRTUAL_MACHINE' | CLOUD_SERVICE = 'CLOUD_SERVICE';
enum SUT_TYPE:
				DESKTOPAPP = 'DESKTOPAPP' | DATABASE = 'DATABASE' | WEBAPP = 'WEBAPP' | WEBSERVICE = 'WEBSERVICE';	

HOUR:	
	 EInt ':' EInt ':' EInt
;
//enum COUNTER_DISK:
//				AVG_DISK_SECS_TRANSFER_COUNTER = 'AVG_DISK_SECS_TRANSFER_COUNTER' | PERCENTAGE_IDLE_TIME_COUNTER = 'PERCENTAGE_IDLE_TIME_COUNTER' | DISK_TRANSFERS_SEC_COUNTER = 'DISK_TRANSFERS_SEC_COUNTER' | AVG_DISK_QUEUE_LENGTH_COUNTER = 'AVG_DISK_QUEUE_LENGTH_COUNTER' | SPLIT_IO_SEC_COUNTER = 'SPLIT_IO_SEC_COUNTER' | FREE_MEGABYTES_COUNTER = 'FREE_MEGABYTES_COUNTER';

//enum COUNTER_TRANSACTION:
//				TRANSACTION_RESPONSE_TIME = 'TRANSACTION_RESPONSE_TIME' | TRANSACTION_PER_SECOND_TPS = 'TRANSACTION_PER_SECOND_TPS' | TRANSACTION_SUCCESS_RATE = 'TRANSACTION_SUCCESS_RATE';

//enum COUNTER_MEMORY:
//				AVALIABLE_MBYTES_COUNTER = 'AVALIABLE_MBYTES_COUNTER' | PAGES_SEC_COUNTER = 'PAGES_SEC_COUNTER' | PAGE_READS_SEC_COUNTER = 'PAGE_READS_SEC_COUNTER' | WORKING_SET_COUNTER = 'WORKING_SET_COUNTER' | POOL_NONPAGE_BYTES_COUNTER = 'POOL_NONPAGE_BYTES_COUNTER' | PAGED_POOL_BYTES_COUNTER = 'PAGED_POOL_BYTES_COUNTER' | PAGED_POOL_FAILURES_COUNTER = 'PAGED_POOL_FAILURES_COUNTER' | CACHE_BYTES_COUNTER = 'CACHE_BYTES_COUNTER';
	
	
	
//terminal 'should be less than':'should be less than';
//terminal 'should be at least':'should be at least';
//terminal 'should be greater than':'should be more than';

//terminal 'when the number of virtual users is less than':'when the number of virtual users is less than';
//terminal 'when the number of virtual users is greater than':'when the number of virtual users is greater than';
//terminal 'when the number of virtual users is greater or equal to':'when the number of virtual users is greater or equal to';
//terminal 'when the number of virtual users is lesser or equal to':'when the number of virtual users is lesser or equal to';
//terminal 'when the number of virtual users are between':'when the number of virtual users are between';	
//
//terminal 'monitor':'monitor';
//terminal MONITOREDBY:'monitored by';

terminal fragment NNL: !('\r' | '\n');
terminal fragment NL: '\r'? '\n'?;
 

@Override
terminal ID: 
    '^'?('a'..'z'|'A'..'Z'|'_')('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;
  
@Override
terminal INT returns ecore::EInt: 
    ('0'..'9')+;
    
terminal ADRESS:
	'#' -> '#' 
;

terminal AND:'&';
//terminal DOUBLE returns ecore::EDouble:
//	INT . INT
//;
 
//@Override 
//terminal STRING: 
//    '"' ( '\\'('b'|'t'|'n'|'f'|'r'|'u'|'"'|"'"|'\\') | !('\\'|'"') )* '"' |
//    "'" ( '\\'('b'|'t'|'n'|'f'|'r'|'u'|'"'|"'"|'\\') | !('\\'|"'") )* "'"
//;

terminal PERCEIINT:
	('0'..'9')+ '%'
; 
 
terminal FREETEXT:
	'"' -> '"'
; 

terminal BETWEENHASH:
	'#' (!'#') '#' 
; 

@Override 
terminal ML_COMMENT: 
    '/*' -> '*/';
 
@Override 
terminal SL_COMMENT: 
    '//' !('\n'|'\r')* ('\r'? '\n')?;
 
@Override 
terminal WS: 
    (' '|'\t'|'\r'|'\n')+;
 
@Override 
terminal ANY_OTHER: 
.;

